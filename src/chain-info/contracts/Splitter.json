{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_name",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "payees",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares_",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "recipient",
          "type": "string"
        }
      ],
      "name": "ERC20PaymentReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "PayeeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReleased",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "name": "_addPayee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addresstoname",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "bulkReleaseERC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "payee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "releasable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "releasableERC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "releaseERC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "released",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "releasedERC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "totalERCReleased",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalReleased",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "4": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "5": "contracts/splitter.sol"
  },
  "ast": {
    "absolutePath": "contracts/splitter.sol",
    "exportedSymbols": {
      "Address": [
        1223
      ],
      "Context": [
        1245
      ],
      "IERC20": [
        1323
      ],
      "Ownable": [
        704
      ],
      "SafeERC20": [
        928
      ],
      "Splitter": [
        599
      ]
    },
    "id": 600,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "111:23:5"
      },
      {
        "absolutePath": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 600,
        "sourceUnit": 929,
        "src": "136:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 600,
        "sourceUnit": 1224,
        "src": "202:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 600,
        "sourceUnit": 1246,
        "src": "254:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 600,
        "sourceUnit": 705,
        "src": "306:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1245,
              "src": "1608:7:5"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "1608:7:5"
          },
          {
            "baseName": {
              "id": 9,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 704,
              "src": "1617:7:5"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "1617:7:5"
          }
        ],
        "canonicalName": "Splitter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "360:1226:5",
          "text": " @title PaymentSplitter\n @dev This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware\n that the Ether will be split in this way, since it is handled transparently by the contract.\n The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each\n account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim\n an amount proportional to the percentage of total shares they were assigned. The distribution of shares is set at the\n time of contract deployment and can't be updated thereafter.\n `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the\n accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release}\n function.\n NOTE: This contract assumes that ERC20 tokens will behave similarly to native tokens (Ether). Rebasing tokens, and\n tokens that apply fees during transfers, are likely to not be supported as expected. If in doubt, we encourage you\n to run tests before sending real value to this contract."
        },
        "fullyImplemented": true,
        "id": 599,
        "linearizedBaseContracts": [
          599,
          704,
          1245
        ],
        "name": "Splitter",
        "nameLocation": "1596:8:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 18,
            "name": "PayeeAdded",
            "nameLocation": "1637:10:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1656:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "1648:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1673:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "1665:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1688:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "1681:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1647:46:5"
            },
            "src": "1631:63:5"
          },
          {
            "anonymous": false,
            "id": 24,
            "name": "PaymentReleased",
            "nameLocation": "1705:15:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1729:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "1721:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1721:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1741:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "1733:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1720:28:5"
            },
            "src": "1699:50:5"
          },
          {
            "anonymous": false,
            "id": 35,
            "name": "ERC20PaymentReleased",
            "nameLocation": "1760:20:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1796:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1781:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1323",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 26,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1323,
                      "src": "1781:6:5"
                    },
                    "referencedDeclaration": 1323,
                    "src": "1781:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1323",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1811:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1803:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1823:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1815:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1843:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1831:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1780:73:5"
            },
            "src": "1754:100:5"
          },
          {
            "anonymous": false,
            "id": 41,
            "name": "PaymentReceived",
            "nameLocation": "1865:15:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1889:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "1881:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1903:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "1895:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1880:30:5"
            },
            "src": "1859:52:5"
          },
          {
            "constant": false,
            "id": 43,
            "mutability": "mutable",
            "name": "_totalShares",
            "nameLocation": "1933:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 599,
            "src": "1917:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1917:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "_totalReleased",
            "nameLocation": "1967:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 599,
            "src": "1951:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1951:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "e6e11565",
            "id": 49,
            "mutability": "mutable",
            "name": "addresstoname",
            "nameLocation": "2022:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 599,
            "src": "1988:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 48,
              "keyType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1996:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1988:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 47,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2007:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "_shares",
            "nameLocation": "2077:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 599,
            "src": "2041:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 50,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2049:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2041:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 51,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2060:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "_released",
            "nameLocation": "2126:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 599,
            "src": "2090:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 56,
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2098:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2090:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 55,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2109:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "_payees",
            "nameLocation": "2159:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 599,
            "src": "2141:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 58,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2141:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 59,
              "nodeType": "ArrayTypeName",
              "src": "2141:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "_erc20TotalReleased",
            "nameLocation": "2208:19:5",
            "nodeType": "VariableDeclaration",
            "scope": 599,
            "src": "2173:54:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1323_$_t_uint256_$",
              "typeString": "mapping(contract IERC20 => uint256)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 62,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 61,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1323,
                  "src": "2181:6:5"
                },
                "referencedDeclaration": 1323,
                "src": "2181:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$1323",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "2173:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1323_$_t_uint256_$",
                "typeString": "mapping(contract IERC20 => uint256)"
              },
              "valueType": {
                "id": 63,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2191:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 72,
            "mutability": "mutable",
            "name": "_erc20Released",
            "nameLocation": "2288:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 599,
            "src": "2233:69:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1323_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 67,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1323,
                  "src": "2241:6:5"
                },
                "referencedDeclaration": 1323,
                "src": "2241:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$1323",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "2233:46:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1323_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
              },
              "valueType": {
                "id": 70,
                "keyType": {
                  "id": 68,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2259:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2251:27:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 69,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2270:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "2749:346:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 86,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "2767:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2767:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 88,
                            "name": "shares_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "2784:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2784:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2767:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a2070617965657320616e6420736861726573206c656e677468206d69736d61746368",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2800:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5e39d6690ea50b22e040fe9ba22acf868e3d7f78e6ca8dc7ae3224a0aade89f",
                          "typeString": "literal_string \"PaymentSplitter: payees and shares length mismatch\""
                        },
                        "value": "PaymentSplitter: payees and shares length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5e39d6690ea50b22e040fe9ba22acf868e3d7f78e6ca8dc7ae3224a0aade89f",
                          "typeString": "literal_string \"PaymentSplitter: payees and shares length mismatch\""
                        }
                      ],
                      "id": 85,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2759:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:94:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2759:94:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 95,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "2871:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2871:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2887:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2871:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206e6f20706179656573",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2890:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1437b0f4053e38629626a98d8100226576b62fcebc211e7a49225bd05994643",
                          "typeString": "literal_string \"PaymentSplitter: no payees\""
                        },
                        "value": "PaymentSplitter: no payees"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1437b0f4053e38629626a98d8100226576b62fcebc211e7a49225bd05994643",
                          "typeString": "literal_string \"PaymentSplitter: no payees\""
                        }
                      ],
                      "id": 94,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2863:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2863:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "2863:56:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 103,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "2937:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2937:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 105,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "2953:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2953:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2937:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2929:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2929:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "2929:38:5"
                },
                {
                  "body": {
                    "id": 133,
                    "nodeType": "Block",
                    "src": "3022:67:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 122,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76,
                                "src": "3046:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "id": 124,
                              "indexExpression": {
                                "id": 123,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "3052:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3046:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 125,
                                "name": "payees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79,
                                "src": "3056:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 127,
                              "indexExpression": {
                                "id": 126,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "3063:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3056:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 128,
                                "name": "shares_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "3067:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 130,
                              "indexExpression": {
                                "id": 129,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "3075:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3067:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 121,
                            "name": "_addPayee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 598,
                            "src": "3036:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,address,uint256)"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3036:42:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 132,
                        "nodeType": "ExpressionStatement",
                        "src": "3036:42:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 114,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "2998:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 115,
                        "name": "payees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "3002:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3002:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2998:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 134,
                  "initializationExpression": {
                    "assignments": [
                      111
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 111,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2991:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 134,
                        "src": "2983:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2983:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 113,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2995:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2983:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3017:3:5",
                      "subExpression": {
                        "id": 118,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "3017:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 120,
                    "nodeType": "ExpressionStatement",
                    "src": "3017:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "2978:111:5"
                }
              ]
            },
            "documentation": {
              "id": 73,
              "nodeType": "StructuredDocumentation",
              "src": "2309:341:5",
              "text": " @dev Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at\n the matching position in the `shares` array.\n All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no\n duplicates in `payees`."
            },
            "id": 136,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2683:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2667:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2667:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 75,
                    "nodeType": "ArrayTypeName",
                    "src": "2667:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "payees",
                  "nameLocation": "2707:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2690:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 77,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2690:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 78,
                    "nodeType": "ArrayTypeName",
                    "src": "2690:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "2732:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2715:24:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2715:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 81,
                    "nodeType": "ArrayTypeName",
                    "src": "2715:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2666:74:5"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2749:0:5"
            },
            "scope": 599,
            "src": "2655:440:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "3642:62:5",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 141,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1235,
                          "src": "3673:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3673:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 143,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3687:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3687:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 140,
                      "name": "PaymentReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "3657:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3657:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "EmitStatement",
                  "src": "3652:45:5"
                }
              ]
            },
            "documentation": {
              "id": 137,
              "nodeType": "StructuredDocumentation",
              "src": "3101:501:5",
              "text": " @dev The Ether received will be logged with {PaymentReceived} events. Note that these events are not fully\n reliable: it's possible for a contract to receive Ether without triggering this function. This only affects the\n reliability of the events, and not the actual splitting of Ether.\n To learn more about this see the Solidity documentation for\n https://solidity.readthedocs.io/en/latest/contracts.html#fallback-function[fallback\n functions]."
            },
            "id": 148,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3614:2:5"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3642:0:5"
            },
            "scope": 599,
            "src": "3607:97:5",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "3835:36:5",
              "statements": [
                {
                  "expression": {
                    "id": 154,
                    "name": "_totalShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43,
                    "src": "3852:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 153,
                  "id": 155,
                  "nodeType": "Return",
                  "src": "3845:19:5"
                }
              ]
            },
            "documentation": {
              "id": 149,
              "nodeType": "StructuredDocumentation",
              "src": "3710:67:5",
              "text": " @dev Getter for the total shares held by payees."
            },
            "functionSelector": "3a98ef39",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalShares",
            "nameLocation": "3791:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3802:2:5"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "3826:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3826:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3825:9:5"
            },
            "scope": 599,
            "src": "3782:89:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "4015:38:5",
              "statements": [
                {
                  "expression": {
                    "id": 163,
                    "name": "_totalReleased",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "4032:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 162,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "4025:21:5"
                }
              ]
            },
            "documentation": {
              "id": 158,
              "nodeType": "StructuredDocumentation",
              "src": "3877:78:5",
              "text": " @dev Getter for the total amount of Ether already released."
            },
            "functionSelector": "e33b7de3",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalReleased",
            "nameLocation": "3969:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3982:2:5"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "4006:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4006:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4005:9:5"
            },
            "scope": 599,
            "src": "3960:93:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "4274:50:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 175,
                      "name": "_erc20TotalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4291:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1323_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 177,
                    "indexExpression": {
                      "id": 176,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "4311:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1323",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4291:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 174,
                  "id": 178,
                  "nodeType": "Return",
                  "src": "4284:33:5"
                }
              ]
            },
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "4059:140:5",
              "text": " @dev Getter for the total amount of `token` already released. `token` should be the address of an IERC20\n contract."
            },
            "functionSelector": "2a5899d0",
            "id": 180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalERCReleased",
            "nameLocation": "4213:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4237:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "4230:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1323",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 169,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 168,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1323,
                      "src": "4230:6:5"
                    },
                    "referencedDeclaration": 1323,
                    "src": "4230:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1323",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4229:14:5"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "4265:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4265:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4264:9:5"
            },
            "scope": 599,
            "src": "4204:120:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "4473:40:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 188,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "4490:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 190,
                    "indexExpression": {
                      "id": 189,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "4498:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4490:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 187,
                  "id": 191,
                  "nodeType": "Return",
                  "src": "4483:23:5"
                }
              ]
            },
            "documentation": {
              "id": 181,
              "nodeType": "StructuredDocumentation",
              "src": "4330:75:5",
              "text": " @dev Getter for the amount of shares held by an account."
            },
            "functionSelector": "ce7c2ac2",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shares",
            "nameLocation": "4419:6:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4434:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "4426:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4425:17:5"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "4464:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4464:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4463:9:5"
            },
            "scope": 599,
            "src": "4410:103:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "4672:42:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 201,
                      "name": "_released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "4689:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 203,
                    "indexExpression": {
                      "id": 202,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "4699:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4689:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 200,
                  "id": 204,
                  "nodeType": "Return",
                  "src": "4682:25:5"
                }
              ]
            },
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "4519:83:5",
              "text": " @dev Getter for the amount of Ether already released to a payee."
            },
            "functionSelector": "9852595c",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "released",
            "nameLocation": "4616:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4633:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "4625:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4625:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4624:17:5"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "4663:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4663:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4662:9:5"
            },
            "scope": 599,
            "src": "4607:107:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "4959:54:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 217,
                        "name": "_erc20Released",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "4976:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1323_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                        }
                      },
                      "id": 219,
                      "indexExpression": {
                        "id": 218,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "4991:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1323",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4976:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 221,
                    "indexExpression": {
                      "id": 220,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "4998:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4976:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 216,
                  "id": 222,
                  "nodeType": "Return",
                  "src": "4969:37:5"
                }
              ]
            },
            "documentation": {
              "id": 207,
              "nodeType": "StructuredDocumentation",
              "src": "4720:152:5",
              "text": " @dev Getter for the amount of `token` tokens already released to a payee. `token` should be the address of an\n IERC20 contract."
            },
            "functionSelector": "f1d9cffd",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releasedERC",
            "nameLocation": "4886:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4905:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "4898:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1323",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 209,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 208,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1323,
                      "src": "4898:6:5"
                    },
                    "referencedDeclaration": 1323,
                    "src": "4898:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1323",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4920:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "4912:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4912:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4897:31:5"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "4950:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4950:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4949:9:5"
            },
            "scope": 599,
            "src": "4877:136:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 236,
              "nodeType": "Block",
              "src": "5159:38:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 232,
                      "name": "_payees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "5176:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 234,
                    "indexExpression": {
                      "id": 233,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "5184:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5176:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 231,
                  "id": 235,
                  "nodeType": "Return",
                  "src": "5169:21:5"
                }
              ]
            },
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "5019:75:5",
              "text": " @dev Getter for the address of the payee number `index`."
            },
            "functionSelector": "8b83209b",
            "id": 237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payee",
            "nameLocation": "5108:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5122:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "5114:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5114:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5113:15:5"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "5150:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5150:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5149:9:5"
            },
            "scope": 599,
            "src": "5099:98:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "5349:155:5",
              "statements": [
                {
                  "assignments": [
                    246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 246,
                      "mutability": "mutable",
                      "name": "totalReceived",
                      "nameLocation": "5367:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 264,
                      "src": "5359:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 245,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5359:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 249,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5391:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Splitter_$599",
                              "typeString": "contract Splitter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Splitter_$599",
                              "typeString": "contract Splitter"
                            }
                          ],
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5383:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 247,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5383:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5383:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "5383:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 252,
                        "name": "totalReleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "5407:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5407:15:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5383:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5359:63:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 257,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "5455:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 258,
                        "name": "totalReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "5464:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 260,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "5488:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 259,
                          "name": "released",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "5479:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5479:17:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 256,
                      "name": "_pendingPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "5439:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5439:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 244,
                  "id": 263,
                  "nodeType": "Return",
                  "src": "5432:65:5"
                }
              ]
            },
            "documentation": {
              "id": 238,
              "nodeType": "StructuredDocumentation",
              "src": "5203:74:5",
              "text": " @dev Getter for the amount of payee's releasable Ether."
            },
            "functionSelector": "a3f8eace",
            "id": 265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releasable",
            "nameLocation": "5291:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5310:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "5302:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5302:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5301:17:5"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "5340:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5340:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5339:9:5"
            },
            "scope": 599,
            "src": "5282:222:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "5742:182:5",
              "statements": [
                {
                  "assignments": [
                    277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 277,
                      "mutability": "mutable",
                      "name": "totalReceived",
                      "nameLocation": "5760:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 299,
                      "src": "5752:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 276,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5752:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 289,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 282,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5800:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Splitter_$599",
                                "typeString": "contract Splitter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Splitter_$599",
                                "typeString": "contract Splitter"
                              }
                            ],
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5792:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 280,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5792:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5792:13:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 278,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "5776:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1323",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1262,
                        "src": "5776:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5776:30:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 286,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "5826:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1323",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1323",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 285,
                        "name": "totalERCReleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "5809:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1323_$returns$_t_uint256_$",
                          "typeString": "function (contract IERC20) view returns (uint256)"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5809:23:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5776:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5752:80:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 291,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "5865:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 292,
                        "name": "totalReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "5874:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 294,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "5901:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1323",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 295,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "5908:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1323",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 293,
                          "name": "releasedERC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 224,
                          "src": "5889:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1323_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,address) view returns (uint256)"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5889:27:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 290,
                      "name": "_pendingPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "5849:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5849:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 275,
                  "id": 298,
                  "nodeType": "Return",
                  "src": "5842:75:5"
                }
              ]
            },
            "documentation": {
              "id": 266,
              "nodeType": "StructuredDocumentation",
              "src": "5510:143:5",
              "text": " @dev Getter for the amount of payee's releasable `token` tokens. `token` should be the address of an\n IERC20 contract."
            },
            "functionSelector": "1c35f4c3",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releasableERC",
            "nameLocation": "5667:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5688:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "5681:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1323",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 268,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 267,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1323,
                      "src": "5681:6:5"
                    },
                    "referencedDeclaration": 1323,
                    "src": "5681:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1323",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5703:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "5695:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5695:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5680:31:5"
            },
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "5733:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5733:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5732:9:5"
            },
            "scope": 599,
            "src": "5658:266:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "6175:598:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 307,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "6193:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 309,
                          "indexExpression": {
                            "id": 308,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "6201:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6193:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6212:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6193:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420686173206e6f20736861726573",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6215:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        },
                        "value": "PaymentSplitter: account has no shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6185:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6185:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "6185:71:5"
                },
                {
                  "assignments": [
                    316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 316,
                      "mutability": "mutable",
                      "name": "payment",
                      "nameLocation": "6275:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 351,
                      "src": "6267:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6267:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 320,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 318,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "6296:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 317,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "6285:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6285:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6267:37:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 322,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 316,
                          "src": "6323:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6334:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6323:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e74206973206e6f7420647565207061796d656e74",
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6337:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        },
                        "value": "PaymentSplitter: account is not due payment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        }
                      ],
                      "id": 321,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6315:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6315:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "6315:68:5"
                },
                {
                  "expression": {
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 328,
                      "name": "_totalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "6574:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 329,
                      "name": "payment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "6592:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6574:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "6574:25:5"
                },
                {
                  "id": 338,
                  "nodeType": "UncheckedBlock",
                  "src": "6609:64:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 332,
                            "name": "_released",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "6633:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 334,
                          "indexExpression": {
                            "id": 333,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "6643:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6633:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 335,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 316,
                          "src": "6655:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6633:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 337,
                      "nodeType": "ExpressionStatement",
                      "src": "6633:29:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 342,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "6701:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 343,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "6710:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 339,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1223,
                        "src": "6683:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$1223_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 980,
                      "src": "6683:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6683:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "6683:35:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 347,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "6749:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 348,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "6758:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 346,
                      "name": "PaymentReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "6733:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6733:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "EmitStatement",
                  "src": "6728:38:5"
                }
              ]
            },
            "documentation": {
              "id": 301,
              "nodeType": "StructuredDocumentation",
              "src": "5930:183:5",
              "text": " @dev Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the\n total shares and their previous withdrawals."
            },
            "functionSelector": "19165587",
            "id": 352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "6127:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6151:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "6135:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6135:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6134:25:5"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6175:0:5"
            },
            "scope": 599,
            "src": "6118:655:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 416,
              "nodeType": "Block",
              "src": "7100:739:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 362,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "7118:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 364,
                          "indexExpression": {
                            "id": 363,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 358,
                            "src": "7126:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7118:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7137:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7118:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420686173206e6f20736861726573",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7140:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        },
                        "value": "PaymentSplitter: account has no shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7110:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7110:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "7110:71:5"
                },
                {
                  "assignments": [
                    371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 371,
                      "mutability": "mutable",
                      "name": "payment",
                      "nameLocation": "7200:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "7192:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 370,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7192:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 376,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 373,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "7224:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1323",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 374,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "7231:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1323",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 372,
                      "name": "releasableERC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "7210:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1323_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address) view returns (uint256)"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7210:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7192:47:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 378,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 371,
                          "src": "7258:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7269:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7258:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e74206973206e6f7420647565207061796d656e74",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7272:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        },
                        "value": "PaymentSplitter: account is not due payment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        }
                      ],
                      "id": 377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7250:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7250:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "7250:68:5"
                },
                {
                  "expression": {
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 384,
                        "name": "_erc20TotalReleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "7568:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1323_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 386,
                      "indexExpression": {
                        "id": 385,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "7588:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1323",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7568:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 387,
                      "name": "payment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "7598:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7568:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "7568:37:5"
                },
                {
                  "id": 398,
                  "nodeType": "UncheckedBlock",
                  "src": "7615:76:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 390,
                              "name": "_erc20Released",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "7639:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1323_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                              }
                            },
                            "id": 393,
                            "indexExpression": {
                              "id": 391,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "7654:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1323",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7639:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 394,
                          "indexExpression": {
                            "id": 392,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 358,
                            "src": "7661:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7639:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 395,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 371,
                          "src": "7673:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7639:41:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 397,
                      "nodeType": "ExpressionStatement",
                      "src": "7639:41:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 402,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "7724:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1323",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 403,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "7731:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 404,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "7740:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1323",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 399,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "7701:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$928_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 735,
                      "src": "7701:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1323_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7701:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "7701:47:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 408,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "7784:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1323",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 409,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "7791:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 410,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "7800:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 411,
                          "name": "addresstoname",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "7809:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                            "typeString": "mapping(address => string storage ref)"
                          }
                        },
                        "id": 413,
                        "indexExpression": {
                          "id": 412,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "7823:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7809:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1323",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 407,
                      "name": "ERC20PaymentReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "7763:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$1323_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256,string memory)"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7763:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "EmitStatement",
                  "src": "7758:74:5"
                }
              ]
            },
            "documentation": {
              "id": 353,
              "nodeType": "StructuredDocumentation",
              "src": "6779:250:5",
              "text": " @dev Triggers a transfer to `account` of the amount of `token` tokens they are owed, according to their\n percentage of the total shares and their previous withdrawals. `token` must be the address of an IERC20\n contract."
            },
            "functionSelector": "b32a185b",
            "id": 417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseERC",
            "nameLocation": "7043:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7061:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "7054:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1323",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 355,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 354,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1323,
                      "src": "7054:6:5"
                    },
                    "referencedDeclaration": 1323,
                    "src": "7054:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1323",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7076:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "7068:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7068:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7053:31:5"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7100:0:5"
            },
            "scope": 599,
            "src": "7034:805:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 504,
              "nodeType": "Block",
              "src": "7963:586:5",
              "statements": [
                {
                  "body": {
                    "id": 502,
                    "nodeType": "Block",
                    "src": "8018:525:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 436,
                                  "name": "_shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53,
                                  "src": "8040:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 440,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 437,
                                    "name": "_payees",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60,
                                    "src": "8048:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 439,
                                  "indexExpression": {
                                    "id": 438,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 425,
                                    "src": "8056:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8048:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8040:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8062:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8040:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4163636f756e7420686173206e6f20736861726573",
                              "id": 443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8065:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_19593b2e9dc7a5dfaf63d70ac01609e64f8f23a3abbfb60f650256aa6a0d6e23",
                                "typeString": "literal_string \"Account has no shares\""
                              },
                              "value": "Account has no shares"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_19593b2e9dc7a5dfaf63d70ac01609e64f8f23a3abbfb60f650256aa6a0d6e23",
                                "typeString": "literal_string \"Account has no shares\""
                              }
                            ],
                            "id": 435,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8032:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8032:57:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 445,
                        "nodeType": "ExpressionStatement",
                        "src": "8032:57:5"
                      },
                      {
                        "assignments": [
                          447
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 447,
                            "mutability": "mutable",
                            "name": "payment",
                            "nameLocation": "8112:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 502,
                            "src": "8104:15:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 446,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8104:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 454,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 449,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "8136:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1323",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 450,
                                "name": "_payees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "8143:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 452,
                              "indexExpression": {
                                "id": 451,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 425,
                                "src": "8151:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8143:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1323",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 448,
                            "name": "releasableERC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "8122:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1323_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,address) view returns (uint256)"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8122:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8104:50:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 456,
                                "name": "payment",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 447,
                                "src": "8177:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8188:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8177:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6163636f756e74206973206e6f7420647565207061796d656e74",
                              "id": 459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8191:28:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fdc328ab82bf9f88b34807cdf0520228a4a66d6f8bfcb12cf3f372369708f51b",
                                "typeString": "literal_string \"account is not due payment\""
                              },
                              "value": "account is not due payment"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fdc328ab82bf9f88b34807cdf0520228a4a66d6f8bfcb12cf3f372369708f51b",
                                "typeString": "literal_string \"account is not due payment\""
                              }
                            ],
                            "id": 455,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8169:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8169:51:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 461,
                        "nodeType": "ExpressionStatement",
                        "src": "8169:51:5"
                      },
                      {
                        "expression": {
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 462,
                              "name": "_erc20TotalReleased",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "8235:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1323_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 464,
                            "indexExpression": {
                              "id": 463,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "8255:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1323",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8235:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 465,
                            "name": "payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "8265:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8235:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 467,
                        "nodeType": "ExpressionStatement",
                        "src": "8235:37:5"
                      },
                      {
                        "id": 478,
                        "nodeType": "UncheckedBlock",
                        "src": "8287:87:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 468,
                                    "name": "_erc20Released",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72,
                                    "src": "8315:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1323_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 473,
                                  "indexExpression": {
                                    "id": 469,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 421,
                                    "src": "8330:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1323",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8315:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 474,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 470,
                                    "name": "_payees",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60,
                                    "src": "8337:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 472,
                                  "indexExpression": {
                                    "id": 471,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 425,
                                    "src": "8345:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8337:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "8315:33:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 475,
                                "name": "payment",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 447,
                                "src": "8352:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8315:44:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 477,
                            "nodeType": "ExpressionStatement",
                            "src": "8315:44:5"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 482,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "8411:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1323",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 483,
                                "name": "_payees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "8418:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 485,
                              "indexExpression": {
                                "id": 484,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 425,
                                "src": "8426:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8418:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 486,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 447,
                              "src": "8430:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1323",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 479,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "8388:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$928_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 735,
                            "src": "8388:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1323_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8388:50:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 488,
                        "nodeType": "ExpressionStatement",
                        "src": "8388:50:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 490,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "8478:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1323",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 491,
                                "name": "_payees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "8485:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 493,
                              "indexExpression": {
                                "id": 492,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 425,
                                "src": "8493:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8485:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 494,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 447,
                              "src": "8497:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 495,
                                "name": "addresstoname",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "8506:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                  "typeString": "mapping(address => string storage ref)"
                                }
                              },
                              "id": 499,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 496,
                                  "name": "_payees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "8520:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 498,
                                "indexExpression": {
                                  "id": 497,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 425,
                                  "src": "8528:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8520:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8506:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1323",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 489,
                            "name": "ERC20PaymentReleased",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "8457:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$1323_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256,string memory)"
                            }
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8457:75:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 501,
                        "nodeType": "EmitStatement",
                        "src": "8452:80:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 428,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 425,
                      "src": "7993:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 429,
                        "name": "_payees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "7997:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7997:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7993:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 503,
                  "initializationExpression": {
                    "assignments": [
                      425
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 425,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7986:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 503,
                        "src": "7978:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7978:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 427,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7990:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7978:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8013:3:5",
                      "subExpression": {
                        "id": 432,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "8013:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 434,
                    "nodeType": "ExpressionStatement",
                    "src": "8013:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "7973:570:5"
                }
              ]
            },
            "documentation": {
              "id": 418,
              "nodeType": "StructuredDocumentation",
              "src": "7845:59:5",
              "text": " Function to make the smart contract Bulk"
            },
            "functionSelector": "b4cf99a2",
            "id": 505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bulkReleaseERC",
            "nameLocation": "7919:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7941:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "7934:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1323",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 420,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 419,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1323,
                      "src": "7934:6:5"
                    },
                    "referencedDeclaration": 1323,
                    "src": "7934:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1323",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7933:14:5"
            },
            "returnParameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7963:0:5"
            },
            "scope": 599,
            "src": "7910:639:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 528,
              "nodeType": "Block",
              "src": "8872:91:5",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 517,
                              "name": "totalReceived",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "8890:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 518,
                                "name": "_shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "8906:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 520,
                              "indexExpression": {
                                "id": 519,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 508,
                                "src": "8914:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8906:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8890:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 522,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8889:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 523,
                        "name": "_totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "8926:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8889:49:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 525,
                      "name": "alreadyReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "8941:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8889:67:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 516,
                  "id": 527,
                  "nodeType": "Return",
                  "src": "8882:74:5"
                }
              ]
            },
            "documentation": {
              "id": 506,
              "nodeType": "StructuredDocumentation",
              "src": "8555:161:5",
              "text": " @dev internal logic for computing the pending payment of an `account` given the token historical balances and\n already released amounts."
            },
            "id": 529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pendingPayment",
            "nameLocation": "8730:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8763:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "8755:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8755:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "totalReceived",
                  "nameLocation": "8788:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "8780:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8780:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "alreadyReleased",
                  "nameLocation": "8819:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "8811:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8811:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8745:95:5"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "8863:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8863:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8862:9:5"
            },
            "scope": 599,
            "src": "8721:242:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "9239:450:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 542,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "9257:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9276:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9268:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 543,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9268:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9268:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9257:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420697320746865207a65726f2061646472657373",
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9280:46:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22db6c622fd62a15ab5fca8fc78156905c4f1b5914d7d1db97b192b87e8c816b",
                          "typeString": "literal_string \"PaymentSplitter: account is the zero address\""
                        },
                        "value": "PaymentSplitter: account is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22db6c622fd62a15ab5fca8fc78156905c4f1b5914d7d1db97b192b87e8c816b",
                          "typeString": "literal_string \"PaymentSplitter: account is the zero address\""
                        }
                      ],
                      "id": 541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9249:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9249:78:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "9249:78:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 552,
                          "name": "shares_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "9345:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9355:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9345:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a20736861726573206172652030",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9358:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9c1be4d5245e2b1590d7367c9c09f1ac5365954d05fed4172915681bdc80ed4",
                          "typeString": "literal_string \"PaymentSplitter: shares are 0\""
                        },
                        "value": "PaymentSplitter: shares are 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9c1be4d5245e2b1590d7367c9c09f1ac5365954d05fed4172915681bdc80ed4",
                          "typeString": "literal_string \"PaymentSplitter: shares are 0\""
                        }
                      ],
                      "id": 551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9337:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9337:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "9337:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 559,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "9408:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 561,
                          "indexExpression": {
                            "id": 560,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "9416:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9408:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9428:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9408:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420616c72656164792068617320736861726573",
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9431:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df40dd957dfb1d655a61a3d20a7083773a63031454719eb1eb83074b56cf5635",
                          "typeString": "literal_string \"PaymentSplitter: account already has shares\""
                        },
                        "value": "PaymentSplitter: account already has shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df40dd957dfb1d655a61a3d20a7083773a63031454719eb1eb83074b56cf5635",
                          "typeString": "literal_string \"PaymentSplitter: account already has shares\""
                        }
                      ],
                      "id": 558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9400:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9400:77:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "9400:77:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 570,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "9501:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 567,
                        "name": "_payees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "9488:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "9488:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9488:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "9488:21:5"
                },
                {
                  "expression": {
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 573,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "9519:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 575,
                      "indexExpression": {
                        "id": 574,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "9527:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9519:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 576,
                      "name": "shares_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 536,
                      "src": "9538:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9519:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "9519:26:5"
                },
                {
                  "expression": {
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 579,
                      "name": "_totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "9555:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 580,
                        "name": "_totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "9570:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 581,
                        "name": "shares_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "9585:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9570:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9555:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "9555:37:5"
                },
                {
                  "expression": {
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 585,
                        "name": "addresstoname",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "9602:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 587,
                      "indexExpression": {
                        "id": 586,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "9616:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9602:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 588,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "9627:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9602:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 590,
                  "nodeType": "ExpressionStatement",
                  "src": "9602:30:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 592,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "9658:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 593,
                        "name": "shares_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "9667:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 594,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "9676:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 591,
                      "name": "PayeeAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "9647:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9647:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "EmitStatement",
                  "src": "9642:40:5"
                }
              ]
            },
            "documentation": {
              "id": 530,
              "nodeType": "StructuredDocumentation",
              "src": "8969:174:5",
              "text": " @dev Add a new payee to the contract.\n @param account The address of the payee to add.\n @param shares_ The number of shares owned by the payee."
            },
            "functionSelector": "d84043f4",
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 539,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 538,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 646,
                  "src": "9229:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "9229:9:5"
              }
            ],
            "name": "_addPayee",
            "nameLocation": "9157:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "9181:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "9167:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9167:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9196:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "9188:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9188:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "9213:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "9205:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9205:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9166:55:5"
            },
            "returnParameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9239:0:5"
            },
            "scope": 599,
            "src": "9148:541:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 600,
        "src": "1587:8104:5",
        "usedErrors": []
      }
    ],
    "src": "111:9580:5"
  },
  "bytecode": "608060405260405162001fe438038062001fe483398101604081905262000026916200068d565b620000313362000198565b8051825114620000a35760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e6420736861726044820152710cae640d8cadccee8d040dad2e6dac2e8c6d60731b60648201526084015b60405180910390fd5b6000825111620000f65760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f2070617965657300000000000060448201526064016200009a565b81518351146200010557600080fd5b60005b82518110156200018e57620001798482815181106200012b576200012b620007f2565b6020026020010151848381518110620001485762000148620007f2565b6020026020010151848481518110620001655762000165620007f2565b6020026020010151620001e860201b60201c565b8062000185816200081e565b91505062000108565b50505050620008df565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620002445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200009a565b6001600160a01b038216620002b15760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201526b7a65726f206164647265737360a01b60648201526084016200009a565b60008111620003035760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a2073686172657320617265203000000060448201526064016200009a565b6001600160a01b038216600090815260046020526040902054156200037f5760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201526a206861732073686172657360a81b60648201526084016200009a565b6006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b038516908117909155600090815260046020526040902082905554620003e89082906200083c565b6001556001600160a01b03821660009081526003602090815260409091208451620004169286019062000459565b507f319341ecdae9bdc47fd5810aaf1c42c449352b02df82b41b8076895b5f3a46888282856040516200044c9392919062000857565b60405180910390a1505050565b8280546200046790620008a2565b90600052602060002090601f0160209004810192826200048b5760008555620004d6565b82601f10620004a657805160ff1916838001178555620004d6565b82800160010185558215620004d6579182015b82811115620004d6578251825591602001919060010190620004b9565b50620004e4929150620004e8565b5090565b5b80821115620004e45760008155600101620004e9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620005405762000540620004ff565b604052919050565b60006001600160401b03821115620005645762000564620004ff565b5060051b60200190565b60005b838110156200058b57818101518382015260200162000571565b838111156200059b576000848401525b50505050565b600082601f830112620005b357600080fd5b81516020620005cc620005c68362000548565b62000515565b82815260059290921b84018101918181019086841115620005ec57600080fd5b8286015b84811015620006205780516001600160a01b0381168114620006125760008081fd5b8352918301918301620005f0565b509695505050505050565b600082601f8301126200063d57600080fd5b8151602062000650620005c68362000548565b82815260059290921b840181019181810190868411156200067057600080fd5b8286015b8481101562000620578051835291830191830162000674565b600080600060608486031215620006a357600080fd5b83516001600160401b0380821115620006bb57600080fd5b818601915086601f830112620006d057600080fd5b81516020620006e3620005c68362000548565b82815260059290921b8401810191818101908a8411156200070357600080fd5b8286015b848110156200079957805186811115620007215760008081fd5b8701603f81018d13620007345760008081fd5b848101516040888211156200074d576200074d620004ff565b62000761601f8301601f1916880162000515565b8281528f82848601011115620007775760008081fd5b62000788838983018487016200056e565b865250505091830191830162000707565b5091890151919750909350505080821115620007b457600080fd5b620007c287838801620005a1565b93506040860151915080821115620007d957600080fd5b50620007e8868287016200062b565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141562000835576200083562000808565b5060010190565b6000821982111562000852576200085262000808565b500190565b60018060a01b038416815282602082015260606040820152600082518060608401526200088c8160808501602087016200056e565b601f01601f191691909101608001949350505050565b600181811c90821680620008b757607f821691505b60208210811415620008d957634e487b7160e01b600052602260045260246000fd5b50919050565b6116f580620008ef6000396000f3fe6080604052600436106101025760003560e01c8063a3f8eace11610095578063d84043f411610064578063d84043f414610327578063e33b7de314610347578063e6e115651461035c578063f1d9cffd14610389578063f2fde38b146103cf57600080fd5b8063a3f8eace14610291578063b32a185b146102b1578063b4cf99a2146102d1578063ce7c2ac2146102f157600080fd5b8063715018a6116100d1578063715018a6146101f05780638b83209b146102055780638da5cb5b1461023d5780639852595c1461025b57600080fd5b806319165587146101505780631c35f4c3146101725780632a5899d0146101a55780633a98ef39146101db57600080fd5b3661014b577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b34801561015c57600080fd5b5061017061016b3660046111ef565b6103ef565b005b34801561017e57600080fd5b5061019261018d36600461121c565b6104dc565b6040519081526020015b60405180910390f35b3480156101b157600080fd5b506101926101c03660046111ef565b6001600160a01b031660009081526007602052604090205490565b3480156101e757600080fd5b50600154610192565b3480156101fc57600080fd5b506101706105ac565b34801561021157600080fd5b50610225610220366004611255565b6105e2565b6040516001600160a01b03909116815260200161019c565b34801561024957600080fd5b506000546001600160a01b0316610225565b34801561026757600080fd5b506101926102763660046111ef565b6001600160a01b031660009081526005602052604090205490565b34801561029d57600080fd5b506101926102ac3660046111ef565b610612565b3480156102bd57600080fd5b506101706102cc36600461121c565b610655565b3480156102dd57600080fd5b506101706102ec3660046111ef565b610775565b3480156102fd57600080fd5b5061019261030c3660046111ef565b6001600160a01b031660009081526004602052604090205490565b34801561033357600080fd5b50610170610342366004611284565b610a0c565b34801561035357600080fd5b50600254610192565b34801561036857600080fd5b5061037c6103773660046111ef565b610c3f565b60405161019c91906113ab565b34801561039557600080fd5b506101926103a436600461121c565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b3480156103db57600080fd5b506101706103ea3660046111ef565b610cd9565b6001600160a01b03811660009081526004602052604090205461042d5760405162461bcd60e51b8152600401610424906113be565b60405180910390fd5b600061043882610612565b9050806104575760405162461bcd60e51b815260040161042490611404565b80600260008282546104699190611465565b90915550506001600160a01b03821660009081526005602052604090208054820190556104968282610d74565b604080516001600160a01b0384168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a15050565b6001600160a01b03821660009081526007602052604081205481906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f919061147d565b6105699190611465565b6001600160a01b038086166000908152600860209081526040808320938816835292905220549091506105a49084908390610e92565b610e92565b949350505050565b6000546001600160a01b031633146105d65760405162461bcd60e51b815260040161042490611496565b6105e06000610ed0565b565b6000600682815481106105f7576105f76114cb565b6000918252602090912001546001600160a01b031692915050565b60008061061e60025490565b6106289047611465565b905061064e838261059f866001600160a01b031660009081526005602052604090205490565b9392505050565b6001600160a01b03811660009081526004602052604090205461068a5760405162461bcd60e51b8152600401610424906113be565b600061069683836104dc565b9050806106b55760405162461bcd60e51b815260040161042490611404565b6001600160a01b038316600090815260076020526040812080548392906106dd908490611465565b90915550506001600160a01b038084166000908152600860209081526040808320938616835292905220805482019055610718838383610f20565b6001600160a01b03828116600090815260036020526040908190209051918516917fb91796ac388f2a71d412e9a062ce147adf6c8f3683c6b37fa5f002529fbcb5cf91610768918691869161151c565b60405180910390a2505050565b60005b600654811015610a08576000600460006006848154811061079b5761079b6114cb565b60009182526020808320909101546001600160a01b03168352820192909252604001902054116108055760405162461bcd60e51b81526020600482015260156024820152744163636f756e7420686173206e6f2073686172657360581b6044820152606401610424565b6000610838836006848154811061081e5761081e6114cb565b6000918252602090912001546001600160a01b03166104dc565b9050806108875760405162461bcd60e51b815260206004820152601a60248201527f6163636f756e74206973206e6f7420647565207061796d656e740000000000006044820152606401610424565b6001600160a01b038316600090815260076020526040812080548392906108af908490611465565b90915550506001600160a01b03831660009081526008602052604081206006805484939190869081106108e4576108e46114cb565b60009182526020808320909101546001600160a01b031683528201929092526040019020805490910190556006805461094491859185908110610929576109296114cb565b6000918252602090912001546001600160a01b031683610f20565b826001600160a01b03167fb91796ac388f2a71d412e9a062ce147adf6c8f3683c6b37fa5f002529fbcb5cf60068481548110610982576109826114cb565b9060005260206000200160009054906101000a90046001600160a01b03168360036000600688815481106109b8576109b86114cb565b60009182526020808320909101546001600160a01b03168352820192909252604090810190912090516109ed9392919061151c565b60405180910390a25080610a00816115de565b915050610778565b5050565b6000546001600160a01b03163314610a365760405162461bcd60e51b815260040161042490611496565b6001600160a01b038216610aa15760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201526b7a65726f206164647265737360a01b6064820152608401610424565b60008111610af15760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a207368617265732061726520300000006044820152606401610424565b6001600160a01b03821660009081526004602052604090205415610b6b5760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201526a206861732073686172657360a81b6064820152608401610424565b6006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b038516908117909155600090815260046020526040902082905554610bd2908290611465565b6001556001600160a01b03821660009081526003602090815260409091208451610bfe92860190611141565b507f319341ecdae9bdc47fd5810aaf1c42c449352b02df82b41b8076895b5f3a4688828285604051610c32939291906115f9565b60405180910390a1505050565b60036020526000908152604090208054610c58906114e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610c84906114e1565b8015610cd15780601f10610ca657610100808354040283529160200191610cd1565b820191906000526020600020905b815481529060010190602001808311610cb457829003601f168201915b505050505081565b6000546001600160a01b03163314610d035760405162461bcd60e51b815260040161042490611496565b6001600160a01b038116610d685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610424565b610d7181610ed0565b50565b80471015610dc45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610424565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610e11576040519150601f19603f3d011682016040523d82523d6000602084013e610e16565b606091505b5050905080610e8d5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610424565b505050565b6001546001600160a01b03841660009081526004602052604081205490918391610ebc9086611629565b610ec69190611648565b6105a4919061166a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610e8d92869291600091610fb091851690849061102d565b805190915015610e8d5780806020019051810190610fce9190611681565b610e8d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610424565b60606105a48484600085856001600160a01b0385163b61108f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610424565b600080866001600160a01b031685876040516110ab91906116a3565b60006040518083038185875af1925050503d80600081146110e8576040519150601f19603f3d011682016040523d82523d6000602084013e6110ed565b606091505b50915091506110fd828286611108565b979650505050505050565b6060831561111757508161064e565b8251156111275782518084602001fd5b8160405162461bcd60e51b815260040161042491906113ab565b82805461114d906114e1565b90600052602060002090601f01602090048101928261116f57600085556111b5565b82601f1061118857805160ff19168380011785556111b5565b828001600101855582156111b5579182015b828111156111b557825182559160200191906001019061119a565b506111c19291506111c5565b5090565b5b808211156111c157600081556001016111c6565b6001600160a01b0381168114610d7157600080fd5b60006020828403121561120157600080fd5b813561064e816111da565b8035611217816111da565b919050565b6000806040838503121561122f57600080fd5b823561123a816111da565b9150602083013561124a816111da565b809150509250929050565b60006020828403121561126757600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561129957600080fd5b833567ffffffffffffffff808211156112b157600080fd5b818601915086601f8301126112c557600080fd5b8135818111156112d7576112d761126e565b604051601f8201601f19908116603f011681019083821181831017156112ff576112ff61126e565b8160405282815289602084870101111561131857600080fd5b82602086016020830137600060208483010152809750505050505061133f6020850161120c565b9150604084013590509250925092565b60005b8381101561136a578181015183820152602001611352565b83811115611379576000848401525b50505050565b6000815180845261139781602086016020860161134f565b601f01601f19169290920160200192915050565b60208152600061064e602083018461137f565b60208082526026908201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060408201526573686172657360d01b606082015260800190565b6020808252602b908201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060408201526a191d59481c185e5b595b9d60aa1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156114785761147861144f565b500190565b60006020828403121561148f57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806114f557607f821691505b6020821081141561151657634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03841681526020808201849052606060408301528254600091908290600181811c908281168061155457607f831692505b85831081141561157257634e487b7160e01b85526022600452602485fd5b606088018390526080880181801561159157600181146115a2576115cd565b60ff198616825287820196506115cd565b60008b81526020902060005b868110156115c7578154848201529085019089016115ae565b83019750505b50949b9a5050505050505050505050565b60006000198214156115f2576115f261144f565b5060010190565b60018060a01b0384168152826020820152606060408201526000611620606083018461137f565b95945050505050565b60008160001904831182151516156116435761164361144f565b500290565b60008261166557634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561167c5761167c61144f565b500390565b60006020828403121561169357600080fd5b8151801515811461064e57600080fd5b600082516116b581846020870161134f565b919091019291505056fea26469706673582212202df9166998e1b4718bbe12f29c9522f882cbecef384facf5d7a1240a6d448a7864736f6c634300080b0033",
  "bytecodeSha1": "9f3e8befd650078b6ef831b198823d61223e9b2a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Splitter",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "66": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "67": [
            3735,
            3756,
            false
          ],
          "68": [
            3819,
            3849,
            true
          ]
        }
      },
      "3": {
        "Address.sendValue": {
          "62": [
            2501,
            2532,
            true
          ],
          "63": [
            2647,
            2654,
            true
          ]
        },
        "Address.verifyCallResult": {
          "64": [
            7735,
            7742,
            false
          ],
          "65": [
            7876,
            7897,
            false
          ]
        }
      },
      "4": {},
      "5": {
        "Splitter._addPayee": {
          "59": [
            9257,
            9278,
            true
          ],
          "60": [
            9345,
            9356,
            true
          ],
          "61": [
            9408,
            9429,
            true
          ]
        },
        "Splitter.bulkReleaseERC": {
          "57": [
            8040,
            8063,
            true
          ],
          "58": [
            8177,
            8189,
            true
          ]
        },
        "Splitter.release": {
          "55": [
            6323,
            6335,
            true
          ]
        },
        "Splitter.releaseERC": {
          "56": [
            7258,
            7270,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "45": [
            2378,
            2395
          ],
          "46": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "4": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "16": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "40": [
            1998,
            2071
          ],
          "41": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "48": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "47": [
            813,
            899
          ]
        }
      },
      "3": {
        "Address.functionCall": {
          "49": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "51": [
            5228,
            5288
          ],
          "52": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "50": [
            1458,
            1488
          ]
        },
        "Address.sendValue": {
          "42": [
            2493,
            2566
          ],
          "43": [
            2639,
            2717
          ]
        },
        "Address.verifyCallResult": {
          "53": [
            7758,
            7775
          ],
          "54": [
            8202,
            8222
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "5": {
        "Splitter.<receive>": {
          "0": [
            3652,
            3697
          ]
        },
        "Splitter._addPayee": {
          "32": [
            9249,
            9327
          ],
          "33": [
            9337,
            9390
          ],
          "34": [
            9400,
            9477
          ],
          "35": [
            9488,
            9509
          ],
          "36": [
            9519,
            9545
          ],
          "37": [
            9555,
            9592
          ],
          "38": [
            9602,
            9632
          ],
          "39": [
            9642,
            9682
          ]
        },
        "Splitter._pendingPayment": {
          "44": [
            8882,
            8956
          ]
        },
        "Splitter.bulkReleaseERC": {
          "25": [
            8032,
            8089
          ],
          "26": [
            8169,
            8220
          ],
          "27": [
            8235,
            8272
          ],
          "28": [
            8315,
            8359
          ],
          "29": [
            8388,
            8438
          ],
          "30": [
            8452,
            8532
          ],
          "31": [
            8013,
            8016
          ]
        },
        "Splitter.payee": {
          "17": [
            5169,
            5190
          ]
        },
        "Splitter.releasable": {
          "18": [
            5432,
            5497
          ]
        },
        "Splitter.releasableERC": {
          "15": [
            5842,
            5917
          ]
        },
        "Splitter.release": {
          "9": [
            6185,
            6256
          ],
          "10": [
            6315,
            6383
          ],
          "11": [
            6574,
            6599
          ],
          "12": [
            6633,
            6662
          ],
          "13": [
            6683,
            6718
          ],
          "14": [
            6728,
            6766
          ]
        },
        "Splitter.releaseERC": {
          "19": [
            7110,
            7181
          ],
          "20": [
            7250,
            7318
          ],
          "21": [
            7568,
            7605
          ],
          "22": [
            7639,
            7680
          ],
          "23": [
            7701,
            7748
          ],
          "24": [
            7758,
            7832
          ]
        },
        "Splitter.released": {
          "5": [
            4682,
            4707
          ]
        },
        "Splitter.releasedERC": {
          "8": [
            4969,
            5006
          ]
        },
        "Splitter.shares": {
          "6": [
            4483,
            4506
          ]
        },
        "Splitter.totalERCReleased": {
          "2": [
            4284,
            4317
          ]
        },
        "Splitter.totalReleased": {
          "7": [
            4025,
            4046
          ]
        },
        "Splitter.totalShares": {
          "3": [
            3845,
            3864
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "1587:8104:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3657:40;719:10:4;3657:40:5;;;-1:-1:-1;;;;;206:32:6;;;188:51;;3687:9:5;270:2:6;255:18;;248:34;161:18;3657:40:5;;;;;;;1587:8104;;;;;6118:655;;;;;;;;;;-1:-1:-1;6118:655:5;;;;;:::i;:::-;;:::i;:::-;;5658:266;;;;;;;;;;-1:-1:-1;5658:266:5;;;;;:::i;:::-;;:::i;:::-;;;1422:25:6;;;1410:2;1395:18;5658:266:5;;;;;;;;4204:120;;;;;;;;;;-1:-1:-1;4204:120:5;;;;;:::i;:::-;-1:-1:-1;;;;;4291:26:5;4265:7;4291:26;;;:19;:26;;;;;;;4204:120;3782:89;;;;;;;;;;-1:-1:-1;3852:12:5;;3782:89;;1668:101:0;;;;;;;;;;;;;:::i;5099:98:5:-;;;;;;;;;;-1:-1:-1;5099:98:5;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2082:32:6;;;2064:51;;2052:2;2037:18;5099:98:5;1918:203:6;1036:85:0;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;4607:107:5;;;;;;;;;;-1:-1:-1;4607:107:5;;;;;:::i;:::-;-1:-1:-1;;;;;4689:18:5;4663:7;4689:18;;;:9;:18;;;;;;;4607:107;5282:222;;;;;;;;;;-1:-1:-1;5282:222:5;;;;;:::i;:::-;;:::i;7034:805::-;;;;;;;;;;-1:-1:-1;7034:805:5;;;;;:::i;:::-;;:::i;7910:639::-;;;;;;;;;;-1:-1:-1;7910:639:5;;;;;:::i;:::-;;:::i;4410:103::-;;;;;;;;;;-1:-1:-1;4410:103:5;;;;;:::i;:::-;-1:-1:-1;;;;;4490:16:5;4464:7;4490:16;;;:7;:16;;;;;;;4410:103;9148:541;;;;;;;;;;-1:-1:-1;9148:541:5;;;;;:::i;:::-;;:::i;3960:93::-;;;;;;;;;;-1:-1:-1;4032:14:5;;3960:93;;1988:47;;;;;;;;;;-1:-1:-1;1988:47:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4877:136::-;;;;;;;;;;-1:-1:-1;4877:136:5;;;;;:::i;:::-;-1:-1:-1;;;;;4976:21:5;;;4950:7;4976:21;;;:14;:21;;;;;;;;:30;;;;;;;;;;;;;4877:136;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;6118:655:5:-;-1:-1:-1;;;;;6193:16:5;;6212:1;6193:16;;;:7;:16;;;;;;6185:71;;;;-1:-1:-1;;;6185:71:5;;;;;;;:::i;:::-;;;;;;;;;6267:15;6285:19;6296:7;6285:10;:19::i;:::-;6267:37;-1:-1:-1;6323:12:5;6315:68;;;;-1:-1:-1;;;6315:68:5;;;;;;;:::i;:::-;6592:7;6574:14;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6633:18:5;;;;;;:9;:18;;;;;:29;;;;;;6683:35;6643:7;6655;6683:17;:35::i;:::-;6733:33;;;-1:-1:-1;;;;;206:32:6;;188:51;;270:2;255:18;;248:34;;;6733:33:5;;161:18:6;6733:33:5;;;;;;;6175:598;6118:655;:::o;5658:266::-;-1:-1:-1;;;;;4291:26:5;;5733:7;4291:26;;;:19;:26;;;;;;5733:7;;5776:30;;-1:-1:-1;;;5776:30:5;;5800:4;5776:30;;;2064:51:6;-1:-1:-1;;;;;5776:15:5;;;;;2037:18:6;;5776:30:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;-1:-1:-1;;;;;4976:21:5;;;4950:7;4976:21;;;:14;:21;;;;;;;;:30;;;;;;;;;;5752:80;;-1:-1:-1;5849:68:5;;5865:7;;5752:80;;5849:15;:68::i;5889:27::-;5849:15;:68::i;:::-;5842:75;5658:266;-1:-1:-1;;;;5658:266:5:o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5099:98:5:-;5150:7;5176;5184:5;5176:14;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5176:14:5;;5099:98;-1:-1:-1;;5099:98:5:o;5282:222::-;5340:7;5359:21;5407:15;4032:14;;;3960:93;5407:15;5383:39;;:21;:39;:::i;:::-;5359:63;;5439:58;5455:7;5464:13;5479:17;5488:7;-1:-1:-1;;;;;4689:18:5;4663:7;4689:18;;;:9;:18;;;;;;;4607:107;5439:58;5432:65;5282:222;-1:-1:-1;;;5282:222:5:o;7034:805::-;-1:-1:-1;;;;;7118:16:5;;7137:1;7118:16;;;:7;:16;;;;;;7110:71;;;;-1:-1:-1;;;7110:71:5;;;;;;;:::i;:::-;7192:15;7210:29;7224:5;7231:7;7210:13;:29::i;:::-;7192:47;-1:-1:-1;7258:12:5;7250:68;;;;-1:-1:-1;;;7250:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;7568:26:5;;;;;;:19;:26;;;;;:37;;7598:7;;7568:26;:37;;7598:7;;7568:37;:::i;:::-;;;;-1:-1:-1;;;;;;;7639:21:5;;;;;;;:14;:21;;;;;;;;:30;;;;;;;;;:41;;;;;;7701:47;7654:5;7661:7;7673;7701:22;:47::i;:::-;-1:-1:-1;;;;;7809:22:5;;;;;;;:13;:22;;;;;;;7763:69;;;;;;;;;;7791:7;;7800;;7763:69;:::i;:::-;;;;;;;;7100:739;7034:805;;:::o;7910:639::-;7978:9;7973:570;7997:7;:14;7993:18;;7973:570;;;8062:1;8040:7;:19;8048:7;8056:1;8048:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;8048:10:5;8040:19;;;;;;;;;;;;;:23;8032:57;;;;-1:-1:-1;;;8032:57:5;;8628:2:6;8032:57:5;;;8610:21:6;8667:2;8647:18;;;8640:30;-1:-1:-1;;;8686:18:6;;;8679:51;8747:18;;8032:57:5;8426:345:6;8032:57:5;8104:15;8122:32;8136:5;8143:7;8151:1;8143:10;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;8143:10:5;8122:13;:32::i;:::-;8104:50;-1:-1:-1;8177:12:5;8169:51;;;;-1:-1:-1;;;8169:51:5;;8978:2:6;8169:51:5;;;8960:21:6;9017:2;8997:18;;;8990:30;9056:28;9036:18;;;9029:56;9102:18;;8169:51:5;8776:350:6;8169:51:5;-1:-1:-1;;;;;8235:26:5;;;;;;:19;:26;;;;;:37;;8265:7;;8235:26;:37;;8265:7;;8235:37;:::i;:::-;;;;-1:-1:-1;;;;;;;8315:21:5;;;;;;:14;:21;;;;;8337:7;:10;;8352:7;;8315:21;8337:7;8345:1;;8337:10;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;8337:10:5;8315:33;;;;;;;;;;;;:44;;;;;;;8418:7;:10;;8388:50;;8411:5;;8426:1;;8418:10;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;8418:10:5;8430:7;8388:22;:50::i;:::-;8478:5;-1:-1:-1;;;;;8457:75:5;;8485:7;8493:1;8485:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8485:10:5;8497:7;8506:13;:25;8520:7;8528:1;8520:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;8520:10:5;8506:25;;;;;;;;;;;;;;;8457:75;;;;;;8506:25;8457:75;:::i;:::-;;;;;;;;-1:-1:-1;8013:3:5;;;;:::i;:::-;;;;7973:570;;;;7910:639;:::o;9148:541::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;9257:21:5;::::1;9249:78;;;::::0;-1:-1:-1;;;9249:78:5;;9473:2:6;9249:78:5::1;::::0;::::1;9455:21:6::0;9512:2;9492:18;;;9485:30;9551:34;9531:18;;;9524:62;-1:-1:-1;;;9602:18:6;;;9595:42;9654:19;;9249:78:5::1;9271:408:6::0;9249:78:5::1;9355:1;9345:7;:11;9337:53;;;::::0;-1:-1:-1;;;9337:53:5;;9886:2:6;9337:53:5::1;::::0;::::1;9868:21:6::0;9925:2;9905:18;;;9898:30;9964:31;9944:18;;;9937:59;10013:18;;9337:53:5::1;9684:353:6::0;9337:53:5::1;-1:-1:-1::0;;;;;9408:16:5;::::1;;::::0;;;:7:::1;:16;::::0;;;;;:21;9400:77:::1;;;::::0;-1:-1:-1;;;9400:77:5;;10244:2:6;9400:77:5::1;::::0;::::1;10226:21:6::0;10283:2;10263:18;;;10256:30;10322:34;10302:18;;;10295:62;-1:-1:-1;;;10373:18:6;;;10366:41;10424:19;;9400:77:5::1;10042:407:6::0;9400:77:5::1;9488:7;:21:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;9488:21:5::1;-1:-1:-1::0;;;;;9488:21:5;::::1;::::0;;::::1;::::0;;;-1:-1:-1;9519:16:5;;;:7:::1;9488:21;9519:16:::0;;;;:26;;;9570:12;:22:::1;::::0;9519:26;;9570:22:::1;:::i;:::-;9555:12;:37:::0;-1:-1:-1;;;;;9602:22:5;::::1;;::::0;;;:13:::1;:22;::::0;;;;;;;:30;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;9647:35;9658:7;9667;9676:5;9647:35;;;;;;;;:::i;:::-;;;;;;;;9148:541:::0;;;:::o;1988:47::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11049:2:6;1998:73:0::1;::::0;::::1;11031:21:6::0;11088:2;11068:18;;;11061:30;11127:34;11107:18;;;11100:62;-1:-1:-1;;;11178:18:6;;;11171:36;11224:19;;1998:73:0::1;10847:402:6::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2412:312:3:-;2526:6;2501:21;:31;;2493:73;;;;-1:-1:-1;;;2493:73:3;;11456:2:6;2493:73:3;;;11438:21:6;11495:2;11475:18;;;11468:30;11534:31;11514:18;;;11507:59;11583:18;;2493:73:3;11254:353:6;2493:73:3;2578:12;2596:9;-1:-1:-1;;;;;2596:14:3;2618:6;2596:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:52;;;2647:7;2639:78;;;;-1:-1:-1;;;2639:78:3;;12024:2:6;2639:78:3;;;12006:21:6;12063:2;12043:18;;;12036:30;12102:34;12082:18;;;12075:62;12173:28;12153:18;;;12146:56;12219:19;;2639:78:3;11822:422:6;2639:78:3;2483:241;2412:312;;:::o;8721:242:5:-;8926:12;;-1:-1:-1;;;;;8906:16:5;;8863:7;8906:16;;;:7;:16;;;;;;8863:7;;8941:15;;8890:32;;:13;:32;:::i;:::-;8889:49;;;;:::i;:::-;:67;;;;:::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;701:205:2:-;840:58;;;-1:-1:-1;;;;;206:32:6;;;840:58:2;;;188:51:6;255:18;;;;248:34;;;840:58:2;;;;;;;;;;161:18:6;;;;840:58:2;;;;;;;;-1:-1:-1;;;;;840:58:2;-1:-1:-1;;;840:58:2;;;3652:69;;;;;;;;;;;;;;;;813:86;;833:5;;840:58;-1:-1:-1;;3652:69:2;;:27;;;840:58;;3652:27;:69::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;13258:2:6;3811:85:2;;;13240:21:6;13297:2;13277:18;;;13270:30;13336:34;13316:18;;;13309:62;-1:-1:-1;;;13387:18:6;;;13380:40;13437:19;;3811:85:2;13056:406:6;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;14076:2:6;5228:60:3;;;14058:21:6;14115:2;14095:18;;;14088:30;14154:31;14134:18;;;14127:59;14203:18;;5228:60:3;13874:353:6;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;293:139:6;-1:-1:-1;;;;;376:31:6;;366:42;;356:70;;422:1;419;412:12;437:263;504:6;557:2;545:9;536:7;532:23;528:32;525:52;;;573:1;570;563:12;525:52;612:9;599:23;631:39;664:5;631:39;:::i;705:142::-;773:20;;802:39;773:20;802:39;:::i;:::-;705:142;;;:::o;852:419::-;935:6;943;996:2;984:9;975:7;971:23;967:32;964:52;;;1012:1;1009;1002:12;964:52;1051:9;1038:23;1070:39;1103:5;1070:39;:::i;:::-;1128:5;-1:-1:-1;1185:2:6;1170:18;;1157:32;1198:41;1157:32;1198:41;:::i;:::-;1258:7;1248:17;;;852:419;;;;;:::o;1733:180::-;1792:6;1845:2;1833:9;1824:7;1820:23;1816:32;1813:52;;;1861:1;1858;1851:12;1813:52;-1:-1:-1;1884:23:6;;1733:180;-1:-1:-1;1733:180:6:o;2386:127::-;2447:10;2442:3;2438:20;2435:1;2428:31;2478:4;2475:1;2468:15;2502:4;2499:1;2492:15;2518:1074;2605:6;2613;2621;2674:2;2662:9;2653:7;2649:23;2645:32;2642:52;;;2690:1;2687;2680:12;2642:52;2730:9;2717:23;2759:18;2800:2;2792:6;2789:14;2786:34;;;2816:1;2813;2806:12;2786:34;2854:6;2843:9;2839:22;2829:32;;2899:7;2892:4;2888:2;2884:13;2880:27;2870:55;;2921:1;2918;2911:12;2870:55;2957:2;2944:16;2979:2;2975;2972:10;2969:36;;;2985:18;;:::i;:::-;3060:2;3054:9;3028:2;3114:13;;-1:-1:-1;;3110:22:6;;;3134:2;3106:31;3102:40;3090:53;;;3158:18;;;3178:22;;;3155:46;3152:72;;;3204:18;;:::i;:::-;3244:10;3240:2;3233:22;3279:2;3271:6;3264:18;3321:7;3314:4;3309:2;3305;3301:11;3297:22;3294:35;3291:55;;;3342:1;3339;3332:12;3291:55;3402:2;3395:4;3391:2;3387:13;3380:4;3372:6;3368:17;3355:50;3449:1;3442:4;3437:2;3429:6;3425:15;3421:26;3414:37;3470:6;3460:16;;;;;;;3495:40;3529:4;3518:9;3514:20;3495:40;:::i;:::-;3485:50;;3582:2;3571:9;3567:18;3554:32;3544:42;;2518:1074;;;;;:::o;3752:258::-;3824:1;3834:113;3848:6;3845:1;3842:13;3834:113;;;3924:11;;;3918:18;3905:11;;;3898:39;3870:2;3863:10;3834:113;;;3965:6;3962:1;3959:13;3956:48;;;4000:1;3991:6;3986:3;3982:16;3975:27;3956:48;;3752:258;;;:::o;4015:::-;4057:3;4095:5;4089:12;4122:6;4117:3;4110:19;4138:63;4194:6;4187:4;4182:3;4178:14;4171:4;4164:5;4160:16;4138:63;:::i;:::-;4255:2;4234:15;-1:-1:-1;;4230:29:6;4221:39;;;;4262:4;4217:50;;4015:258;-1:-1:-1;;4015:258:6:o;4278:220::-;4427:2;4416:9;4409:21;4390:4;4447:45;4488:2;4477:9;4473:18;4465:6;4447:45;:::i;4503:402::-;4705:2;4687:21;;;4744:2;4724:18;;;4717:30;4783:34;4778:2;4763:18;;4756:62;-1:-1:-1;;;4849:2:6;4834:18;;4827:36;4895:3;4880:19;;4503:402::o;4910:407::-;5112:2;5094:21;;;5151:2;5131:18;;;5124:30;5190:34;5185:2;5170:18;;5163:62;-1:-1:-1;;;5256:2:6;5241:18;;5234:41;5307:3;5292:19;;4910:407::o;5322:127::-;5383:10;5378:3;5374:20;5371:1;5364:31;5414:4;5411:1;5404:15;5438:4;5435:1;5428:15;5454:128;5494:3;5525:1;5521:6;5518:1;5515:13;5512:39;;;5531:18;;:::i;:::-;-1:-1:-1;5567:9:6;;5454:128::o;5874:184::-;5944:6;5997:2;5985:9;5976:7;5972:23;5968:32;5965:52;;;6013:1;6010;6003:12;5965:52;-1:-1:-1;6036:16:6;;5874:184;-1:-1:-1;5874:184:6:o;6063:356::-;6265:2;6247:21;;;6284:18;;;6277:30;6343:34;6338:2;6323:18;;6316:62;6410:2;6395:18;;6063:356::o;6424:127::-;6485:10;6480:3;6476:20;6473:1;6466:31;6516:4;6513:1;6506:15;6540:4;6537:1;6530:15;6556:380;6635:1;6631:12;;;;6678;;;6699:61;;6753:4;6745:6;6741:17;6731:27;;6699:61;6806:2;6798:6;6795:14;6775:18;6772:38;6769:161;;;6852:10;6847:3;6843:20;6840:1;6833:31;6887:4;6884:1;6877:15;6915:4;6912:1;6905:15;6769:161;;6556:380;;;:::o;7067:1354::-;-1:-1:-1;;;;;7269:32:6;;7251:51;;7321:2;7339:18;;;7332:34;;;7402:2;7397;7382:18;;7375:30;7452:13;;7232:4;;7321:2;7232:4;;7298:1;7530:18;;;;7583;;;;7610:61;;7664:4;7656:6;7652:17;7642:27;;7610:61;7717:2;7709:6;7706:14;7686:18;7683:38;7680:165;;;-1:-1:-1;;;7744:33:6;;7800:4;7797:1;7790:15;7830:4;7751:3;7818:17;7680:165;7916:2;7901:18;;3684:19;;;3727:14;;;7944:18;7971:100;;;;8085:1;8080:315;;;;7937:458;;7971:100;-1:-1:-1;;8004:24:6;;7992:37;;8049:12;;;;-1:-1:-1;7971:100:6;;8080:315;7014:1;7007:14;;;7051:4;7038:18;;8175:1;8189:165;8203:6;8200:1;8197:13;8189:165;;;8281:14;;8268:11;;;8261:35;8324:16;;;;8218:10;;8189:165;;;8374:11;;;-1:-1:-1;;7937:458:6;-1:-1:-1;8412:3:6;;7067:1354;-1:-1:-1;;;;;;;;;;;7067:1354:6:o;9131:135::-;9170:3;-1:-1:-1;;9191:17:6;;9188:43;;;9211:18;;:::i;:::-;-1:-1:-1;9258:1:6;9247:13;;9131:135::o;10454:388::-;10688:1;10684;10679:3;10675:11;10671:19;10663:6;10659:32;10648:9;10641:51;10728:6;10723:2;10712:9;10708:18;10701:34;10771:2;10766;10755:9;10751:18;10744:30;10622:4;10791:45;10832:2;10821:9;10817:18;10809:6;10791:45;:::i;:::-;10783:53;10454:388;-1:-1:-1;;;;;10454:388:6:o;12249:168::-;12289:7;12355:1;12351;12347:6;12343:14;12340:1;12337:21;12332:1;12325:9;12318:17;12314:45;12311:71;;;12362:18;;:::i;:::-;-1:-1:-1;12402:9:6;;12249:168::o;12422:217::-;12462:1;12488;12478:132;;12532:10;12527:3;12523:20;12520:1;12513:31;12567:4;12564:1;12557:15;12595:4;12592:1;12585:15;12478:132;-1:-1:-1;12624:9:6;;12422:217::o;12644:125::-;12684:4;12712:1;12709;12706:8;12703:34;;;12717:18;;:::i;:::-;-1:-1:-1;12754:9:6;;12644:125::o;12774:277::-;12841:6;12894:2;12882:9;12873:7;12869:23;12865:32;12862:52;;;12910:1;12907;12900:12;12862:52;12942:9;12936:16;12995:5;12988:13;12981:21;12974:5;12971:32;12961:60;;13017:1;13014;13007:12;14232:274;14361:3;14399:6;14393:13;14415:53;14461:6;14456:3;14449:4;14441:6;14437:17;14415:53;:::i;:::-;14484:16;;;;;14232:274;-1:-1:-1;;14232:274:6:o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware that the Ether will be split in this way, since it is handled transparently by the contract. The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim an amount proportional to the percentage of total shares they were assigned. The distribution of shares is set at the time of contract deployment and can't be updated thereafter. `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release} function. NOTE: This contract assumes that ERC20 tokens will behave similarly to native tokens (Ether). Rebasing tokens, and tokens that apply fees during transfers, are likely to not be supported as expected. If in doubt, we encourage you to run tests before sending real value to this contract.",
    "kind": "dev",
    "methods": {
      "_addPayee(string,address,uint256)": {
        "details": "Add a new payee to the contract.",
        "params": {
          "account": "The address of the payee to add.",
          "shares_": "The number of shares owned by the payee."
        }
      },
      "bulkReleaseERC(address)": {
        "notice": "Function to make the smart contract Bulk"
      },
      "constructor": {
        "details": "Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at the matching position in the `shares` array. All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no duplicates in `payees`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "payee(uint256)": {
        "details": "Getter for the address of the payee number `index`."
      },
      "releasable(address)": {
        "details": "Getter for the amount of payee's releasable Ether."
      },
      "releasableERC(address,address)": {
        "details": "Getter for the amount of payee's releasable `token` tokens. `token` should be the address of an IERC20 contract."
      },
      "release(address)": {
        "details": "Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the total shares and their previous withdrawals."
      },
      "releaseERC(address,address)": {
        "details": "Triggers a transfer to `account` of the amount of `token` tokens they are owed, according to their percentage of the total shares and their previous withdrawals. `token` must be the address of an IERC20 contract."
      },
      "released(address)": {
        "details": "Getter for the amount of Ether already released to a payee."
      },
      "releasedERC(address,address)": {
        "details": "Getter for the amount of `token` tokens already released to a payee. `token` should be the address of an IERC20 contract."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "shares(address)": {
        "details": "Getter for the amount of shares held by an account."
      },
      "totalERCReleased(address)": {
        "details": "Getter for the total amount of `token` already released. `token` should be the address of an IERC20 contract."
      },
      "totalReleased()": {
        "details": "Getter for the total amount of Ether already released."
      },
      "totalShares()": {
        "details": "Getter for the total shares held by payees."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "PaymentSplitter",
    "version": 1
  },
  "offset": [
    1587,
    9691
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3F8EACE GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD84043F4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD84043F4 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xE33B7DE3 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xE6E11565 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xF1D9CFFD EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xB32A185B EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xB4CF99A2 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xCE7C2AC2 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x8B83209B EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19165587 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x1C35F4C3 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x2A5899D0 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x14B JUMPI PUSH32 0x6EF95F06320E7A25A04A175CA677B7052BDD97131872C2192525A629F51BE770 CALLER PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE CALLVALUE PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x121C JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x192 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x5AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x1255 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x225 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x121C JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0xA0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x192 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x121C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x42D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x438 DUP3 PUSH2 0x612 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x457 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0x1404 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH2 0x496 DUP3 DUP3 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xDF20FD1E76BC69D672E4814FAFB2C449BBA3A5369D8359ADF9E05E6FDE87B056 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x5A4 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH2 0xE92 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0x5E0 PUSH1 0x0 PUSH2 0xED0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5F7 JUMPI PUSH2 0x5F7 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61E PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x628 SWAP1 SELFBALANCE PUSH2 0x1465 JUMP JUMPDEST SWAP1 POP PUSH2 0x64E DUP4 DUP3 PUSH2 0x59F DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x696 DUP4 DUP4 PUSH2 0x4DC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6DD SWAP1 DUP5 SWAP1 PUSH2 0x1465 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH2 0x718 DUP4 DUP4 DUP4 PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP2 DUP6 AND SWAP2 PUSH32 0xB91796AC388F2A71D412E9A062CE147ADF6C8F3683C6B37FA5F002529FBCB5CF SWAP2 PUSH2 0x768 SWAP2 DUP7 SWAP2 DUP7 SWAP2 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xA08 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x79B JUMPI PUSH2 0x79B PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4163636F756E7420686173206E6F20736861726573 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x838 DUP4 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x81E JUMPI PUSH2 0x81E PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4DC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E74206973206E6F7420647565207061796D656E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x8AF SWAP1 DUP5 SWAP1 PUSH2 0x1465 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD DUP5 SWAP4 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x8E4 JUMPI PUSH2 0x8E4 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH2 0x944 SWAP2 DUP6 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xF20 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB91796AC388F2A71D412E9A062CE147ADF6C8F3683C6B37FA5F002529FBCB5CF PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0x14CB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x3 PUSH1 0x0 PUSH1 0x6 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x9B8 JUMPI PUSH2 0x9B8 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 SWAP2 KECCAK256 SWAP1 MLOAD PUSH2 0x9ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP DUP1 PUSH2 0xA00 DUP2 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x778 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E742069732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A20736861726573206172652030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xB6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E7420616C7265616479 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x2068617320736861726573 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE SLOAD PUSH2 0xBD2 SWAP1 DUP3 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP5 MLOAD PUSH2 0xBFE SWAP3 DUP7 ADD SWAP1 PUSH2 0x1141 JUMP JUMPDEST POP PUSH32 0x319341ECDAE9BDC47FD5810AAF1C42C449352B02DF82B41B8076895B5F3A4688 DUP3 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC32 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xC58 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC84 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCD1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCA6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCB4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0xD71 DUP2 PUSH2 0xED0 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH2 0xEBC SWAP1 DUP7 PUSH2 0x1629 JUMP JUMPDEST PUSH2 0xEC6 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 SWAP1 DUP5 ADD MSTORE PUSH2 0xE8D SWAP3 DUP7 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xFB0 SWAP2 DUP6 AND SWAP1 DUP5 SWAP1 PUSH2 0x102D JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xE8D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xFCE SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0xE8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5A4 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x108F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x10AB SWAP2 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10E8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x10FD DUP3 DUP3 DUP7 PUSH2 0x1108 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1117 JUMPI POP DUP2 PUSH2 0x64E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1127 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x114D SWAP1 PUSH2 0x14E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x116F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x11B5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1188 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x11B5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x11B5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x11B5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x119A JUMP JUMPDEST POP PUSH2 0x11C1 SWAP3 SWAP2 POP PUSH2 0x11C5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11C1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x64E DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1217 DUP2 PUSH2 0x11DA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x122F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x123A DUP2 PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x124A DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12D7 JUMPI PUSH2 0x12D7 PUSH2 0x126E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x12FF JUMPI PUSH2 0x12FF PUSH2 0x126E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP PUSH2 0x133F PUSH1 0x20 DUP6 ADD PUSH2 0x120C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x136A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1352 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1379 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1397 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x134F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x64E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E7420686173206E6F20 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x736861726573 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E74206973206E6F7420 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x191D59481C185E5B595B9D PUSH1 0xAA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1478 JUMPI PUSH2 0x1478 PUSH2 0x144F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14F5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1516 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 DUP2 AND DUP1 PUSH2 0x1554 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST DUP6 DUP4 LT DUP2 EQ ISZERO PUSH2 0x1572 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x60 DUP9 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP9 ADD DUP2 DUP1 ISZERO PUSH2 0x1591 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x15A2 JUMPI PUSH2 0x15CD JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP3 MSTORE DUP8 DUP3 ADD SWAP7 POP PUSH2 0x15CD JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x15C7 JUMPI DUP2 SLOAD DUP5 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP10 ADD PUSH2 0x15AE JUMP JUMPDEST DUP4 ADD SWAP8 POP POP JUMPDEST POP SWAP5 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x15F2 JUMPI PUSH2 0x15F2 PUSH2 0x144F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1620 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x137F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1643 JUMPI PUSH2 0x1643 PUSH2 0x144F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1665 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x167C JUMPI PUSH2 0x167C PUSH2 0x144F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x16B5 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x134F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xF9 AND PUSH10 0x98E1B4718BBE12F29C95 0x22 0xF8 DUP3 0xCB 0xEC 0xEF CODESIZE 0x4F 0xAC CREATE2 0xD7 LOG1 0x24 EXP PUSH14 0x448A7864736F6C634300080B0033 ",
  "pcMap": {
    "0": {
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "LT",
      "path": "5"
    },
    "9": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x102"
    },
    "12": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "SHR",
      "path": "5"
    },
    "19": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA3F8EACE"
    },
    "25": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "GT",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x95"
    },
    "29": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "30": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "31": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD84043F4"
    },
    "36": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "GT",
      "path": "5"
    },
    "37": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "41": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "42": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD84043F4"
    },
    "47": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "48": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x327"
    },
    "51": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "52": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "53": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE33B7DE3"
    },
    "58": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "59": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x347"
    },
    "62": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "63": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "64": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE6E11565"
    },
    "69": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "70": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35C"
    },
    "73": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "74": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "75": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF1D9CFFD"
    },
    "80": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "81": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x389"
    },
    "84": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "85": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "86": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "92": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3CF"
    },
    "95": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "96": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "REVERT",
      "path": "5"
    },
    "100": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "101": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA3F8EACE"
    },
    "107": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "108": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x291"
    },
    "111": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB32A185B"
    },
    "118": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "119": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B1"
    },
    "122": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "123": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "124": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB4CF99A2"
    },
    "129": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "130": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D1"
    },
    "133": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "134": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "135": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xCE7C2AC2"
    },
    "140": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "141": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F1"
    },
    "144": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "145": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "147": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "REVERT",
      "path": "5"
    },
    "149": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "150": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "151": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "156": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "GT",
      "path": "5"
    },
    "157": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD1"
    },
    "160": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "161": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "162": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "167": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "168": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F0"
    },
    "171": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "172": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "173": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8B83209B"
    },
    "178": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "179": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x205"
    },
    "182": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "183": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "184": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "189": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "190": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23D"
    },
    "193": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "194": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "195": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9852595C"
    },
    "200": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "201": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25B"
    },
    "204": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "205": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "207": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "208": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "REVERT",
      "path": "5"
    },
    "209": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "210": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "211": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x19165587"
    },
    "216": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "217": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x150"
    },
    "220": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "221": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "222": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1C35F4C3"
    },
    "227": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "228": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x172"
    },
    "231": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "232": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "233": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2A5899D0"
    },
    "238": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "239": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A5"
    },
    "242": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "243": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "244": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3A98EF39"
    },
    "249": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "EQ",
      "path": "5"
    },
    "250": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DB"
    },
    "253": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "254": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "256": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "257": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "REVERT",
      "path": "5"
    },
    "258": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "259": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "260": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14B"
    },
    "263": {
      "fn": null,
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "264": {
      "fn": "Splitter.<receive>",
      "offset": [
        3657,
        3697
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 0,
      "value": "0x6EF95F06320E7A25A04A175CA677B7052BDD97131872C2192525A629F51BE770"
    },
    "297": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 1
    },
    "298": {
      "fn": "Splitter.<receive>",
      "offset": [
        3657,
        3697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "300": {
      "fn": "Splitter.<receive>",
      "offset": [
        3657,
        3697
      ],
      "op": "DUP1",
      "path": "5"
    },
    "301": {
      "fn": "Splitter.<receive>",
      "offset": [
        3657,
        3697
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "308": {
      "op": "SHL"
    },
    "309": {
      "op": "SUB"
    },
    "310": {
      "op": "SWAP1"
    },
    "311": {
      "op": "SWAP3"
    },
    "312": {
      "op": "AND"
    },
    "313": {
      "op": "DUP3"
    },
    "314": {
      "op": "MSTORE"
    },
    "315": {
      "fn": "Splitter.<receive>",
      "offset": [
        3687,
        3696
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "318": {
      "op": "DUP4"
    },
    "319": {
      "op": "ADD"
    },
    "320": {
      "op": "MSTORE"
    },
    "321": {
      "op": "ADD"
    },
    "322": {
      "fn": "Splitter.<receive>",
      "offset": [
        3657,
        3697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "324": {
      "fn": "Splitter.<receive>",
      "offset": [
        3657,
        3697
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "325": {
      "fn": "Splitter.<receive>",
      "offset": [
        3657,
        3697
      ],
      "op": "DUP1",
      "path": "5"
    },
    "326": {
      "fn": "Splitter.<receive>",
      "offset": [
        3657,
        3697
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "327": {
      "fn": "Splitter.<receive>",
      "offset": [
        3657,
        3697
      ],
      "op": "SUB",
      "path": "5"
    },
    "328": {
      "fn": "Splitter.<receive>",
      "offset": [
        3657,
        3697
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "329": {
      "fn": "Splitter.<receive>",
      "offset": [
        3657,
        3697
      ],
      "op": "LOG1",
      "path": "5"
    },
    "330": {
      "offset": [
        1587,
        9691
      ],
      "op": "STOP",
      "path": "5"
    },
    "331": {
      "fn": "Splitter.<receive>",
      "offset": [
        1587,
        9691
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "332": {
      "fn": "Splitter.<receive>",
      "offset": [
        1587,
        9691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "334": {
      "fn": "Splitter.<receive>",
      "offset": [
        1587,
        9691
      ],
      "op": "DUP1",
      "path": "5"
    },
    "335": {
      "first_revert": true,
      "fn": "Splitter.<receive>",
      "offset": [
        1587,
        9691
      ],
      "op": "REVERT",
      "path": "5"
    },
    "336": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "337": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "338": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "DUP1",
      "path": "5"
    },
    "339": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "340": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C"
    },
    "343": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "344": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "346": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "DUP1",
      "path": "5"
    },
    "347": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "REVERT",
      "path": "5"
    },
    "348": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "349": {
      "op": "POP"
    },
    "350": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x170"
    },
    "353": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16B"
    },
    "356": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "357": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "359": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11EF"
    },
    "362": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [
        6118,
        6773
      ],
      "op": "JUMP",
      "path": "5"
    },
    "363": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "364": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3EF"
    },
    "367": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [
        6118,
        6773
      ],
      "op": "JUMP",
      "path": "5"
    },
    "368": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "369": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "STOP",
      "path": "5"
    },
    "370": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "371": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "372": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "DUP1",
      "path": "5"
    },
    "373": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "374": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17E"
    },
    "377": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "378": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "380": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "DUP1",
      "path": "5"
    },
    "381": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "REVERT",
      "path": "5"
    },
    "382": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "383": {
      "op": "POP"
    },
    "384": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192"
    },
    "387": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18D"
    },
    "390": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "391": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "393": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121C"
    },
    "396": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [
        5658,
        5924
      ],
      "op": "JUMP",
      "path": "5"
    },
    "397": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "398": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4DC"
    },
    "401": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [
        5658,
        5924
      ],
      "op": "JUMP",
      "path": "5"
    },
    "402": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "403": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "405": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "406": {
      "op": "SWAP1"
    },
    "407": {
      "op": "DUP2"
    },
    "408": {
      "op": "MSTORE"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "op": "ADD"
    },
    "412": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "413": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "415": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "416": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "DUP1",
      "path": "5"
    },
    "417": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "418": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "SUB",
      "path": "5"
    },
    "419": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "420": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "RETURN",
      "path": "5"
    },
    "421": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "422": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "423": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "DUP1",
      "path": "5"
    },
    "424": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "425": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B1"
    },
    "428": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "429": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "431": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "DUP1",
      "path": "5"
    },
    "432": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "REVERT",
      "path": "5"
    },
    "433": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "434": {
      "op": "POP"
    },
    "435": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192"
    },
    "438": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C0"
    },
    "441": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "442": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "444": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11EF"
    },
    "447": {
      "fn": "Splitter.totalERCReleased",
      "jump": "i",
      "offset": [
        4204,
        4324
      ],
      "op": "JUMP",
      "path": "5"
    },
    "448": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "455": {
      "op": "SHL"
    },
    "456": {
      "op": "SUB"
    },
    "457": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "AND",
      "path": "5",
      "statement": 2
    },
    "458": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4265,
        4272
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "460": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "461": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "DUP2",
      "path": "5"
    },
    "462": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "463": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4310
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "465": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "467": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "468": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "470": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "471": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "472": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "473": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "474": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4204,
        4324
      ],
      "op": "JUMP",
      "path": "5"
    },
    "475": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "476": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "477": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "DUP1",
      "path": "5"
    },
    "478": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "479": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "482": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "483": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "485": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "DUP1",
      "path": "5"
    },
    "486": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "REVERT",
      "path": "5"
    },
    "487": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "fn": "Splitter.totalShares",
      "offset": [
        3852,
        3864
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x1"
    },
    "491": {
      "fn": "Splitter.totalShares",
      "offset": [
        3852,
        3864
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "492": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192"
    },
    "495": {
      "fn": "Splitter.totalShares",
      "offset": [
        3782,
        3871
      ],
      "op": "JUMP",
      "path": "5"
    },
    "496": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "497": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "498": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "499": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "500": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC"
    },
    "503": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "504": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "506": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "507": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "508": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "509": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "510": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "513": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AC"
    },
    "516": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "517": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "518": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "519": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "DUP1",
      "path": "5"
    },
    "520": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "521": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x211"
    },
    "524": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "525": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "527": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "DUP1",
      "path": "5"
    },
    "528": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "REVERT",
      "path": "5"
    },
    "529": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "530": {
      "op": "POP"
    },
    "531": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x225"
    },
    "534": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x220"
    },
    "537": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "538": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "540": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1255"
    },
    "543": {
      "fn": "Splitter.payee",
      "jump": "i",
      "offset": [
        5099,
        5197
      ],
      "op": "JUMP",
      "path": "5"
    },
    "544": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "545": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E2"
    },
    "548": {
      "fn": "Splitter.payee",
      "jump": "i",
      "offset": [
        5099,
        5197
      ],
      "op": "JUMP",
      "path": "5"
    },
    "549": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "550": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "552": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "559": {
      "op": "SHL"
    },
    "560": {
      "op": "SUB"
    },
    "561": {
      "op": "SWAP1"
    },
    "562": {
      "op": "SWAP2"
    },
    "563": {
      "op": "AND"
    },
    "564": {
      "op": "DUP2"
    },
    "565": {
      "op": "MSTORE"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "568": {
      "op": "ADD"
    },
    "569": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19C"
    },
    "572": {
      "op": "JUMP"
    },
    "573": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "574": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "575": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "576": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "577": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x249"
    },
    "580": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "581": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "583": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "584": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "585": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "589": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 4
    },
    "590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "596": {
      "op": "SHL"
    },
    "597": {
      "op": "SUB"
    },
    "598": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "599": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225"
    },
    "602": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "603": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "604": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "605": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "DUP1",
      "path": "5"
    },
    "606": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "607": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x267"
    },
    "610": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "611": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "613": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "DUP1",
      "path": "5"
    },
    "614": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "REVERT",
      "path": "5"
    },
    "615": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "616": {
      "op": "POP"
    },
    "617": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192"
    },
    "620": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x276"
    },
    "623": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "624": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "626": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11EF"
    },
    "629": {
      "fn": "Splitter.released",
      "jump": "i",
      "offset": [
        4607,
        4714
      ],
      "op": "JUMP",
      "path": "5"
    },
    "630": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "op": "SUB"
    },
    "639": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "AND",
      "path": "5",
      "statement": 5
    },
    "640": {
      "fn": "Splitter.released",
      "offset": [
        4663,
        4670
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "642": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "643": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "DUP2",
      "path": "5"
    },
    "644": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "645": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4698
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "647": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "649": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "650": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "652": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "653": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "654": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "655": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "656": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "JUMP",
      "path": "5"
    },
    "657": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "658": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "659": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "DUP1",
      "path": "5"
    },
    "660": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "661": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29D"
    },
    "664": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "665": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "667": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "DUP1",
      "path": "5"
    },
    "668": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "REVERT",
      "path": "5"
    },
    "669": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "670": {
      "op": "POP"
    },
    "671": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192"
    },
    "674": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AC"
    },
    "677": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "678": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "680": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11EF"
    },
    "683": {
      "fn": "Splitter.releasable",
      "jump": "i",
      "offset": [
        5282,
        5504
      ],
      "op": "JUMP",
      "path": "5"
    },
    "684": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "685": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x612"
    },
    "688": {
      "fn": "Splitter.releasable",
      "jump": "i",
      "offset": [
        5282,
        5504
      ],
      "op": "JUMP",
      "path": "5"
    },
    "689": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "690": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "691": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "DUP1",
      "path": "5"
    },
    "692": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "693": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BD"
    },
    "696": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "697": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "699": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "DUP1",
      "path": "5"
    },
    "700": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "REVERT",
      "path": "5"
    },
    "701": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "702": {
      "op": "POP"
    },
    "703": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x170"
    },
    "706": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CC"
    },
    "709": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "710": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "712": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121C"
    },
    "715": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [
        7034,
        7839
      ],
      "op": "JUMP",
      "path": "5"
    },
    "716": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "717": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x655"
    },
    "720": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [
        7034,
        7839
      ],
      "op": "JUMP",
      "path": "5"
    },
    "721": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "722": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "723": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "DUP1",
      "path": "5"
    },
    "724": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "725": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DD"
    },
    "728": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "729": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "731": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "DUP1",
      "path": "5"
    },
    "732": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "REVERT",
      "path": "5"
    },
    "733": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "734": {
      "op": "POP"
    },
    "735": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x170"
    },
    "738": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EC"
    },
    "741": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "742": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "744": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11EF"
    },
    "747": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        7910,
        8549
      ],
      "op": "JUMP",
      "path": "5"
    },
    "748": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "749": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x775"
    },
    "752": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        7910,
        8549
      ],
      "op": "JUMP",
      "path": "5"
    },
    "753": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "754": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "755": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "DUP1",
      "path": "5"
    },
    "756": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "757": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FD"
    },
    "760": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "761": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "763": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "DUP1",
      "path": "5"
    },
    "764": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "REVERT",
      "path": "5"
    },
    "765": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "766": {
      "op": "POP"
    },
    "767": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192"
    },
    "770": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30C"
    },
    "773": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "774": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "776": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11EF"
    },
    "779": {
      "fn": "Splitter.shares",
      "jump": "i",
      "offset": [
        4410,
        4513
      ],
      "op": "JUMP",
      "path": "5"
    },
    "780": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "op": "SUB"
    },
    "789": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4506
      ],
      "op": "AND",
      "path": "5",
      "statement": 6
    },
    "790": {
      "fn": "Splitter.shares",
      "offset": [
        4464,
        4471
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "792": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4506
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "793": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4506
      ],
      "op": "DUP2",
      "path": "5"
    },
    "794": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4506
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "795": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4497
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "797": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "799": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4506
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "800": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "802": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4506
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "803": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4506
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "804": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4506
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "805": {
      "fn": "Splitter.shares",
      "offset": [
        4490,
        4506
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "806": {
      "fn": "Splitter.shares",
      "offset": [
        4410,
        4513
      ],
      "op": "JUMP",
      "path": "5"
    },
    "807": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "808": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "809": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "DUP1",
      "path": "5"
    },
    "810": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "811": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x333"
    },
    "814": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "815": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "817": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "DUP1",
      "path": "5"
    },
    "818": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "REVERT",
      "path": "5"
    },
    "819": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x170"
    },
    "824": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x342"
    },
    "827": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "828": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "830": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1284"
    },
    "833": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [
        9148,
        9689
      ],
      "op": "JUMP",
      "path": "5"
    },
    "834": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "835": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA0C"
    },
    "838": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [
        9148,
        9689
      ],
      "op": "JUMP",
      "path": "5"
    },
    "839": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "840": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "841": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "DUP1",
      "path": "5"
    },
    "842": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "843": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x353"
    },
    "846": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "847": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "849": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "DUP1",
      "path": "5"
    },
    "850": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "REVERT",
      "path": "5"
    },
    "851": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "852": {
      "op": "POP"
    },
    "853": {
      "fn": "Splitter.totalReleased",
      "offset": [
        4032,
        4046
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x2"
    },
    "855": {
      "fn": "Splitter.totalReleased",
      "offset": [
        4032,
        4046
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "856": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192"
    },
    "859": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "JUMP",
      "path": "5"
    },
    "860": {
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "861": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "862": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "863": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "864": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x368"
    },
    "867": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "868": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "870": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "871": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "REVERT",
      "path": "5"
    },
    "872": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "873": {
      "op": "POP"
    },
    "874": {
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37C"
    },
    "877": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x377"
    },
    "880": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "881": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "883": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11EF"
    },
    "886": {
      "fn": "Splitter.totalReleased",
      "jump": "i",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "887": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "888": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3F"
    },
    "891": {
      "fn": "Splitter.totalReleased",
      "jump": "i",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "892": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "893": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "895": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "896": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19C"
    },
    "899": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "900": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "901": {
      "fn": "Splitter.totalReleased",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13AB"
    },
    "904": {
      "fn": "Splitter.totalReleased",
      "jump": "i",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "905": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "906": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "907": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "DUP1",
      "path": "5"
    },
    "908": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "909": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x395"
    },
    "912": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "913": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "915": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "DUP1",
      "path": "5"
    },
    "916": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "REVERT",
      "path": "5"
    },
    "917": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192"
    },
    "922": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A4"
    },
    "925": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "926": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "928": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121C"
    },
    "931": {
      "fn": "Splitter.releasedERC",
      "jump": "i",
      "offset": [
        4877,
        5013
      ],
      "op": "JUMP",
      "path": "5"
    },
    "932": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "939": {
      "op": "SHL"
    },
    "940": {
      "op": "SUB"
    },
    "941": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 8
    },
    "942": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "DUP3",
      "path": "5"
    },
    "943": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "AND",
      "path": "5"
    },
    "944": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4950,
        4957
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "946": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "947": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "DUP2",
      "path": "5"
    },
    "948": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "949": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4990
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "951": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "953": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "954": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "DUP2",
      "path": "5"
    },
    "955": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "956": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "958": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "DUP1",
      "path": "5"
    },
    "959": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "DUP4",
      "path": "5"
    },
    "960": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "961": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "962": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "963": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "964": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "AND",
      "path": "5"
    },
    "965": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "DUP3",
      "path": "5"
    },
    "966": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "967": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "968": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "969": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "970": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "971": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "972": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "973": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "974": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4877,
        5013
      ],
      "op": "JUMP",
      "path": "5"
    },
    "975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "976": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "977": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "978": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "979": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DB"
    },
    "982": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "983": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "985": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "986": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "987": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "988": {
      "op": "POP"
    },
    "989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "995": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "996": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "998": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11EF"
    },
    "1001": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1002": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1003": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD9"
    },
    "1006": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1007": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1014": {
      "op": "SHL"
    },
    "1015": {
      "op": "SUB"
    },
    "1016": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6209
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 9
    },
    "1017": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6209
      ],
      "op": "AND",
      "path": "5"
    },
    "1018": {
      "fn": "Splitter.release",
      "offset": [
        6212,
        6213
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1020": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6209
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1021": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6209
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1022": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6209
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1023": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1025": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6209
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1027": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6209
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1028": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6209
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1030": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6209
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1031": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6209
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1032": {
      "fn": "Splitter.release",
      "offset": [
        6193,
        6209
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1033": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x42D"
    },
    "1036": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1037": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1039": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1040": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1048": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1049": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1051": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "ADD",
      "path": "5"
    },
    "1052": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "1055": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1056": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13BE"
    },
    "1059": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [
        6185,
        6256
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1060": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1061": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1063": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1064": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1065": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1066": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "SUB",
      "path": "5"
    },
    "1067": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1068": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "1069": {
      "fn": "Splitter.release",
      "offset": [
        6185,
        6256
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1070": {
      "fn": "Splitter.release",
      "offset": [
        6267,
        6282
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1072": {
      "fn": "Splitter.release",
      "offset": [
        6285,
        6304
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x438"
    },
    "1075": {
      "fn": "Splitter.release",
      "offset": [
        6296,
        6303
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1076": {
      "fn": "Splitter.release",
      "offset": [
        6285,
        6295
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x612"
    },
    "1079": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [
        6285,
        6304
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1080": {
      "fn": "Splitter.release",
      "offset": [
        6285,
        6304
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1081": {
      "fn": "Splitter.release",
      "offset": [
        6267,
        6304
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "branch": 55,
      "fn": "Splitter.release",
      "offset": [
        6323,
        6335
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 10
    },
    "1084": {
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x457"
    },
    "1087": {
      "branch": 55,
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1088": {
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1090": {
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1097": {
      "op": "SHL"
    },
    "1098": {
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1099": {
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1100": {
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1102": {
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "ADD",
      "path": "5"
    },
    "1103": {
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "1106": {
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1107": {
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1404"
    },
    "1110": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [
        6315,
        6383
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1111": {
      "fn": "Splitter.release",
      "offset": [
        6315,
        6383
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1112": {
      "fn": "Splitter.release",
      "offset": [
        6592,
        6599
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 11
    },
    "1113": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6588
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1115": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6588
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1117": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6599
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1118": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6599
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1119": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6599
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1120": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x469"
    },
    "1123": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6599
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1124": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6599
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1125": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1465"
    },
    "1128": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [
        6574,
        6599
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1129": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6599
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1130": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6599
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1131": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6599
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1132": {
      "fn": "Splitter.release",
      "offset": [
        6574,
        6599
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1133": {
      "op": "POP"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1141": {
      "op": "SHL"
    },
    "1142": {
      "op": "SUB"
    },
    "1143": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6651
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 12
    },
    "1144": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6651
      ],
      "op": "AND",
      "path": "5"
    },
    "1145": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6651
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1147": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6651
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1148": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6651
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1149": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6651
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1150": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6642
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1152": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6651
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1154": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6651
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1155": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6651
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1157": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6651
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1158": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6651
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1159": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6662
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1160": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6662
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1161": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6662
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1162": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6662
      ],
      "op": "ADD",
      "path": "5"
    },
    "1163": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6662
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1164": {
      "fn": "Splitter.release",
      "offset": [
        6633,
        6662
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1165": {
      "fn": "Splitter.release",
      "offset": [
        6683,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 13,
      "value": "0x496"
    },
    "1168": {
      "fn": "Splitter.release",
      "offset": [
        6643,
        6650
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1169": {
      "fn": "Splitter.release",
      "offset": [
        6655,
        6662
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1170": {
      "fn": "Splitter.release",
      "offset": [
        6683,
        6700
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD74"
    },
    "1173": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [
        6683,
        6718
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1174": {
      "fn": "Splitter.release",
      "offset": [
        6683,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1175": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 14,
      "value": "0x40"
    },
    "1177": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1178": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1185": {
      "op": "SHL"
    },
    "1186": {
      "op": "SUB"
    },
    "1187": {
      "op": "DUP5"
    },
    "1188": {
      "op": "AND"
    },
    "1189": {
      "op": "DUP2"
    },
    "1190": {
      "op": "MSTORE"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1193": {
      "op": "DUP2"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "op": "DUP4"
    },
    "1196": {
      "op": "SWAP1"
    },
    "1197": {
      "op": "MSTORE"
    },
    "1198": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDF20FD1E76BC69D672E4814FAFB2C449BBA3A5369D8359ADF9E05E6FDE87B056"
    },
    "1231": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1232": {
      "op": "ADD"
    },
    "1233": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1235": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1236": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1237": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1238": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "SUB",
      "path": "5"
    },
    "1239": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1240": {
      "fn": "Splitter.release",
      "offset": [
        6733,
        6766
      ],
      "op": "LOG1",
      "path": "5"
    },
    "1241": {
      "fn": "Splitter.release",
      "offset": [
        6175,
        6773
      ],
      "op": "POP",
      "path": "5"
    },
    "1242": {
      "fn": "Splitter.release",
      "offset": [
        6118,
        6773
      ],
      "op": "POP",
      "path": "5"
    },
    "1243": {
      "fn": "Splitter.release",
      "jump": "o",
      "offset": [
        6118,
        6773
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1244": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1251": {
      "op": "SHL"
    },
    "1252": {
      "op": "SUB"
    },
    "1253": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1254": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "AND",
      "path": "5"
    },
    "1255": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5733,
        5740
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1257": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1258": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1259": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1260": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4310
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "1262": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1264": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1265": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1267": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1268": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1269": {
      "fn": "Splitter.totalERCReleased",
      "offset": [
        4291,
        4317
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1270": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5733,
        5740
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1271": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5733,
        5740
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1272": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1274": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1275": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1284": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1285": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5800,
        5804
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "1286": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1288": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1289": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "ADD",
      "path": "5"
    },
    "1290": {
      "op": "MSTORE"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1297": {
      "op": "SHL"
    },
    "1298": {
      "op": "SUB"
    },
    "1299": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5791
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1300": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5791
      ],
      "op": "AND",
      "path": "5"
    },
    "1301": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5791
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1302": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5791
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "1307": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5791
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1310": {
      "op": "ADD"
    },
    "1311": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1313": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1315": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1316": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1317": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1318": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "SUB",
      "path": "5"
    },
    "1319": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1320": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1321": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "GAS",
      "path": "5"
    },
    "1322": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "1323": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1324": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1325": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1326": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53B"
    },
    "1329": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1330": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1331": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1333": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1334": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1335": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1336": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1338": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1339": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1340": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "POP",
      "path": "5"
    },
    "1341": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "POP",
      "path": "5"
    },
    "1342": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "POP",
      "path": "5"
    },
    "1343": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "POP",
      "path": "5"
    },
    "1344": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1346": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1347": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1348": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1350": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "NOT",
      "path": "5"
    },
    "1351": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1353": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1354": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "ADD",
      "path": "5"
    },
    "1355": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "AND",
      "path": "5"
    },
    "1356": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1357": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "ADD",
      "path": "5"
    },
    "1358": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1359": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1361": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1362": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "POP",
      "path": "5"
    },
    "1363": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1364": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "ADD",
      "path": "5"
    },
    "1365": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1366": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x55F"
    },
    "1369": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1370": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1371": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x147D"
    },
    "1374": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [
        5776,
        5806
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1375": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5806
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1376": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x569"
    },
    "1379": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5832
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1380": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5832
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1381": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1465"
    },
    "1384": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [
        5776,
        5832
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1385": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5776,
        5832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1392": {
      "op": "SHL"
    },
    "1393": {
      "op": "SUB"
    },
    "1394": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1395": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1396": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "AND",
      "path": "5"
    },
    "1397": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4950,
        4957
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1399": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1400": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1401": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1402": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4990
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "1404": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1406": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1407": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1408": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1409": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1411": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1412": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1413": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        4997
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1414": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1415": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1416": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "AND",
      "path": "5"
    },
    "1417": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1418": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1419": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1420": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1421": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1422": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1423": {
      "fn": "Splitter.releasedERC",
      "offset": [
        4976,
        5006
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1424": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5752,
        5832
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1425": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5752,
        5832
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5849,
        5917
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 15,
      "value": "0x5A4"
    },
    "1430": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5849,
        5917
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1431": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5865,
        5872
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1432": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5865,
        5872
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1433": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5752,
        5832
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1434": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5752,
        5832
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1435": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5849,
        5864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE92"
    },
    "1438": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [
        5849,
        5917
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1439": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5889,
        5916
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1440": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5849,
        5864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE92"
    },
    "1443": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [
        5849,
        5917
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1444": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5849,
        5917
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1445": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5842,
        5917
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1446": {
      "fn": "Splitter.releasableERC",
      "offset": [
        5658,
        5924
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "fn": "Splitter.releasableERC",
      "jump": "o",
      "offset": [
        5658,
        5924
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1452": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1453": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1455": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1462": {
      "op": "SHL"
    },
    "1463": {
      "op": "SUB"
    },
    "1464": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1465": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1466": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1467": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D6"
    },
    "1470": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1471": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1473": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1474": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1482": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1483": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1485": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1486": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x424"
    },
    "1489": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1490": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1496"
    },
    "1493": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1494": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1495": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x5E0"
    },
    "1498": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1500": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED0"
    },
    "1503": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1504": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1505": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1506": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1507": {
      "fn": "Splitter.payee",
      "offset": [
        5150,
        5157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1509": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5183
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 17,
      "value": "0x6"
    },
    "1511": {
      "fn": "Splitter.payee",
      "offset": [
        5184,
        5189
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1512": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1513": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1514": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1515": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "LT",
      "path": "5"
    },
    "1516": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5F7"
    },
    "1519": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1520": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5F7"
    },
    "1523": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CB"
    },
    "1526": {
      "fn": "Splitter.payee",
      "jump": "i",
      "offset": [
        5176,
        5190
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1527": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1528": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1530": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1531": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1532": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1533": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1535": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1536": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1537": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1538": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "ADD",
      "path": "5"
    },
    "1539": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1546": {
      "op": "SHL"
    },
    "1547": {
      "op": "SUB"
    },
    "1548": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "AND",
      "path": "5"
    },
    "1549": {
      "fn": "Splitter.payee",
      "offset": [
        5176,
        5190
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1550": {
      "fn": "Splitter.payee",
      "offset": [
        5099,
        5197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "op": "POP"
    },
    "1553": {
      "fn": "Splitter.payee",
      "jump": "o",
      "offset": [
        5099,
        5197
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1554": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1555": {
      "fn": "Splitter.releasable",
      "offset": [
        5340,
        5347
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1557": {
      "fn": "Splitter.releasable",
      "offset": [
        5359,
        5380
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1558": {
      "fn": "Splitter.releasable",
      "offset": [
        5407,
        5422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x61E"
    },
    "1561": {
      "fn": "Splitter.totalReleased",
      "offset": [
        4032,
        4046
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1563": {
      "fn": "Splitter.totalReleased",
      "offset": [
        4032,
        4046
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1564": {
      "fn": "Splitter.totalReleased",
      "offset": [
        4032,
        4046
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1565": {
      "fn": "Splitter.totalReleased",
      "offset": [
        3960,
        4053
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1566": {
      "fn": "Splitter.releasable",
      "offset": [
        5407,
        5422
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1567": {
      "fn": "Splitter.releasable",
      "offset": [
        5383,
        5422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x628"
    },
    "1570": {
      "fn": "Splitter.releasable",
      "offset": [
        5383,
        5422
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1571": {
      "fn": "Splitter.releasable",
      "offset": [
        5383,
        5404
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "1572": {
      "fn": "Splitter.releasable",
      "offset": [
        5383,
        5422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1465"
    },
    "1575": {
      "fn": "Splitter.releasable",
      "jump": "i",
      "offset": [
        5383,
        5422
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1576": {
      "fn": "Splitter.releasable",
      "offset": [
        5383,
        5422
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1577": {
      "fn": "Splitter.releasable",
      "offset": [
        5359,
        5422
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1578": {
      "fn": "Splitter.releasable",
      "offset": [
        5359,
        5422
      ],
      "op": "POP",
      "path": "5"
    },
    "1579": {
      "fn": "Splitter.releasable",
      "offset": [
        5439,
        5497
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 18,
      "value": "0x64E"
    },
    "1582": {
      "fn": "Splitter.releasable",
      "offset": [
        5455,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1583": {
      "fn": "Splitter.releasable",
      "offset": [
        5464,
        5477
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1584": {
      "fn": "Splitter.releasable",
      "offset": [
        5479,
        5496
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x59F"
    },
    "1587": {
      "fn": "Splitter.releasable",
      "offset": [
        5488,
        5495
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1594": {
      "op": "SHL"
    },
    "1595": {
      "op": "SUB"
    },
    "1596": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "AND",
      "path": "5"
    },
    "1597": {
      "fn": "Splitter.released",
      "offset": [
        4663,
        4670
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1599": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1600": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1601": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1602": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4698
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1604": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1606": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1607": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1609": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1610": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1611": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1612": {
      "fn": "Splitter.released",
      "offset": [
        4689,
        4707
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1613": {
      "fn": "Splitter.released",
      "offset": [
        4607,
        4714
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1614": {
      "fn": "Splitter.releasable",
      "offset": [
        5439,
        5497
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1615": {
      "fn": "Splitter.releasable",
      "offset": [
        5432,
        5497
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1616": {
      "fn": "Splitter.releasable",
      "offset": [
        5282,
        5504
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "op": "POP"
    },
    "1619": {
      "op": "POP"
    },
    "1620": {
      "fn": "Splitter.releasable",
      "jump": "o",
      "offset": [
        5282,
        5504
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1621": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1628": {
      "op": "SHL"
    },
    "1629": {
      "op": "SUB"
    },
    "1630": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7134
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 19
    },
    "1631": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7134
      ],
      "op": "AND",
      "path": "5"
    },
    "1632": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7137,
        7138
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1634": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7134
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1635": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7134
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1636": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7134
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1637": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7125
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1639": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1641": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7134
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1642": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1644": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7134
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1645": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7134
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1646": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7118,
        7134
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1647": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x68A"
    },
    "1650": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1651": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1653": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1660": {
      "op": "SHL"
    },
    "1661": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1662": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1663": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1665": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "ADD",
      "path": "5"
    },
    "1666": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "1669": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1670": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13BE"
    },
    "1673": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [
        7110,
        7181
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1674": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7110,
        7181
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1675": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7192,
        7207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1677": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7210,
        7239
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x696"
    },
    "1680": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7224,
        7229
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1681": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7231,
        7238
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1682": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7210,
        7223
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4DC"
    },
    "1685": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [
        7210,
        7239
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1686": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7210,
        7239
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1687": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7192,
        7239
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1688": {
      "op": "POP"
    },
    "1689": {
      "branch": 56,
      "fn": "Splitter.releaseERC",
      "offset": [
        7258,
        7270
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 20
    },
    "1690": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6B5"
    },
    "1693": {
      "branch": 56,
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1694": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1696": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1697": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1703": {
      "op": "SHL"
    },
    "1704": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1705": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1706": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1708": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "ADD",
      "path": "5"
    },
    "1709": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "1712": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1713": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1404"
    },
    "1716": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [
        7250,
        7318
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1717": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7250,
        7318
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1724": {
      "op": "SHL"
    },
    "1725": {
      "op": "SUB"
    },
    "1726": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 21
    },
    "1727": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "AND",
      "path": "5"
    },
    "1728": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1730": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1731": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1732": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1733": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7587
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "1735": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1737": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1738": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1740": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1741": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1742": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7605
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1743": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7605
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1744": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7598,
        7605
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1745": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7598,
        7605
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1746": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7594
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1747": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7605
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6DD"
    },
    "1750": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7605
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1751": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7598,
        7605
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1752": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7598,
        7605
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1753": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7605
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1465"
    },
    "1756": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [
        7568,
        7605
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1757": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7605
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1758": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7605
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1759": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7605
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1760": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7568,
        7605
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1761": {
      "op": "POP"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1769": {
      "op": "SHL"
    },
    "1770": {
      "op": "SUB"
    },
    "1771": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 22
    },
    "1772": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1773": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "AND",
      "path": "5"
    },
    "1774": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1776": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1777": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1778": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1779": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7653
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "1781": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1783": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1784": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1785": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1786": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1788": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1789": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1790": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7660
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1791": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7669
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1792": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7669
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1793": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7669
      ],
      "op": "AND",
      "path": "5"
    },
    "1794": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7669
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1795": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7669
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1796": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7669
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1797": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7669
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1798": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7669
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1799": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7669
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1800": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7680
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1801": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7680
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1802": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7680
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1803": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7680
      ],
      "op": "ADD",
      "path": "5"
    },
    "1804": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7680
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1805": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7639,
        7680
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1806": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7701,
        7748
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 23,
      "value": "0x718"
    },
    "1809": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7654,
        7659
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1810": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7661,
        7668
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1811": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7673,
        7680
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1812": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7701,
        7723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF20"
    },
    "1815": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [
        7701,
        7748
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1816": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7701,
        7748
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1823": {
      "op": "SHL"
    },
    "1824": {
      "op": "SUB"
    },
    "1825": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 24
    },
    "1826": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1827": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "AND",
      "path": "5"
    },
    "1828": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1830": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1831": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1832": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1833": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7822
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1835": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1837": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1838": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1840": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1841": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1842": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1843": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7809,
        7831
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1844": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1845": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1846": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1847": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1848": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "AND",
      "path": "5"
    },
    "1849": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1850": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xB91796AC388F2A71D412E9A062CE147ADF6C8F3683C6B37FA5F002529FBCB5CF"
    },
    "1883": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1884": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x768"
    },
    "1887": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1888": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7791,
        7798
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1889": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7791,
        7798
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1890": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7800,
        7807
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1891": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7800,
        7807
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1892": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x151C"
    },
    "1895": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [
        7763,
        7832
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1896": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1897": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1899": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1900": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1901": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1902": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "SUB",
      "path": "5"
    },
    "1903": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1904": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7763,
        7832
      ],
      "op": "LOG2",
      "path": "5"
    },
    "1905": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7100,
        7839
      ],
      "op": "POP",
      "path": "5"
    },
    "1906": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "POP",
      "path": "5"
    },
    "1907": {
      "fn": "Splitter.releaseERC",
      "offset": [
        7034,
        7839
      ],
      "op": "POP",
      "path": "5"
    },
    "1908": {
      "fn": "Splitter.releaseERC",
      "jump": "o",
      "offset": [
        7034,
        7839
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1909": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1910": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7978,
        7987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1912": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7973,
        8543
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1913": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7997,
        8004
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "1915": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7997,
        8011
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1916": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7993,
        8011
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1917": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7993,
        8011
      ],
      "op": "LT",
      "path": "5"
    },
    "1918": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7973,
        8543
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1919": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7973,
        8543
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA08"
    },
    "1922": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7973,
        8543
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1923": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8062,
        8063
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0x0"
    },
    "1925": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8047
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1927": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1929": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "1931": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8056,
        8057
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1932": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1933": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1934": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1935": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "LT",
      "path": "5"
    },
    "1936": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x79B"
    },
    "1939": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1940": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x79B"
    },
    "1943": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CB"
    },
    "1946": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        8048,
        8058
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1947": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1948": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1950": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1951": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1952": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1953": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1955": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1956": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1957": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1958": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1959": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1960": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "ADD",
      "path": "5"
    },
    "1961": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1968": {
      "op": "SHL"
    },
    "1969": {
      "op": "SUB"
    },
    "1970": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8048,
        8058
      ],
      "op": "AND",
      "path": "5"
    },
    "1971": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1972": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1973": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1974": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "ADD",
      "path": "5"
    },
    "1975": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1976": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1977": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1978": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1979": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1981": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "ADD",
      "path": "5"
    },
    "1982": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1983": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1984": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8059
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1985": {
      "branch": 57,
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8040,
        8063
      ],
      "op": "GT",
      "path": "5"
    },
    "1986": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8032,
        8089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x805"
    },
    "1989": {
      "branch": 57,
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8032,
        8089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1990": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8032,
        8089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1992": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8032,
        8089
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1999": {
      "op": "SHL"
    },
    "2000": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8032,
        8089
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2001": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8032,
        8089
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2004": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8032,
        8089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2006": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8032,
        8089
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2007": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8032,
        8089
      ],
      "op": "ADD",
      "path": "5"
    },
    "2008": {
      "op": "MSTORE"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2013": {
      "op": "DUP3"
    },
    "2014": {
      "op": "ADD"
    },
    "2015": {
      "op": "MSTORE"
    },
    "2016": {
      "op": "PUSH21",
      "value": "0x4163636F756E7420686173206E6F20736861726573"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "2040": {
      "op": "SHL"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2043": {
      "op": "DUP3"
    },
    "2044": {
      "op": "ADD"
    },
    "2045": {
      "op": "MSTORE"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2048": {
      "op": "ADD"
    },
    "2049": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8032,
        8089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "2052": {
      "op": "JUMP"
    },
    "2053": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8032,
        8089
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2054": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8104,
        8119
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2056": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8122,
        8154
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x838"
    },
    "2059": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8136,
        8141
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2060": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8150
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2062": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8151,
        8152
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2063": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2064": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2065": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2066": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "LT",
      "path": "5"
    },
    "2067": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x81E"
    },
    "2070": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2071": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x81E"
    },
    "2074": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CB"
    },
    "2077": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        8143,
        8153
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2078": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2079": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2081": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2082": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2083": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2084": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2086": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2087": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2088": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2089": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "ADD",
      "path": "5"
    },
    "2090": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2097": {
      "op": "SHL"
    },
    "2098": {
      "op": "SUB"
    },
    "2099": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8143,
        8153
      ],
      "op": "AND",
      "path": "5"
    },
    "2100": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8122,
        8135
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4DC"
    },
    "2103": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        8122,
        8154
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2104": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8122,
        8154
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2105": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8104,
        8154
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2106": {
      "op": "POP"
    },
    "2107": {
      "branch": 58,
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8177,
        8189
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 26
    },
    "2108": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8169,
        8220
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x887"
    },
    "2111": {
      "branch": 58,
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8169,
        8220
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2112": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8169,
        8220
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2114": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8169,
        8220
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2121": {
      "op": "SHL"
    },
    "2122": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8169,
        8220
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2123": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8169,
        8220
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2126": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8169,
        8220
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2128": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8169,
        8220
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2129": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8169,
        8220
      ],
      "op": "ADD",
      "path": "5"
    },
    "2130": {
      "op": "MSTORE"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2135": {
      "op": "DUP3"
    },
    "2136": {
      "op": "ADD"
    },
    "2137": {
      "op": "MSTORE"
    },
    "2138": {
      "op": "PUSH32",
      "value": "0x6163636F756E74206973206E6F7420647565207061796D656E74000000000000"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2173": {
      "op": "DUP3"
    },
    "2174": {
      "op": "ADD"
    },
    "2175": {
      "op": "MSTORE"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2178": {
      "op": "ADD"
    },
    "2179": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8169,
        8220
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "2182": {
      "op": "JUMP"
    },
    "2183": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8169,
        8220
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2190": {
      "op": "SHL"
    },
    "2191": {
      "op": "SUB"
    },
    "2192": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 27
    },
    "2193": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "AND",
      "path": "5"
    },
    "2194": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2196": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2197": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2198": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2199": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8254
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "2201": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2203": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2204": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2206": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2207": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2208": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8272
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2209": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8272
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2210": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8265,
        8272
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2211": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8265,
        8272
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2212": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8261
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2213": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8272
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8AF"
    },
    "2216": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8272
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2217": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8265,
        8272
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2218": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8265,
        8272
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2219": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8272
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1465"
    },
    "2222": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        8235,
        8272
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2223": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8272
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2224": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8272
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2225": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8272
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2226": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8235,
        8272
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2227": {
      "op": "POP"
    },
    "2228": {
      "op": "POP"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2235": {
      "op": "SHL"
    },
    "2236": {
      "op": "SUB"
    },
    "2237": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 28
    },
    "2238": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "AND",
      "path": "5"
    },
    "2239": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2241": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2242": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2243": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2244": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2246": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2248": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2249": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2251": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2252": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2253": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2255": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2256": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2257": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8352,
        8359
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2258": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8352,
        8359
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2259": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8336
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2260": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8344
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2261": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8345,
        8346
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2262": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8345,
        8346
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2263": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2264": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "LT",
      "path": "5"
    },
    "2265": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E4"
    },
    "2268": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2269": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E4"
    },
    "2272": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CB"
    },
    "2275": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        8337,
        8347
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2276": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2277": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2279": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2280": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2281": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2282": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2284": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2285": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2286": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2287": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2288": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2289": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "ADD",
      "path": "5"
    },
    "2290": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2297": {
      "op": "SHL"
    },
    "2298": {
      "op": "SUB"
    },
    "2299": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8337,
        8347
      ],
      "op": "AND",
      "path": "5"
    },
    "2300": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2301": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2302": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2303": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "ADD",
      "path": "5"
    },
    "2304": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2305": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2306": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2307": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2308": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2310": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "ADD",
      "path": "5"
    },
    "2311": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2312": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8348
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2313": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8359
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2314": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8359
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2315": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8359
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2316": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8359
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2317": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8359
      ],
      "op": "ADD",
      "path": "5"
    },
    "2318": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8359
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2319": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8315,
        8359
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2320": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8425
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 29,
      "value": "0x6"
    },
    "2322": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2323": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2324": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8388,
        8438
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x944"
    },
    "2327": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8388,
        8438
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2328": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8411,
        8416
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2329": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8411,
        8416
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2330": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8426,
        8427
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2331": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8426,
        8427
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2332": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2333": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "LT",
      "path": "5"
    },
    "2334": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x929"
    },
    "2337": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2338": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x929"
    },
    "2341": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CB"
    },
    "2344": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        8418,
        8428
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2345": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2346": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2348": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2349": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2350": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2351": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2353": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2354": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2355": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2356": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "ADD",
      "path": "5"
    },
    "2357": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "op": "SUB"
    },
    "2366": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8418,
        8428
      ],
      "op": "AND",
      "path": "5"
    },
    "2367": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8430,
        8437
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2368": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8388,
        8410
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF20"
    },
    "2371": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        8388,
        8438
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2372": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8388,
        8438
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2373": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8478,
        8483
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 30
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "AND",
      "path": "5"
    },
    "2383": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xB91796AC388F2A71D412E9A062CE147ADF6C8F3683C6B37FA5F002529FBCB5CF"
    },
    "2416": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2418": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8493,
        8494
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2419": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2420": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2421": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2422": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "LT",
      "path": "5"
    },
    "2423": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x982"
    },
    "2426": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2427": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x982"
    },
    "2430": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CB"
    },
    "2433": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        8485,
        8495
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2434": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2435": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2436": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2438": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2439": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2441": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2443": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2444": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "ADD",
      "path": "5"
    },
    "2445": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2447": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2448": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2449": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2450": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2453": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "EXP",
      "path": "5"
    },
    "2454": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2455": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "DIV",
      "path": "5"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2462": {
      "op": "SHL"
    },
    "2463": {
      "op": "SUB"
    },
    "2464": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8485,
        8495
      ],
      "op": "AND",
      "path": "5"
    },
    "2465": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8497,
        8504
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2466": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8519
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2468": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2470": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2472": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8528,
        8529
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2473": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2474": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2475": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2476": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "LT",
      "path": "5"
    },
    "2477": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9B8"
    },
    "2480": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2481": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9B8"
    },
    "2484": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CB"
    },
    "2487": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        8520,
        8530
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2488": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2489": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2491": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2492": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2493": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2494": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2496": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2497": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2498": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2499": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2500": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2501": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "ADD",
      "path": "5"
    },
    "2502": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2509": {
      "op": "SHL"
    },
    "2510": {
      "op": "SUB"
    },
    "2511": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8520,
        8530
      ],
      "op": "AND",
      "path": "5"
    },
    "2512": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2513": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2514": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2515": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "ADD",
      "path": "5"
    },
    "2516": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2517": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2518": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2519": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2520": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2522": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2523": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2524": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "ADD",
      "path": "5"
    },
    "2525": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2526": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2527": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2528": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2529": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2530": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9ED"
    },
    "2533": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2534": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2535": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2536": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8506,
        8531
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2537": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x151C"
    },
    "2540": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        8457,
        8532
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2541": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2542": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2544": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2545": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2546": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2547": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "SUB",
      "path": "5"
    },
    "2548": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2549": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8457,
        8532
      ],
      "op": "LOG2",
      "path": "5"
    },
    "2550": {
      "op": "POP"
    },
    "2551": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8013,
        8016
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 31
    },
    "2552": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8013,
        8016
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA00"
    },
    "2555": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8013,
        8016
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2556": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8013,
        8016
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15DE"
    },
    "2559": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [
        8013,
        8016
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2560": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8013,
        8016
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2561": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8013,
        8016
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2562": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8013,
        8016
      ],
      "op": "POP",
      "path": "5"
    },
    "2563": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        8013,
        8016
      ],
      "op": "POP",
      "path": "5"
    },
    "2564": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7973,
        8543
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x778"
    },
    "2567": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7973,
        8543
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2568": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7973,
        8543
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2569": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7973,
        8543
      ],
      "op": "POP",
      "path": "5"
    },
    "2570": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [
        7910,
        8549
      ],
      "op": "POP",
      "path": "5"
    },
    "2571": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "o",
      "offset": [
        7910,
        8549
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2572": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2573": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2575": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2582": {
      "op": "SHL"
    },
    "2583": {
      "op": "SUB"
    },
    "2584": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2585": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2586": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2587": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA36"
    },
    "2590": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2591": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2593": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2600": {
      "op": "SHL"
    },
    "2601": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2602": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2603": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2605": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2606": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x424"
    },
    "2609": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2610": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1496"
    },
    "2613": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2614": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2621": {
      "op": "SHL"
    },
    "2622": {
      "op": "SUB"
    },
    "2623": {
      "fn": "Splitter._addPayee",
      "offset": [
        9257,
        9278
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 32
    },
    "2624": {
      "branch": 59,
      "fn": "Splitter._addPayee",
      "offset": [
        9257,
        9278
      ],
      "op": "AND",
      "path": "5"
    },
    "2625": {
      "fn": "Splitter._addPayee",
      "offset": [
        9249,
        9327
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAA1"
    },
    "2628": {
      "branch": 59,
      "fn": "Splitter._addPayee",
      "offset": [
        9249,
        9327
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2629": {
      "fn": "Splitter._addPayee",
      "offset": [
        9249,
        9327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2631": {
      "fn": "Splitter._addPayee",
      "offset": [
        9249,
        9327
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2632": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2638": {
      "op": "SHL"
    },
    "2639": {
      "fn": "Splitter._addPayee",
      "offset": [
        9249,
        9327
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2640": {
      "fn": "Splitter._addPayee",
      "offset": [
        9249,
        9327
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2643": {
      "fn": "Splitter._addPayee",
      "offset": [
        9249,
        9327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2645": {
      "fn": "Splitter._addPayee",
      "offset": [
        9249,
        9327
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2646": {
      "fn": "Splitter._addPayee",
      "offset": [
        9249,
        9327
      ],
      "op": "ADD",
      "path": "5"
    },
    "2647": {
      "op": "MSTORE"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2652": {
      "op": "DUP3"
    },
    "2653": {
      "op": "ADD"
    },
    "2654": {
      "op": "MSTORE"
    },
    "2655": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E742069732074686520"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2690": {
      "op": "DUP3"
    },
    "2691": {
      "op": "ADD"
    },
    "2692": {
      "op": "MSTORE"
    },
    "2693": {
      "op": "PUSH12",
      "value": "0x7A65726F2061646472657373"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2708": {
      "op": "SHL"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2711": {
      "op": "DUP3"
    },
    "2712": {
      "op": "ADD"
    },
    "2713": {
      "op": "MSTORE"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2716": {
      "op": "ADD"
    },
    "2717": {
      "fn": "Splitter._addPayee",
      "offset": [
        9249,
        9327
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "2720": {
      "op": "JUMP"
    },
    "2721": {
      "fn": "Splitter._addPayee",
      "offset": [
        9249,
        9327
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2722": {
      "fn": "Splitter._addPayee",
      "offset": [
        9355,
        9356
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 33,
      "value": "0x0"
    },
    "2724": {
      "fn": "Splitter._addPayee",
      "offset": [
        9345,
        9352
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2725": {
      "branch": 60,
      "fn": "Splitter._addPayee",
      "offset": [
        9345,
        9356
      ],
      "op": "GT",
      "path": "5"
    },
    "2726": {
      "fn": "Splitter._addPayee",
      "offset": [
        9337,
        9390
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAF1"
    },
    "2729": {
      "branch": 60,
      "fn": "Splitter._addPayee",
      "offset": [
        9337,
        9390
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2730": {
      "fn": "Splitter._addPayee",
      "offset": [
        9337,
        9390
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2732": {
      "fn": "Splitter._addPayee",
      "offset": [
        9337,
        9390
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2739": {
      "op": "SHL"
    },
    "2740": {
      "fn": "Splitter._addPayee",
      "offset": [
        9337,
        9390
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2741": {
      "fn": "Splitter._addPayee",
      "offset": [
        9337,
        9390
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2744": {
      "fn": "Splitter._addPayee",
      "offset": [
        9337,
        9390
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2746": {
      "fn": "Splitter._addPayee",
      "offset": [
        9337,
        9390
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2747": {
      "fn": "Splitter._addPayee",
      "offset": [
        9337,
        9390
      ],
      "op": "ADD",
      "path": "5"
    },
    "2748": {
      "op": "MSTORE"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2753": {
      "op": "DUP3"
    },
    "2754": {
      "op": "ADD"
    },
    "2755": {
      "op": "MSTORE"
    },
    "2756": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A20736861726573206172652030000000"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2791": {
      "op": "DUP3"
    },
    "2792": {
      "op": "ADD"
    },
    "2793": {
      "op": "MSTORE"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2796": {
      "op": "ADD"
    },
    "2797": {
      "fn": "Splitter._addPayee",
      "offset": [
        9337,
        9390
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "2800": {
      "op": "JUMP"
    },
    "2801": {
      "fn": "Splitter._addPayee",
      "offset": [
        9337,
        9390
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2808": {
      "op": "SHL"
    },
    "2809": {
      "op": "SUB"
    },
    "2810": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 34
    },
    "2811": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "AND",
      "path": "5"
    },
    "2812": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2814": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2815": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2816": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2817": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9415
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2819": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2821": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2822": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2824": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2825": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2826": {
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9424
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2827": {
      "branch": 61,
      "fn": "Splitter._addPayee",
      "offset": [
        9408,
        9429
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2828": {
      "fn": "Splitter._addPayee",
      "offset": [
        9400,
        9477
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB6B"
    },
    "2831": {
      "branch": 61,
      "fn": "Splitter._addPayee",
      "offset": [
        9400,
        9477
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2832": {
      "fn": "Splitter._addPayee",
      "offset": [
        9400,
        9477
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2834": {
      "fn": "Splitter._addPayee",
      "offset": [
        9400,
        9477
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2841": {
      "op": "SHL"
    },
    "2842": {
      "fn": "Splitter._addPayee",
      "offset": [
        9400,
        9477
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2843": {
      "fn": "Splitter._addPayee",
      "offset": [
        9400,
        9477
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2846": {
      "fn": "Splitter._addPayee",
      "offset": [
        9400,
        9477
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2848": {
      "fn": "Splitter._addPayee",
      "offset": [
        9400,
        9477
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2849": {
      "fn": "Splitter._addPayee",
      "offset": [
        9400,
        9477
      ],
      "op": "ADD",
      "path": "5"
    },
    "2850": {
      "op": "MSTORE"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2855": {
      "op": "DUP3"
    },
    "2856": {
      "op": "ADD"
    },
    "2857": {
      "op": "MSTORE"
    },
    "2858": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E7420616C7265616479"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2893": {
      "op": "DUP3"
    },
    "2894": {
      "op": "ADD"
    },
    "2895": {
      "op": "MSTORE"
    },
    "2896": {
      "op": "PUSH11",
      "value": "0x2068617320736861726573"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2910": {
      "op": "SHL"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2913": {
      "op": "DUP3"
    },
    "2914": {
      "op": "ADD"
    },
    "2915": {
      "op": "MSTORE"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2918": {
      "op": "ADD"
    },
    "2919": {
      "fn": "Splitter._addPayee",
      "offset": [
        9400,
        9477
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424"
    },
    "2922": {
      "op": "JUMP"
    },
    "2923": {
      "fn": "Splitter._addPayee",
      "offset": [
        9400,
        9477
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2924": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9495
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 35,
      "value": "0x6"
    },
    "2926": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2927": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2928": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2930": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2931": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2932": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "ADD",
      "path": "5"
    },
    "2933": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2934": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2935": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2936": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "2969": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "ADD",
      "path": "5"
    },
    "2970": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2971": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2978": {
      "op": "SHL"
    },
    "2979": {
      "op": "SUB"
    },
    "2980": {
      "op": "NOT"
    },
    "2981": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "AND",
      "path": "5"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "op": "SUB"
    },
    "2990": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2991": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "AND",
      "path": "5"
    },
    "2992": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2993": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2994": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "OR",
      "path": "5"
    },
    "2995": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2996": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2997": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3000": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9535
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 36
    },
    "3001": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9535
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3002": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9535
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3003": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9526
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3005": {
      "fn": "Splitter._addPayee",
      "offset": [
        9488,
        9509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3007": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9535
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3008": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9535
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3010": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9535
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3011": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9535
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3012": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9545
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3013": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9545
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3014": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9545
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3015": {
      "fn": "Splitter._addPayee",
      "offset": [
        9570,
        9582
      ],
      "op": "SLOAD",
      "path": "5",
      "statement": 37
    },
    "3016": {
      "fn": "Splitter._addPayee",
      "offset": [
        9570,
        9592
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBD2"
    },
    "3019": {
      "fn": "Splitter._addPayee",
      "offset": [
        9570,
        9592
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3020": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9545
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3021": {
      "fn": "Splitter._addPayee",
      "offset": [
        9519,
        9545
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3022": {
      "fn": "Splitter._addPayee",
      "offset": [
        9570,
        9592
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1465"
    },
    "3025": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [
        9570,
        9592
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3026": {
      "fn": "Splitter._addPayee",
      "offset": [
        9570,
        9592
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3027": {
      "fn": "Splitter._addPayee",
      "offset": [
        9555,
        9567
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3029": {
      "fn": "Splitter._addPayee",
      "offset": [
        9555,
        9592
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3036": {
      "op": "SHL"
    },
    "3037": {
      "op": "SUB"
    },
    "3038": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 38
    },
    "3039": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "AND",
      "path": "5"
    },
    "3040": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3042": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3043": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3044": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3045": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9615
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3047": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3049": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3050": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3051": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3052": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3054": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3055": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3056": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9624
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3057": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9632
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3058": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9632
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3059": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9632
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBFE"
    },
    "3062": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9632
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3063": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9632
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3064": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9632
      ],
      "op": "ADD",
      "path": "5"
    },
    "3065": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9632
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3066": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9632
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1141"
    },
    "3069": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [
        9602,
        9632
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3070": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9632
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3071": {
      "fn": "Splitter._addPayee",
      "offset": [
        9602,
        9632
      ],
      "op": "POP",
      "path": "5"
    },
    "3072": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 39,
      "value": "0x319341ECDAE9BDC47FD5810AAF1C42C449352B02DF82B41B8076895B5F3A4688"
    },
    "3105": {
      "fn": "Splitter._addPayee",
      "offset": [
        9658,
        9665
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3106": {
      "fn": "Splitter._addPayee",
      "offset": [
        9667,
        9674
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3107": {
      "fn": "Splitter._addPayee",
      "offset": [
        9676,
        9681
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3108": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3110": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3111": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC32"
    },
    "3114": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3115": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3116": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3117": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3118": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15F9"
    },
    "3121": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [
        9647,
        9682
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3122": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3123": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3125": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3126": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3127": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3128": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "SUB",
      "path": "5"
    },
    "3129": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3130": {
      "fn": "Splitter._addPayee",
      "offset": [
        9647,
        9682
      ],
      "op": "LOG1",
      "path": "5"
    },
    "3131": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "POP",
      "path": "5"
    },
    "3132": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "POP",
      "path": "5"
    },
    "3133": {
      "fn": "Splitter._addPayee",
      "offset": [
        9148,
        9689
      ],
      "op": "POP",
      "path": "5"
    },
    "3134": {
      "fn": "Splitter._addPayee",
      "jump": "o",
      "offset": [
        9148,
        9689
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3135": {
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3136": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3138": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3140": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3141": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3143": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3144": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3145": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3146": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3148": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3149": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3150": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3151": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3152": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC58"
    },
    "3155": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3156": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14E1"
    },
    "3159": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3160": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3161": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3162": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3164": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "ADD",
      "path": "5"
    },
    "3165": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3167": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3168": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3169": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DIV",
      "path": "5"
    },
    "3170": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "MUL",
      "path": "5"
    },
    "3171": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3173": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "ADD",
      "path": "5"
    },
    "3174": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3176": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3177": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3178": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3179": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "ADD",
      "path": "5"
    },
    "3180": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3182": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3183": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3184": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3185": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3186": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3187": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3188": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3189": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3190": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3192": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "ADD",
      "path": "5"
    },
    "3193": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3194": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3195": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3196": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC84"
    },
    "3199": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3200": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14E1"
    },
    "3203": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3204": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3205": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3206": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3207": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCD1"
    },
    "3210": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3211": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3212": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3214": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "LT",
      "path": "5"
    },
    "3215": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA6"
    },
    "3218": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3219": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "3222": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3223": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3224": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3225": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DIV",
      "path": "5"
    },
    "3226": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "MUL",
      "path": "5"
    },
    "3227": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3228": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3229": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3230": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3232": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "ADD",
      "path": "5"
    },
    "3233": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3234": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCD1"
    },
    "3237": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3238": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3239": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3240": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "ADD",
      "path": "5"
    },
    "3241": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3242": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3243": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3245": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3246": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3248": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3250": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3251": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3252": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3253": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3254": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3255": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3256": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3257": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3258": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3260": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "ADD",
      "path": "5"
    },
    "3261": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3262": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3264": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "ADD",
      "path": "5"
    },
    "3265": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3266": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3267": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "GT",
      "path": "5"
    },
    "3268": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCB4"
    },
    "3271": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3272": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3273": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3274": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SUB",
      "path": "5"
    },
    "3275": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3277": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "AND",
      "path": "5"
    },
    "3278": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3279": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "ADD",
      "path": "5"
    },
    "3280": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3281": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3282": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "POP",
      "path": "5"
    },
    "3283": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "POP",
      "path": "5"
    },
    "3284": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "POP",
      "path": "5"
    },
    "3285": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "POP",
      "path": "5"
    },
    "3286": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "POP",
      "path": "5"
    },
    "3287": {
      "fn": "Splitter._addPayee",
      "offset": [
        1988,
        2035
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3288": {
      "fn": "Splitter._addPayee",
      "jump": "o",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3289": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3290": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3292": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3299": {
      "op": "SHL"
    },
    "3300": {
      "op": "SUB"
    },
    "3301": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3302": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3303": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3304": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD03"
    },
    "3307": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3308": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3310": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3317": {
      "op": "SHL"
    },
    "3318": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3319": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3320": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3322": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3323": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x424"
    },
    "3326": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3327": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1496"
    },
    "3330": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3331": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3338": {
      "op": "SHL"
    },
    "3339": {
      "op": "SUB"
    },
    "3340": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 40
    },
    "3341": {
      "branch": 66,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "3342": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD68"
    },
    "3345": {
      "branch": 66,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3346": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3348": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3355": {
      "op": "SHL"
    },
    "3356": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3357": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3360": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3362": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3363": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "3364": {
      "op": "MSTORE"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3369": {
      "op": "DUP3"
    },
    "3370": {
      "op": "ADD"
    },
    "3371": {
      "op": "MSTORE"
    },
    "3372": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3407": {
      "op": "DUP3"
    },
    "3408": {
      "op": "ADD"
    },
    "3409": {
      "op": "MSTORE"
    },
    "3410": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3419": {
      "op": "SHL"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3422": {
      "op": "DUP3"
    },
    "3423": {
      "op": "ADD"
    },
    "3424": {
      "op": "MSTORE"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3427": {
      "op": "ADD"
    },
    "3428": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x424"
    },
    "3431": {
      "op": "JUMP"
    },
    "3432": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3433": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 41,
      "value": "0xD71"
    },
    "3436": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED0"
    },
    "3440": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3442": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "3443": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3444": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3445": {
      "fn": "Address.sendValue",
      "offset": [
        2526,
        2532
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 42
    },
    "3446": {
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2522
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "3447": {
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2532
      ],
      "op": "LT",
      "path": "3"
    },
    "3448": {
      "branch": 62,
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2532
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3449": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC4"
    },
    "3452": {
      "branch": 62,
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3453": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3455": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3456": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3462": {
      "op": "SHL"
    },
    "3463": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3464": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3467": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3469": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3470": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "ADD",
      "path": "3"
    },
    "3471": {
      "op": "MSTORE"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3476": {
      "op": "DUP3"
    },
    "3477": {
      "op": "ADD"
    },
    "3478": {
      "op": "MSTORE"
    },
    "3479": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3514": {
      "op": "DUP3"
    },
    "3515": {
      "op": "ADD"
    },
    "3516": {
      "op": "MSTORE"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3519": {
      "op": "ADD"
    },
    "3520": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x424"
    },
    "3523": {
      "op": "JUMP"
    },
    "3524": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3525": {
      "fn": "Address.sendValue",
      "offset": [
        2578,
        2590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3527": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2605
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3534": {
      "op": "SHL"
    },
    "3535": {
      "op": "SUB"
    },
    "3536": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2610
      ],
      "op": "AND",
      "path": "3"
    },
    "3537": {
      "fn": "Address.sendValue",
      "offset": [
        2618,
        2624
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3538": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3540": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3541": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3543": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3545": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3546": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3547": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3548": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SUB",
      "path": "3"
    },
    "3549": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3550": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3551": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3552": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "GAS",
      "path": "3"
    },
    "3553": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "CALL",
      "path": "3"
    },
    "3554": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3555": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "3556": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "3557": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "3558": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3559": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3560": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3562": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3563": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "EQ",
      "path": "3"
    },
    "3564": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE11"
    },
    "3567": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3568": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3570": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3571": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3572": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "3573": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3575": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "NOT",
      "path": "3"
    },
    "3576": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "3578": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3579": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "3"
    },
    "3580": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "AND",
      "path": "3"
    },
    "3581": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3582": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "3"
    },
    "3583": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3585": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3586": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3587": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3588": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3589": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3590": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3592": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3594": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3595": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "3"
    },
    "3596": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3597": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE16"
    },
    "3600": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3601": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3602": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3604": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3605": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "3606": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3607": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "3608": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "3609": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3610": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "3611": {
      "branch": 63,
      "fn": "Address.sendValue",
      "offset": [
        2647,
        2654
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 43
    },
    "3612": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE8D"
    },
    "3615": {
      "branch": 63,
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3616": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3618": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3625": {
      "op": "SHL"
    },
    "3626": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3627": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3630": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3632": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3633": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "ADD",
      "path": "3"
    },
    "3634": {
      "op": "MSTORE"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3639": {
      "op": "DUP3"
    },
    "3640": {
      "op": "ADD"
    },
    "3641": {
      "op": "MSTORE"
    },
    "3642": {
      "op": "PUSH32",
      "value": "0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3677": {
      "op": "DUP3"
    },
    "3678": {
      "op": "ADD"
    },
    "3679": {
      "op": "MSTORE"
    },
    "3680": {
      "op": "PUSH32",
      "value": "0x6563697069656E74206D61792068617665207265766572746564000000000000"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3715": {
      "op": "DUP3"
    },
    "3716": {
      "op": "ADD"
    },
    "3717": {
      "op": "MSTORE"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3720": {
      "op": "ADD"
    },
    "3721": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x424"
    },
    "3724": {
      "op": "JUMP"
    },
    "3725": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3726": {
      "fn": "Address.sendValue",
      "offset": [
        2483,
        2724
      ],
      "op": "POP",
      "path": "3"
    },
    "3727": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "POP",
      "path": "3"
    },
    "3728": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "POP",
      "path": "3"
    },
    "3729": {
      "fn": "Address.sendValue",
      "jump": "o",
      "offset": [
        2412,
        2724
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3730": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8721,
        8963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3731": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8926,
        8938
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 44,
      "value": "0x1"
    },
    "3733": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8926,
        8938
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3740": {
      "op": "SHL"
    },
    "3741": {
      "op": "SUB"
    },
    "3742": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8922
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3743": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8922
      ],
      "op": "AND",
      "path": "5"
    },
    "3744": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8863,
        8870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3746": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3747": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3748": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3749": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8913
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3751": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3753": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3754": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3756": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3757": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8922
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3758": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8906,
        8922
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3759": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8863,
        8870
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3760": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8863,
        8870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3761": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8941,
        8956
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3762": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8941,
        8956
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3763": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8890,
        8922
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEBC"
    },
    "3766": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8890,
        8922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3767": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8890,
        8903
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3768": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8890,
        8922
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1629"
    },
    "3771": {
      "fn": "Splitter._pendingPayment",
      "jump": "i",
      "offset": [
        8890,
        8922
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3772": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8890,
        8922
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3773": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8889,
        8938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEC6"
    },
    "3776": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8889,
        8938
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3777": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8889,
        8938
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3778": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8889,
        8938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1648"
    },
    "3781": {
      "fn": "Splitter._pendingPayment",
      "jump": "i",
      "offset": [
        8889,
        8938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3782": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8889,
        8938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3783": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8889,
        8956
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5A4"
    },
    "3786": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8889,
        8956
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3787": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8889,
        8956
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3788": {
      "fn": "Splitter._pendingPayment",
      "offset": [
        8889,
        8956
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x166A"
    },
    "3791": {
      "fn": "Splitter._pendingPayment",
      "jump": "i",
      "offset": [
        8889,
        8956
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3792": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3793": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3795": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3796": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3803": {
      "op": "SHL"
    },
    "3804": {
      "op": "SUB"
    },
    "3805": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 45
    },
    "3806": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3807": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3814": {
      "op": "SHL"
    },
    "3815": {
      "op": "SUB"
    },
    "3816": {
      "op": "NOT"
    },
    "3817": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3818": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3819": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3820": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "3821": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3822": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3823": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x40"
    },
    "3825": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3826": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3827": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3828": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3829": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "3830": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3831": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3832": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3833": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3866": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3867": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3868": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3869": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3870": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3871": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3872": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3873": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x40"
    },
    "3875": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3876": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3883": {
      "op": "SHL"
    },
    "3884": {
      "op": "SUB"
    },
    "3885": {
      "op": "DUP5"
    },
    "3886": {
      "op": "DUP2"
    },
    "3887": {
      "op": "AND"
    },
    "3888": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3890": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3891": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3892": {
      "op": "MSTORE"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3895": {
      "op": "DUP1"
    },
    "3896": {
      "op": "DUP4"
    },
    "3897": {
      "op": "ADD"
    },
    "3898": {
      "op": "DUP6"
    },
    "3899": {
      "op": "SWAP1"
    },
    "3900": {
      "op": "MSTORE"
    },
    "3901": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3902": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3903": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3904": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3905": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "2"
    },
    "3906": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3907": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3908": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3909": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3910": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3913": {
      "op": "SWAP1"
    },
    "3914": {
      "op": "SWAP3"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3917": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3918": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3920": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3921": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3922": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3923": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3924": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3931": {
      "op": "SHL"
    },
    "3932": {
      "op": "SUB"
    },
    "3933": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "2"
    },
    "3934": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3941": {
      "op": "SHL"
    },
    "3942": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "2"
    },
    "3943": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3944": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3946": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3947": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3948": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3949": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3950": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3951": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3952": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3954": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3955": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3989": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3990": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3991": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3992": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3993": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE8D"
    },
    "3996": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3997": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3998": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3999": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4002": {
      "op": "SWAP2"
    },
    "4003": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB0"
    },
    "4006": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4007": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4008": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "2"
    },
    "4009": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4010": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4011": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4012": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x102D"
    },
    "4015": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4016": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4017": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4018": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4019": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4020": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4021": {
      "op": "POP"
    },
    "4022": {
      "branch": 67,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4023": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE8D"
    },
    "4026": {
      "branch": 67,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4027": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 48
    },
    "4028": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4029": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4031": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "4032": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4033": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4034": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4035": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "4036": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4037": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFCE"
    },
    "4040": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4041": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4042": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1681"
    },
    "4045": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4046": {
      "branch": 68,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4047": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE8D"
    },
    "4050": {
      "branch": 68,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4051": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4053": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4060": {
      "op": "SHL"
    },
    "4061": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4062": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4065": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4067": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4068": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "2"
    },
    "4069": {
      "op": "MSTORE"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4074": {
      "op": "DUP3"
    },
    "4075": {
      "op": "ADD"
    },
    "4076": {
      "op": "MSTORE"
    },
    "4077": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4112": {
      "op": "DUP3"
    },
    "4113": {
      "op": "ADD"
    },
    "4114": {
      "op": "MSTORE"
    },
    "4115": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "4128": {
      "op": "SHL"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4131": {
      "op": "DUP3"
    },
    "4132": {
      "op": "ADD"
    },
    "4133": {
      "op": "MSTORE"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4136": {
      "op": "ADD"
    },
    "4137": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x424"
    },
    "4140": {
      "op": "JUMP"
    },
    "4141": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4142": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4144": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 49,
      "value": "0x5A4"
    },
    "4147": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4148": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4149": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4151": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4152": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4159": {
      "op": "SHL"
    },
    "4160": {
      "op": "SUB"
    },
    "4161": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 50
    },
    "4162": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "3"
    },
    "4163": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "4164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 51,
      "value": "0x108F"
    },
    "4167": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4168": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4170": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4177": {
      "op": "SHL"
    },
    "4178": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4179": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4182": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4184": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4185": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "3"
    },
    "4186": {
      "op": "MSTORE"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4191": {
      "op": "DUP3"
    },
    "4192": {
      "op": "ADD"
    },
    "4193": {
      "op": "MSTORE"
    },
    "4194": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4229": {
      "op": "DUP3"
    },
    "4230": {
      "op": "ADD"
    },
    "4231": {
      "op": "MSTORE"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4234": {
      "op": "ADD"
    },
    "4235": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x424"
    },
    "4238": {
      "op": "JUMP"
    },
    "4239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4240": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4242": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4243": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4250": {
      "op": "SHL"
    },
    "4251": {
      "op": "SUB"
    },
    "4252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "3"
    },
    "4253": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4254": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4255": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4257": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10AB"
    },
    "4261": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4262": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4263": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16A3"
    },
    "4266": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4267": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4268": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4270": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4272": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4273": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4275": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "3"
    },
    "4276": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4278": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "3"
    },
    "4280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "3"
    },
    "4281": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4285": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4286": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4287": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4289": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "3"
    },
    "4291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10E8"
    },
    "4294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4295": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4297": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4302": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "3"
    },
    "4303": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "4305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "4307": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "3"
    },
    "4308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4309": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "4310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4312": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4317": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4319": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "4323": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4324": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10ED"
    },
    "4327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4328": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4329": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4331": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4332": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4333": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4334": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4335": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4336": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4337": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4338": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4339": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 52,
      "value": "0x10FD"
    },
    "4342": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4343": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4344": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4345": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1108"
    },
    "4348": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4349": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4350": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "4351": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "4352": {
      "op": "POP"
    },
    "4353": {
      "op": "POP"
    },
    "4354": {
      "op": "POP"
    },
    "4355": {
      "op": "POP"
    },
    "4356": {
      "op": "POP"
    },
    "4357": {
      "op": "POP"
    },
    "4358": {
      "op": "POP"
    },
    "4359": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4360": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4361": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4363": {
      "branch": 64,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4364": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4365": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1117"
    },
    "4368": {
      "branch": 64,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4369": {
      "op": "POP"
    },
    "4370": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 53
    },
    "4371": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64E"
    },
    "4374": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4375": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4376": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4377": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4378": {
      "branch": 65,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4379": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1127"
    },
    "4382": {
      "branch": 65,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4383": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4384": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4385": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4386": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4387": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4389": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "3"
    },
    "4390": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4391": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4392": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 54
    },
    "4393": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4395": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4396": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4402": {
      "op": "SHL"
    },
    "4403": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4404": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4405": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4407": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "3"
    },
    "4408": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x424"
    },
    "4411": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4412": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4413": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13AB"
    },
    "4416": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4417": {
      "op": "JUMPDEST"
    },
    "4418": {
      "op": "DUP3"
    },
    "4419": {
      "op": "DUP1"
    },
    "4420": {
      "op": "SLOAD"
    },
    "4421": {
      "op": "PUSH2",
      "value": "0x114D"
    },
    "4424": {
      "op": "SWAP1"
    },
    "4425": {
      "op": "PUSH2",
      "value": "0x14E1"
    },
    "4428": {
      "jump": "i",
      "op": "JUMP"
    },
    "4429": {
      "op": "JUMPDEST"
    },
    "4430": {
      "op": "SWAP1"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4438": {
      "op": "KECCAK256"
    },
    "4439": {
      "op": "SWAP1"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4442": {
      "op": "ADD"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4445": {
      "op": "SWAP1"
    },
    "4446": {
      "op": "DIV"
    },
    "4447": {
      "op": "DUP2"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "SWAP3"
    },
    "4450": {
      "op": "DUP3"
    },
    "4451": {
      "op": "PUSH2",
      "value": "0x116F"
    },
    "4454": {
      "op": "JUMPI"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4457": {
      "op": "DUP6"
    },
    "4458": {
      "op": "SSTORE"
    },
    "4459": {
      "op": "PUSH2",
      "value": "0x11B5"
    },
    "4462": {
      "op": "JUMP"
    },
    "4463": {
      "op": "JUMPDEST"
    },
    "4464": {
      "op": "DUP3"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4467": {
      "op": "LT"
    },
    "4468": {
      "op": "PUSH2",
      "value": "0x1188"
    },
    "4471": {
      "op": "JUMPI"
    },
    "4472": {
      "op": "DUP1"
    },
    "4473": {
      "op": "MLOAD"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4476": {
      "op": "NOT"
    },
    "4477": {
      "op": "AND"
    },
    "4478": {
      "op": "DUP4"
    },
    "4479": {
      "op": "DUP1"
    },
    "4480": {
      "op": "ADD"
    },
    "4481": {
      "op": "OR"
    },
    "4482": {
      "op": "DUP6"
    },
    "4483": {
      "op": "SSTORE"
    },
    "4484": {
      "op": "PUSH2",
      "value": "0x11B5"
    },
    "4487": {
      "op": "JUMP"
    },
    "4488": {
      "op": "JUMPDEST"
    },
    "4489": {
      "op": "DUP3"
    },
    "4490": {
      "op": "DUP1"
    },
    "4491": {
      "op": "ADD"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4494": {
      "op": "ADD"
    },
    "4495": {
      "op": "DUP6"
    },
    "4496": {
      "op": "SSTORE"
    },
    "4497": {
      "op": "DUP3"
    },
    "4498": {
      "op": "ISZERO"
    },
    "4499": {
      "op": "PUSH2",
      "value": "0x11B5"
    },
    "4502": {
      "op": "JUMPI"
    },
    "4503": {
      "op": "SWAP2"
    },
    "4504": {
      "op": "DUP3"
    },
    "4505": {
      "op": "ADD"
    },
    "4506": {
      "op": "JUMPDEST"
    },
    "4507": {
      "op": "DUP3"
    },
    "4508": {
      "op": "DUP2"
    },
    "4509": {
      "op": "GT"
    },
    "4510": {
      "op": "ISZERO"
    },
    "4511": {
      "op": "PUSH2",
      "value": "0x11B5"
    },
    "4514": {
      "op": "JUMPI"
    },
    "4515": {
      "op": "DUP3"
    },
    "4516": {
      "op": "MLOAD"
    },
    "4517": {
      "op": "DUP3"
    },
    "4518": {
      "op": "SSTORE"
    },
    "4519": {
      "op": "SWAP2"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4522": {
      "op": "ADD"
    },
    "4523": {
      "op": "SWAP2"
    },
    "4524": {
      "op": "SWAP1"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4527": {
      "op": "ADD"
    },
    "4528": {
      "op": "SWAP1"
    },
    "4529": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "4532": {
      "op": "JUMP"
    },
    "4533": {
      "op": "JUMPDEST"
    },
    "4534": {
      "op": "POP"
    },
    "4535": {
      "op": "PUSH2",
      "value": "0x11C1"
    },
    "4538": {
      "op": "SWAP3"
    },
    "4539": {
      "op": "SWAP2"
    },
    "4540": {
      "op": "POP"
    },
    "4541": {
      "op": "PUSH2",
      "value": "0x11C5"
    },
    "4544": {
      "jump": "i",
      "op": "JUMP"
    },
    "4545": {
      "op": "JUMPDEST"
    },
    "4546": {
      "op": "POP"
    },
    "4547": {
      "op": "SWAP1"
    },
    "4548": {
      "jump": "o",
      "op": "JUMP"
    },
    "4549": {
      "op": "JUMPDEST"
    },
    "4550": {
      "op": "JUMPDEST"
    },
    "4551": {
      "op": "DUP1"
    },
    "4552": {
      "op": "DUP3"
    },
    "4553": {
      "op": "GT"
    },
    "4554": {
      "op": "ISZERO"
    },
    "4555": {
      "op": "PUSH2",
      "value": "0x11C1"
    },
    "4558": {
      "op": "JUMPI"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4561": {
      "op": "DUP2"
    },
    "4562": {
      "op": "SSTORE"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4565": {
      "op": "ADD"
    },
    "4566": {
      "op": "PUSH2",
      "value": "0x11C6"
    },
    "4569": {
      "op": "JUMP"
    },
    "4570": {
      "op": "JUMPDEST"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4577": {
      "op": "SHL"
    },
    "4578": {
      "op": "SUB"
    },
    "4579": {
      "op": "DUP2"
    },
    "4580": {
      "op": "AND"
    },
    "4581": {
      "op": "DUP2"
    },
    "4582": {
      "op": "EQ"
    },
    "4583": {
      "op": "PUSH2",
      "value": "0xD71"
    },
    "4586": {
      "op": "JUMPI"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4589": {
      "op": "DUP1"
    },
    "4590": {
      "op": "REVERT"
    },
    "4591": {
      "op": "JUMPDEST"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4596": {
      "op": "DUP3"
    },
    "4597": {
      "op": "DUP5"
    },
    "4598": {
      "op": "SUB"
    },
    "4599": {
      "op": "SLT"
    },
    "4600": {
      "op": "ISZERO"
    },
    "4601": {
      "op": "PUSH2",
      "value": "0x1201"
    },
    "4604": {
      "op": "JUMPI"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4607": {
      "op": "DUP1"
    },
    "4608": {
      "op": "REVERT"
    },
    "4609": {
      "op": "JUMPDEST"
    },
    "4610": {
      "op": "DUP2"
    },
    "4611": {
      "op": "CALLDATALOAD"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0x64E"
    },
    "4615": {
      "op": "DUP2"
    },
    "4616": {
      "op": "PUSH2",
      "value": "0x11DA"
    },
    "4619": {
      "jump": "i",
      "op": "JUMP"
    },
    "4620": {
      "op": "JUMPDEST"
    },
    "4621": {
      "op": "DUP1"
    },
    "4622": {
      "op": "CALLDATALOAD"
    },
    "4623": {
      "op": "PUSH2",
      "value": "0x1217"
    },
    "4626": {
      "op": "DUP2"
    },
    "4627": {
      "op": "PUSH2",
      "value": "0x11DA"
    },
    "4630": {
      "jump": "i",
      "op": "JUMP"
    },
    "4631": {
      "op": "JUMPDEST"
    },
    "4632": {
      "op": "SWAP2"
    },
    "4633": {
      "op": "SWAP1"
    },
    "4634": {
      "op": "POP"
    },
    "4635": {
      "jump": "o",
      "op": "JUMP"
    },
    "4636": {
      "op": "JUMPDEST"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4639": {
      "op": "DUP1"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4642": {
      "op": "DUP4"
    },
    "4643": {
      "op": "DUP6"
    },
    "4644": {
      "op": "SUB"
    },
    "4645": {
      "op": "SLT"
    },
    "4646": {
      "op": "ISZERO"
    },
    "4647": {
      "op": "PUSH2",
      "value": "0x122F"
    },
    "4650": {
      "op": "JUMPI"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4653": {
      "op": "DUP1"
    },
    "4654": {
      "op": "REVERT"
    },
    "4655": {
      "op": "JUMPDEST"
    },
    "4656": {
      "op": "DUP3"
    },
    "4657": {
      "op": "CALLDATALOAD"
    },
    "4658": {
      "op": "PUSH2",
      "value": "0x123A"
    },
    "4661": {
      "op": "DUP2"
    },
    "4662": {
      "op": "PUSH2",
      "value": "0x11DA"
    },
    "4665": {
      "jump": "i",
      "op": "JUMP"
    },
    "4666": {
      "op": "JUMPDEST"
    },
    "4667": {
      "op": "SWAP2"
    },
    "4668": {
      "op": "POP"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4671": {
      "op": "DUP4"
    },
    "4672": {
      "op": "ADD"
    },
    "4673": {
      "op": "CALLDATALOAD"
    },
    "4674": {
      "op": "PUSH2",
      "value": "0x124A"
    },
    "4677": {
      "op": "DUP2"
    },
    "4678": {
      "op": "PUSH2",
      "value": "0x11DA"
    },
    "4681": {
      "jump": "i",
      "op": "JUMP"
    },
    "4682": {
      "op": "JUMPDEST"
    },
    "4683": {
      "op": "DUP1"
    },
    "4684": {
      "op": "SWAP2"
    },
    "4685": {
      "op": "POP"
    },
    "4686": {
      "op": "POP"
    },
    "4687": {
      "op": "SWAP3"
    },
    "4688": {
      "op": "POP"
    },
    "4689": {
      "op": "SWAP3"
    },
    "4690": {
      "op": "SWAP1"
    },
    "4691": {
      "op": "POP"
    },
    "4692": {
      "jump": "o",
      "op": "JUMP"
    },
    "4693": {
      "op": "JUMPDEST"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4698": {
      "op": "DUP3"
    },
    "4699": {
      "op": "DUP5"
    },
    "4700": {
      "op": "SUB"
    },
    "4701": {
      "op": "SLT"
    },
    "4702": {
      "op": "ISZERO"
    },
    "4703": {
      "op": "PUSH2",
      "value": "0x1267"
    },
    "4706": {
      "op": "JUMPI"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4709": {
      "op": "DUP1"
    },
    "4710": {
      "op": "REVERT"
    },
    "4711": {
      "op": "JUMPDEST"
    },
    "4712": {
      "op": "POP"
    },
    "4713": {
      "op": "CALLDATALOAD"
    },
    "4714": {
      "op": "SWAP2"
    },
    "4715": {
      "op": "SWAP1"
    },
    "4716": {
      "op": "POP"
    },
    "4717": {
      "jump": "o",
      "op": "JUMP"
    },
    "4718": {
      "op": "JUMPDEST"
    },
    "4719": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4726": {
      "op": "SHL"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4729": {
      "op": "MSTORE"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4734": {
      "op": "MSTORE"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4739": {
      "op": "REVERT"
    },
    "4740": {
      "op": "JUMPDEST"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4743": {
      "op": "DUP1"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4748": {
      "op": "DUP5"
    },
    "4749": {
      "op": "DUP7"
    },
    "4750": {
      "op": "SUB"
    },
    "4751": {
      "op": "SLT"
    },
    "4752": {
      "op": "ISZERO"
    },
    "4753": {
      "op": "PUSH2",
      "value": "0x1299"
    },
    "4756": {
      "op": "JUMPI"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4759": {
      "op": "DUP1"
    },
    "4760": {
      "op": "REVERT"
    },
    "4761": {
      "op": "JUMPDEST"
    },
    "4762": {
      "op": "DUP4"
    },
    "4763": {
      "op": "CALLDATALOAD"
    },
    "4764": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4773": {
      "op": "DUP1"
    },
    "4774": {
      "op": "DUP3"
    },
    "4775": {
      "op": "GT"
    },
    "4776": {
      "op": "ISZERO"
    },
    "4777": {
      "op": "PUSH2",
      "value": "0x12B1"
    },
    "4780": {
      "op": "JUMPI"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4783": {
      "op": "DUP1"
    },
    "4784": {
      "op": "REVERT"
    },
    "4785": {
      "op": "JUMPDEST"
    },
    "4786": {
      "op": "DUP2"
    },
    "4787": {
      "op": "DUP7"
    },
    "4788": {
      "op": "ADD"
    },
    "4789": {
      "op": "SWAP2"
    },
    "4790": {
      "op": "POP"
    },
    "4791": {
      "op": "DUP7"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4794": {
      "op": "DUP4"
    },
    "4795": {
      "op": "ADD"
    },
    "4796": {
      "op": "SLT"
    },
    "4797": {
      "op": "PUSH2",
      "value": "0x12C5"
    },
    "4800": {
      "op": "JUMPI"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4803": {
      "op": "DUP1"
    },
    "4804": {
      "op": "REVERT"
    },
    "4805": {
      "op": "JUMPDEST"
    },
    "4806": {
      "op": "DUP2"
    },
    "4807": {
      "op": "CALLDATALOAD"
    },
    "4808": {
      "op": "DUP2"
    },
    "4809": {
      "op": "DUP2"
    },
    "4810": {
      "op": "GT"
    },
    "4811": {
      "op": "ISZERO"
    },
    "4812": {
      "op": "PUSH2",
      "value": "0x12D7"
    },
    "4815": {
      "op": "JUMPI"
    },
    "4816": {
      "op": "PUSH2",
      "value": "0x12D7"
    },
    "4819": {
      "op": "PUSH2",
      "value": "0x126E"
    },
    "4822": {
      "jump": "i",
      "op": "JUMP"
    },
    "4823": {
      "op": "JUMPDEST"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4826": {
      "op": "MLOAD"
    },
    "4827": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4829": {
      "op": "DUP3"
    },
    "4830": {
      "op": "ADD"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4833": {
      "op": "NOT"
    },
    "4834": {
      "op": "SWAP1"
    },
    "4835": {
      "op": "DUP2"
    },
    "4836": {
      "op": "AND"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4839": {
      "op": "ADD"
    },
    "4840": {
      "op": "AND"
    },
    "4841": {
      "op": "DUP2"
    },
    "4842": {
      "op": "ADD"
    },
    "4843": {
      "op": "SWAP1"
    },
    "4844": {
      "op": "DUP4"
    },
    "4845": {
      "op": "DUP3"
    },
    "4846": {
      "op": "GT"
    },
    "4847": {
      "op": "DUP2"
    },
    "4848": {
      "op": "DUP4"
    },
    "4849": {
      "op": "LT"
    },
    "4850": {
      "op": "OR"
    },
    "4851": {
      "op": "ISZERO"
    },
    "4852": {
      "op": "PUSH2",
      "value": "0x12FF"
    },
    "4855": {
      "op": "JUMPI"
    },
    "4856": {
      "op": "PUSH2",
      "value": "0x12FF"
    },
    "4859": {
      "op": "PUSH2",
      "value": "0x126E"
    },
    "4862": {
      "jump": "i",
      "op": "JUMP"
    },
    "4863": {
      "op": "JUMPDEST"
    },
    "4864": {
      "op": "DUP2"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4867": {
      "op": "MSTORE"
    },
    "4868": {
      "op": "DUP3"
    },
    "4869": {
      "op": "DUP2"
    },
    "4870": {
      "op": "MSTORE"
    },
    "4871": {
      "op": "DUP10"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4874": {
      "op": "DUP5"
    },
    "4875": {
      "op": "DUP8"
    },
    "4876": {
      "op": "ADD"
    },
    "4877": {
      "op": "ADD"
    },
    "4878": {
      "op": "GT"
    },
    "4879": {
      "op": "ISZERO"
    },
    "4880": {
      "op": "PUSH2",
      "value": "0x1318"
    },
    "4883": {
      "op": "JUMPI"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4886": {
      "op": "DUP1"
    },
    "4887": {
      "op": "REVERT"
    },
    "4888": {
      "op": "JUMPDEST"
    },
    "4889": {
      "op": "DUP3"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4892": {
      "op": "DUP7"
    },
    "4893": {
      "op": "ADD"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4896": {
      "op": "DUP4"
    },
    "4897": {
      "op": "ADD"
    },
    "4898": {
      "op": "CALLDATACOPY"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4903": {
      "op": "DUP5"
    },
    "4904": {
      "op": "DUP4"
    },
    "4905": {
      "op": "ADD"
    },
    "4906": {
      "op": "ADD"
    },
    "4907": {
      "op": "MSTORE"
    },
    "4908": {
      "op": "DUP1"
    },
    "4909": {
      "op": "SWAP8"
    },
    "4910": {
      "op": "POP"
    },
    "4911": {
      "op": "POP"
    },
    "4912": {
      "op": "POP"
    },
    "4913": {
      "op": "POP"
    },
    "4914": {
      "op": "POP"
    },
    "4915": {
      "op": "POP"
    },
    "4916": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4921": {
      "op": "DUP6"
    },
    "4922": {
      "op": "ADD"
    },
    "4923": {
      "op": "PUSH2",
      "value": "0x120C"
    },
    "4926": {
      "jump": "i",
      "op": "JUMP"
    },
    "4927": {
      "op": "JUMPDEST"
    },
    "4928": {
      "op": "SWAP2"
    },
    "4929": {
      "op": "POP"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4932": {
      "op": "DUP5"
    },
    "4933": {
      "op": "ADD"
    },
    "4934": {
      "op": "CALLDATALOAD"
    },
    "4935": {
      "op": "SWAP1"
    },
    "4936": {
      "op": "POP"
    },
    "4937": {
      "op": "SWAP3"
    },
    "4938": {
      "op": "POP"
    },
    "4939": {
      "op": "SWAP3"
    },
    "4940": {
      "op": "POP"
    },
    "4941": {
      "op": "SWAP3"
    },
    "4942": {
      "jump": "o",
      "op": "JUMP"
    },
    "4943": {
      "op": "JUMPDEST"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4946": {
      "op": "JUMPDEST"
    },
    "4947": {
      "op": "DUP4"
    },
    "4948": {
      "op": "DUP2"
    },
    "4949": {
      "op": "LT"
    },
    "4950": {
      "op": "ISZERO"
    },
    "4951": {
      "op": "PUSH2",
      "value": "0x136A"
    },
    "4954": {
      "op": "JUMPI"
    },
    "4955": {
      "op": "DUP2"
    },
    "4956": {
      "op": "DUP2"
    },
    "4957": {
      "op": "ADD"
    },
    "4958": {
      "op": "MLOAD"
    },
    "4959": {
      "op": "DUP4"
    },
    "4960": {
      "op": "DUP3"
    },
    "4961": {
      "op": "ADD"
    },
    "4962": {
      "op": "MSTORE"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4965": {
      "op": "ADD"
    },
    "4966": {
      "op": "PUSH2",
      "value": "0x1352"
    },
    "4969": {
      "op": "JUMP"
    },
    "4970": {
      "op": "JUMPDEST"
    },
    "4971": {
      "op": "DUP4"
    },
    "4972": {
      "op": "DUP2"
    },
    "4973": {
      "op": "GT"
    },
    "4974": {
      "op": "ISZERO"
    },
    "4975": {
      "op": "PUSH2",
      "value": "0x1379"
    },
    "4978": {
      "op": "JUMPI"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4981": {
      "op": "DUP5"
    },
    "4982": {
      "op": "DUP5"
    },
    "4983": {
      "op": "ADD"
    },
    "4984": {
      "op": "MSTORE"
    },
    "4985": {
      "op": "JUMPDEST"
    },
    "4986": {
      "op": "POP"
    },
    "4987": {
      "op": "POP"
    },
    "4988": {
      "op": "POP"
    },
    "4989": {
      "op": "POP"
    },
    "4990": {
      "jump": "o",
      "op": "JUMP"
    },
    "4991": {
      "op": "JUMPDEST"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4994": {
      "op": "DUP2"
    },
    "4995": {
      "op": "MLOAD"
    },
    "4996": {
      "op": "DUP1"
    },
    "4997": {
      "op": "DUP5"
    },
    "4998": {
      "op": "MSTORE"
    },
    "4999": {
      "op": "PUSH2",
      "value": "0x1397"
    },
    "5002": {
      "op": "DUP2"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5005": {
      "op": "DUP7"
    },
    "5006": {
      "op": "ADD"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5009": {
      "op": "DUP7"
    },
    "5010": {
      "op": "ADD"
    },
    "5011": {
      "op": "PUSH2",
      "value": "0x134F"
    },
    "5014": {
      "jump": "i",
      "op": "JUMP"
    },
    "5015": {
      "op": "JUMPDEST"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5018": {
      "op": "ADD"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5021": {
      "op": "NOT"
    },
    "5022": {
      "op": "AND"
    },
    "5023": {
      "op": "SWAP3"
    },
    "5024": {
      "op": "SWAP1"
    },
    "5025": {
      "op": "SWAP3"
    },
    "5026": {
      "op": "ADD"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5029": {
      "op": "ADD"
    },
    "5030": {
      "op": "SWAP3"
    },
    "5031": {
      "op": "SWAP2"
    },
    "5032": {
      "op": "POP"
    },
    "5033": {
      "op": "POP"
    },
    "5034": {
      "jump": "o",
      "op": "JUMP"
    },
    "5035": {
      "op": "JUMPDEST"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5038": {
      "op": "DUP2"
    },
    "5039": {
      "op": "MSTORE"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5042": {
      "op": "PUSH2",
      "value": "0x64E"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5047": {
      "op": "DUP4"
    },
    "5048": {
      "op": "ADD"
    },
    "5049": {
      "op": "DUP5"
    },
    "5050": {
      "op": "PUSH2",
      "value": "0x137F"
    },
    "5053": {
      "jump": "i",
      "op": "JUMP"
    },
    "5054": {
      "op": "JUMPDEST"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5057": {
      "op": "DUP1"
    },
    "5058": {
      "op": "DUP3"
    },
    "5059": {
      "op": "MSTORE"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5062": {
      "op": "SWAP1"
    },
    "5063": {
      "op": "DUP3"
    },
    "5064": {
      "op": "ADD"
    },
    "5065": {
      "op": "MSTORE"
    },
    "5066": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E7420686173206E6F20"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5101": {
      "op": "DUP3"
    },
    "5102": {
      "op": "ADD"
    },
    "5103": {
      "op": "MSTORE"
    },
    "5104": {
      "op": "PUSH6",
      "value": "0x736861726573"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5113": {
      "op": "SHL"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5116": {
      "op": "DUP3"
    },
    "5117": {
      "op": "ADD"
    },
    "5118": {
      "op": "MSTORE"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5121": {
      "op": "ADD"
    },
    "5122": {
      "op": "SWAP1"
    },
    "5123": {
      "jump": "o",
      "op": "JUMP"
    },
    "5124": {
      "op": "JUMPDEST"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5127": {
      "op": "DUP1"
    },
    "5128": {
      "op": "DUP3"
    },
    "5129": {
      "op": "MSTORE"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "5132": {
      "op": "SWAP1"
    },
    "5133": {
      "op": "DUP3"
    },
    "5134": {
      "op": "ADD"
    },
    "5135": {
      "op": "MSTORE"
    },
    "5136": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E74206973206E6F7420"
    },
    "5169": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5171": {
      "op": "DUP3"
    },
    "5172": {
      "op": "ADD"
    },
    "5173": {
      "op": "MSTORE"
    },
    "5174": {
      "op": "PUSH11",
      "value": "0x191D59481C185E5B595B9D"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "5188": {
      "op": "SHL"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5191": {
      "op": "DUP3"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "MSTORE"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5196": {
      "op": "ADD"
    },
    "5197": {
      "op": "SWAP1"
    },
    "5198": {
      "jump": "o",
      "op": "JUMP"
    },
    "5199": {
      "op": "JUMPDEST"
    },
    "5200": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5207": {
      "op": "SHL"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5210": {
      "op": "MSTORE"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5215": {
      "op": "MSTORE"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5220": {
      "op": "REVERT"
    },
    "5221": {
      "op": "JUMPDEST"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5224": {
      "op": "DUP3"
    },
    "5225": {
      "op": "NOT"
    },
    "5226": {
      "op": "DUP3"
    },
    "5227": {
      "op": "GT"
    },
    "5228": {
      "op": "ISZERO"
    },
    "5229": {
      "op": "PUSH2",
      "value": "0x1478"
    },
    "5232": {
      "op": "JUMPI"
    },
    "5233": {
      "op": "PUSH2",
      "value": "0x1478"
    },
    "5236": {
      "op": "PUSH2",
      "value": "0x144F"
    },
    "5239": {
      "jump": "i",
      "op": "JUMP"
    },
    "5240": {
      "op": "JUMPDEST"
    },
    "5241": {
      "op": "POP"
    },
    "5242": {
      "op": "ADD"
    },
    "5243": {
      "op": "SWAP1"
    },
    "5244": {
      "jump": "o",
      "op": "JUMP"
    },
    "5245": {
      "op": "JUMPDEST"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5250": {
      "op": "DUP3"
    },
    "5251": {
      "op": "DUP5"
    },
    "5252": {
      "op": "SUB"
    },
    "5253": {
      "op": "SLT"
    },
    "5254": {
      "op": "ISZERO"
    },
    "5255": {
      "op": "PUSH2",
      "value": "0x148F"
    },
    "5258": {
      "op": "JUMPI"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5261": {
      "op": "DUP1"
    },
    "5262": {
      "op": "REVERT"
    },
    "5263": {
      "op": "JUMPDEST"
    },
    "5264": {
      "op": "POP"
    },
    "5265": {
      "op": "MLOAD"
    },
    "5266": {
      "op": "SWAP2"
    },
    "5267": {
      "op": "SWAP1"
    },
    "5268": {
      "op": "POP"
    },
    "5269": {
      "jump": "o",
      "op": "JUMP"
    },
    "5270": {
      "op": "JUMPDEST"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5273": {
      "op": "DUP1"
    },
    "5274": {
      "op": "DUP3"
    },
    "5275": {
      "op": "MSTORE"
    },
    "5276": {
      "op": "DUP2"
    },
    "5277": {
      "op": "DUP2"
    },
    "5278": {
      "op": "ADD"
    },
    "5279": {
      "op": "MSTORE"
    },
    "5280": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5315": {
      "op": "DUP3"
    },
    "5316": {
      "op": "ADD"
    },
    "5317": {
      "op": "MSTORE"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5320": {
      "op": "ADD"
    },
    "5321": {
      "op": "SWAP1"
    },
    "5322": {
      "jump": "o",
      "op": "JUMP"
    },
    "5323": {
      "op": "JUMPDEST"
    },
    "5324": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5331": {
      "op": "SHL"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5334": {
      "op": "MSTORE"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5339": {
      "op": "MSTORE"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5344": {
      "op": "REVERT"
    },
    "5345": {
      "op": "JUMPDEST"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5348": {
      "op": "DUP2"
    },
    "5349": {
      "op": "DUP2"
    },
    "5350": {
      "op": "SHR"
    },
    "5351": {
      "op": "SWAP1"
    },
    "5352": {
      "op": "DUP3"
    },
    "5353": {
      "op": "AND"
    },
    "5354": {
      "op": "DUP1"
    },
    "5355": {
      "op": "PUSH2",
      "value": "0x14F5"
    },
    "5358": {
      "op": "JUMPI"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5361": {
      "op": "DUP3"
    },
    "5362": {
      "op": "AND"
    },
    "5363": {
      "op": "SWAP2"
    },
    "5364": {
      "op": "POP"
    },
    "5365": {
      "op": "JUMPDEST"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5368": {
      "op": "DUP3"
    },
    "5369": {
      "op": "LT"
    },
    "5370": {
      "op": "DUP2"
    },
    "5371": {
      "op": "EQ"
    },
    "5372": {
      "op": "ISZERO"
    },
    "5373": {
      "op": "PUSH2",
      "value": "0x1516"
    },
    "5376": {
      "op": "JUMPI"
    },
    "5377": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5384": {
      "op": "SHL"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5387": {
      "op": "MSTORE"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5392": {
      "op": "MSTORE"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5397": {
      "op": "REVERT"
    },
    "5398": {
      "op": "JUMPDEST"
    },
    "5399": {
      "op": "POP"
    },
    "5400": {
      "op": "SWAP2"
    },
    "5401": {
      "op": "SWAP1"
    },
    "5402": {
      "op": "POP"
    },
    "5403": {
      "jump": "o",
      "op": "JUMP"
    },
    "5404": {
      "op": "JUMPDEST"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5411": {
      "op": "SHL"
    },
    "5412": {
      "op": "SUB"
    },
    "5413": {
      "op": "DUP5"
    },
    "5414": {
      "op": "AND"
    },
    "5415": {
      "op": "DUP2"
    },
    "5416": {
      "op": "MSTORE"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5419": {
      "op": "DUP1"
    },
    "5420": {
      "op": "DUP3"
    },
    "5421": {
      "op": "ADD"
    },
    "5422": {
      "op": "DUP5"
    },
    "5423": {
      "op": "SWAP1"
    },
    "5424": {
      "op": "MSTORE"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5429": {
      "op": "DUP4"
    },
    "5430": {
      "op": "ADD"
    },
    "5431": {
      "op": "MSTORE"
    },
    "5432": {
      "op": "DUP3"
    },
    "5433": {
      "op": "SLOAD"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5436": {
      "op": "SWAP2"
    },
    "5437": {
      "op": "SWAP1"
    },
    "5438": {
      "op": "DUP3"
    },
    "5439": {
      "op": "SWAP1"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5442": {
      "op": "DUP2"
    },
    "5443": {
      "op": "DUP2"
    },
    "5444": {
      "op": "SHR"
    },
    "5445": {
      "op": "SWAP1"
    },
    "5446": {
      "op": "DUP3"
    },
    "5447": {
      "op": "DUP2"
    },
    "5448": {
      "op": "AND"
    },
    "5449": {
      "op": "DUP1"
    },
    "5450": {
      "op": "PUSH2",
      "value": "0x1554"
    },
    "5453": {
      "op": "JUMPI"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5456": {
      "op": "DUP4"
    },
    "5457": {
      "op": "AND"
    },
    "5458": {
      "op": "SWAP3"
    },
    "5459": {
      "op": "POP"
    },
    "5460": {
      "op": "JUMPDEST"
    },
    "5461": {
      "op": "DUP6"
    },
    "5462": {
      "op": "DUP4"
    },
    "5463": {
      "op": "LT"
    },
    "5464": {
      "op": "DUP2"
    },
    "5465": {
      "op": "EQ"
    },
    "5466": {
      "op": "ISZERO"
    },
    "5467": {
      "op": "PUSH2",
      "value": "0x1572"
    },
    "5470": {
      "op": "JUMPI"
    },
    "5471": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5478": {
      "op": "SHL"
    },
    "5479": {
      "op": "DUP6"
    },
    "5480": {
      "op": "MSTORE"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5485": {
      "op": "MSTORE"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5488": {
      "op": "DUP6"
    },
    "5489": {
      "op": "REVERT"
    },
    "5490": {
      "op": "JUMPDEST"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5493": {
      "op": "DUP9"
    },
    "5494": {
      "op": "ADD"
    },
    "5495": {
      "op": "DUP4"
    },
    "5496": {
      "op": "SWAP1"
    },
    "5497": {
      "op": "MSTORE"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5500": {
      "op": "DUP9"
    },
    "5501": {
      "op": "ADD"
    },
    "5502": {
      "op": "DUP2"
    },
    "5503": {
      "op": "DUP1"
    },
    "5504": {
      "op": "ISZERO"
    },
    "5505": {
      "op": "PUSH2",
      "value": "0x1591"
    },
    "5508": {
      "op": "JUMPI"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5511": {
      "op": "DUP2"
    },
    "5512": {
      "op": "EQ"
    },
    "5513": {
      "op": "PUSH2",
      "value": "0x15A2"
    },
    "5516": {
      "op": "JUMPI"
    },
    "5517": {
      "op": "PUSH2",
      "value": "0x15CD"
    },
    "5520": {
      "op": "JUMP"
    },
    "5521": {
      "op": "JUMPDEST"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5524": {
      "op": "NOT"
    },
    "5525": {
      "op": "DUP7"
    },
    "5526": {
      "op": "AND"
    },
    "5527": {
      "op": "DUP3"
    },
    "5528": {
      "op": "MSTORE"
    },
    "5529": {
      "op": "DUP8"
    },
    "5530": {
      "op": "DUP3"
    },
    "5531": {
      "op": "ADD"
    },
    "5532": {
      "op": "SWAP7"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "op": "PUSH2",
      "value": "0x15CD"
    },
    "5537": {
      "op": "JUMP"
    },
    "5538": {
      "op": "JUMPDEST"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5541": {
      "op": "DUP12"
    },
    "5542": {
      "op": "DUP2"
    },
    "5543": {
      "op": "MSTORE"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5546": {
      "op": "SWAP1"
    },
    "5547": {
      "op": "KECCAK256"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5550": {
      "op": "JUMPDEST"
    },
    "5551": {
      "op": "DUP7"
    },
    "5552": {
      "op": "DUP2"
    },
    "5553": {
      "op": "LT"
    },
    "5554": {
      "op": "ISZERO"
    },
    "5555": {
      "op": "PUSH2",
      "value": "0x15C7"
    },
    "5558": {
      "op": "JUMPI"
    },
    "5559": {
      "op": "DUP2"
    },
    "5560": {
      "op": "SLOAD"
    },
    "5561": {
      "op": "DUP5"
    },
    "5562": {
      "op": "DUP3"
    },
    "5563": {
      "op": "ADD"
    },
    "5564": {
      "op": "MSTORE"
    },
    "5565": {
      "op": "SWAP1"
    },
    "5566": {
      "op": "DUP6"
    },
    "5567": {
      "op": "ADD"
    },
    "5568": {
      "op": "SWAP1"
    },
    "5569": {
      "op": "DUP10"
    },
    "5570": {
      "op": "ADD"
    },
    "5571": {
      "op": "PUSH2",
      "value": "0x15AE"
    },
    "5574": {
      "op": "JUMP"
    },
    "5575": {
      "op": "JUMPDEST"
    },
    "5576": {
      "op": "DUP4"
    },
    "5577": {
      "op": "ADD"
    },
    "5578": {
      "op": "SWAP8"
    },
    "5579": {
      "op": "POP"
    },
    "5580": {
      "op": "POP"
    },
    "5581": {
      "op": "JUMPDEST"
    },
    "5582": {
      "op": "POP"
    },
    "5583": {
      "op": "SWAP5"
    },
    "5584": {
      "op": "SWAP12"
    },
    "5585": {
      "op": "SWAP11"
    },
    "5586": {
      "op": "POP"
    },
    "5587": {
      "op": "POP"
    },
    "5588": {
      "op": "POP"
    },
    "5589": {
      "op": "POP"
    },
    "5590": {
      "op": "POP"
    },
    "5591": {
      "op": "POP"
    },
    "5592": {
      "op": "POP"
    },
    "5593": {
      "op": "POP"
    },
    "5594": {
      "op": "POP"
    },
    "5595": {
      "op": "POP"
    },
    "5596": {
      "op": "POP"
    },
    "5597": {
      "jump": "o",
      "op": "JUMP"
    },
    "5598": {
      "op": "JUMPDEST"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5603": {
      "op": "NOT"
    },
    "5604": {
      "op": "DUP3"
    },
    "5605": {
      "op": "EQ"
    },
    "5606": {
      "op": "ISZERO"
    },
    "5607": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "5610": {
      "op": "JUMPI"
    },
    "5611": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "5614": {
      "op": "PUSH2",
      "value": "0x144F"
    },
    "5617": {
      "jump": "i",
      "op": "JUMP"
    },
    "5618": {
      "op": "JUMPDEST"
    },
    "5619": {
      "op": "POP"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5622": {
      "op": "ADD"
    },
    "5623": {
      "op": "SWAP1"
    },
    "5624": {
      "jump": "o",
      "op": "JUMP"
    },
    "5625": {
      "op": "JUMPDEST"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5628": {
      "op": "DUP1"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5631": {
      "op": "SHL"
    },
    "5632": {
      "op": "SUB"
    },
    "5633": {
      "op": "DUP5"
    },
    "5634": {
      "op": "AND"
    },
    "5635": {
      "op": "DUP2"
    },
    "5636": {
      "op": "MSTORE"
    },
    "5637": {
      "op": "DUP3"
    },
    "5638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5640": {
      "op": "DUP3"
    },
    "5641": {
      "op": "ADD"
    },
    "5642": {
      "op": "MSTORE"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5647": {
      "op": "DUP3"
    },
    "5648": {
      "op": "ADD"
    },
    "5649": {
      "op": "MSTORE"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5652": {
      "op": "PUSH2",
      "value": "0x1620"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5657": {
      "op": "DUP4"
    },
    "5658": {
      "op": "ADD"
    },
    "5659": {
      "op": "DUP5"
    },
    "5660": {
      "op": "PUSH2",
      "value": "0x137F"
    },
    "5663": {
      "jump": "i",
      "op": "JUMP"
    },
    "5664": {
      "op": "JUMPDEST"
    },
    "5665": {
      "op": "SWAP6"
    },
    "5666": {
      "op": "SWAP5"
    },
    "5667": {
      "op": "POP"
    },
    "5668": {
      "op": "POP"
    },
    "5669": {
      "op": "POP"
    },
    "5670": {
      "op": "POP"
    },
    "5671": {
      "op": "POP"
    },
    "5672": {
      "jump": "o",
      "op": "JUMP"
    },
    "5673": {
      "op": "JUMPDEST"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5676": {
      "op": "DUP2"
    },
    "5677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5679": {
      "op": "NOT"
    },
    "5680": {
      "op": "DIV"
    },
    "5681": {
      "op": "DUP4"
    },
    "5682": {
      "op": "GT"
    },
    "5683": {
      "op": "DUP3"
    },
    "5684": {
      "op": "ISZERO"
    },
    "5685": {
      "op": "ISZERO"
    },
    "5686": {
      "op": "AND"
    },
    "5687": {
      "op": "ISZERO"
    },
    "5688": {
      "op": "PUSH2",
      "value": "0x1643"
    },
    "5691": {
      "op": "JUMPI"
    },
    "5692": {
      "op": "PUSH2",
      "value": "0x1643"
    },
    "5695": {
      "op": "PUSH2",
      "value": "0x144F"
    },
    "5698": {
      "jump": "i",
      "op": "JUMP"
    },
    "5699": {
      "op": "JUMPDEST"
    },
    "5700": {
      "op": "POP"
    },
    "5701": {
      "op": "MUL"
    },
    "5702": {
      "op": "SWAP1"
    },
    "5703": {
      "jump": "o",
      "op": "JUMP"
    },
    "5704": {
      "op": "JUMPDEST"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5707": {
      "op": "DUP3"
    },
    "5708": {
      "op": "PUSH2",
      "value": "0x1665"
    },
    "5711": {
      "op": "JUMPI"
    },
    "5712": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5719": {
      "op": "SHL"
    },
    "5720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5722": {
      "op": "MSTORE"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5727": {
      "op": "MSTORE"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5732": {
      "op": "REVERT"
    },
    "5733": {
      "op": "JUMPDEST"
    },
    "5734": {
      "op": "POP"
    },
    "5735": {
      "op": "DIV"
    },
    "5736": {
      "op": "SWAP1"
    },
    "5737": {
      "jump": "o",
      "op": "JUMP"
    },
    "5738": {
      "op": "JUMPDEST"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5741": {
      "op": "DUP3"
    },
    "5742": {
      "op": "DUP3"
    },
    "5743": {
      "op": "LT"
    },
    "5744": {
      "op": "ISZERO"
    },
    "5745": {
      "op": "PUSH2",
      "value": "0x167C"
    },
    "5748": {
      "op": "JUMPI"
    },
    "5749": {
      "op": "PUSH2",
      "value": "0x167C"
    },
    "5752": {
      "op": "PUSH2",
      "value": "0x144F"
    },
    "5755": {
      "jump": "i",
      "op": "JUMP"
    },
    "5756": {
      "op": "JUMPDEST"
    },
    "5757": {
      "op": "POP"
    },
    "5758": {
      "op": "SUB"
    },
    "5759": {
      "op": "SWAP1"
    },
    "5760": {
      "jump": "o",
      "op": "JUMP"
    },
    "5761": {
      "op": "JUMPDEST"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5766": {
      "op": "DUP3"
    },
    "5767": {
      "op": "DUP5"
    },
    "5768": {
      "op": "SUB"
    },
    "5769": {
      "op": "SLT"
    },
    "5770": {
      "op": "ISZERO"
    },
    "5771": {
      "op": "PUSH2",
      "value": "0x1693"
    },
    "5774": {
      "op": "JUMPI"
    },
    "5775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5777": {
      "op": "DUP1"
    },
    "5778": {
      "op": "REVERT"
    },
    "5779": {
      "op": "JUMPDEST"
    },
    "5780": {
      "op": "DUP2"
    },
    "5781": {
      "op": "MLOAD"
    },
    "5782": {
      "op": "DUP1"
    },
    "5783": {
      "op": "ISZERO"
    },
    "5784": {
      "op": "ISZERO"
    },
    "5785": {
      "op": "DUP2"
    },
    "5786": {
      "op": "EQ"
    },
    "5787": {
      "op": "PUSH2",
      "value": "0x64E"
    },
    "5790": {
      "op": "JUMPI"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5793": {
      "op": "DUP1"
    },
    "5794": {
      "op": "REVERT"
    },
    "5795": {
      "op": "JUMPDEST"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5798": {
      "op": "DUP3"
    },
    "5799": {
      "op": "MLOAD"
    },
    "5800": {
      "op": "PUSH2",
      "value": "0x16B5"
    },
    "5803": {
      "op": "DUP2"
    },
    "5804": {
      "op": "DUP5"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5807": {
      "op": "DUP8"
    },
    "5808": {
      "op": "ADD"
    },
    "5809": {
      "op": "PUSH2",
      "value": "0x134F"
    },
    "5812": {
      "jump": "i",
      "op": "JUMP"
    },
    "5813": {
      "op": "JUMPDEST"
    },
    "5814": {
      "op": "SWAP2"
    },
    "5815": {
      "op": "SWAP1"
    },
    "5816": {
      "op": "SWAP2"
    },
    "5817": {
      "op": "ADD"
    },
    "5818": {
      "op": "SWAP3"
    },
    "5819": {
      "op": "SWAP2"
    },
    "5820": {
      "op": "POP"
    },
    "5821": {
      "op": "POP"
    },
    "5822": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "512cd4be331d931bd5bfb459449afea8b4d9c3bc",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (finance/PaymentSplitter.sol)\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title PaymentSplitter\n * @dev This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware\n * that the Ether will be split in this way, since it is handled transparently by the contract.\n *\n * The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each\n * account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim\n * an amount proportional to the percentage of total shares they were assigned. The distribution of shares is set at the\n * time of contract deployment and can't be updated thereafter.\n *\n * `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the\n * accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release}\n * function.\n *\n * NOTE: This contract assumes that ERC20 tokens will behave similarly to native tokens (Ether). Rebasing tokens, and\n * tokens that apply fees during transfers, are likely to not be supported as expected. If in doubt, we encourage you\n * to run tests before sending real value to this contract.\n */\ncontract Splitter is Context, Ownable {\n    event PayeeAdded(address account, uint256 shares, string name);\n    event PaymentReleased(address to, uint256 amount);\n    event ERC20PaymentReleased(IERC20 indexed token, address to, uint256 amount, string \n    recipient);\n    event PaymentReceived(address from, uint256 amount);\n\n    uint256 private _totalShares;\n    uint256 private _totalReleased;\n\n    mapping(address => string) public addresstoname;\n    mapping(address => uint256) private _shares;\n    mapping(address => uint256) private _released;\n    address[] private _payees;\n\n    mapping(IERC20 => uint256) private _erc20TotalReleased;\n    mapping(IERC20 => mapping(address => uint256)) private _erc20Released;\n\n    /**\n     * @dev Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at\n     * the matching position in the `shares` array.\n     *\n     * All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no\n     * duplicates in `payees`.\n     */\n    constructor(string[] memory _name, address[] memory payees, uint256[] memory shares_) payable {\n        require(payees.length == shares_.length, \"PaymentSplitter: payees and shares length mismatch\");\n        require(payees.length > 0, \"PaymentSplitter: no payees\");\n        require(_name.length == payees.length);\n\n        for (uint256 i = 0; i < payees.length; i++) {\n            _addPayee(_name[i], payees[i], shares_[i]);\n        }\n    }\n\n    /**\n     * @dev The Ether received will be logged with {PaymentReceived} events. Note that these events are not fully\n     * reliable: it's possible for a contract to receive Ether without triggering this function. This only affects the\n     * reliability of the events, and not the actual splitting of Ether.\n     *\n     * To learn more about this see the Solidity documentation for\n     * https://solidity.readthedocs.io/en/latest/contracts.html#fallback-function[fallback\n     * functions].\n     */\n    receive() external payable virtual {\n        emit PaymentReceived(_msgSender(), msg.value);\n    }\n\n    /**\n     * @dev Getter for the total shares held by payees.\n     */\n    function totalShares() public view returns (uint256) {\n        return _totalShares;\n    }\n\n    /**\n     * @dev Getter for the total amount of Ether already released.\n     */\n    function totalReleased() public view returns (uint256) {\n        return _totalReleased;\n    }\n\n    /**\n     * @dev Getter for the total amount of `token` already released. `token` should be the address of an IERC20\n     * contract.\n     */\n    function totalERCReleased(IERC20 token) public view returns (uint256) {\n        return _erc20TotalReleased[token];\n    }\n\n    /**\n     * @dev Getter for the amount of shares held by an account.\n     */\n    function shares(address account) public view returns (uint256) {\n        return _shares[account];\n    }\n\n    /**\n     * @dev Getter for the amount of Ether already released to a payee.\n     */\n    function released(address account) public view returns (uint256) {\n        return _released[account];\n    }\n\n    /**\n     * @dev Getter for the amount of `token` tokens already released to a payee. `token` should be the address of an\n     * IERC20 contract.\n     */\n    function releasedERC(IERC20 token, address account) public view returns (uint256) {\n        return _erc20Released[token][account];\n    }\n\n    /**\n     * @dev Getter for the address of the payee number `index`.\n     */\n    function payee(uint256 index) public view returns (address) {\n        return _payees[index];\n    }\n\n    /**\n     * @dev Getter for the amount of payee's releasable Ether.\n     */\n    function releasable(address account) public view returns (uint256) {\n        uint256 totalReceived = address(this).balance + totalReleased();\n        return _pendingPayment(account, totalReceived, released(account));\n    }\n\n    /**\n     * @dev Getter for the amount of payee's releasable `token` tokens. `token` should be the address of an\n     * IERC20 contract.\n     */\n    function releasableERC(IERC20 token, address account) public view returns (uint256) {\n        uint256 totalReceived = token.balanceOf(address(this)) + totalERCReleased(token);\n        return _pendingPayment(account, totalReceived, releasedERC(token, account));\n    }\n\n    /**\n     * @dev Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the\n     * total shares and their previous withdrawals.\n     */\n    function release(address payable account) public virtual {\n        require(_shares[account] > 0, \"PaymentSplitter: account has no shares\");\n\n        uint256 payment = releasable(account);\n\n        require(payment != 0, \"PaymentSplitter: account is not due payment\");\n\n        // _totalReleased is the sum of all values in _released.\n        // If \"_totalReleased += payment\" does not overflow, then \"_released[account] += payment\" cannot overflow.\n        _totalReleased += payment;\n        unchecked {\n            _released[account] += payment;\n        }\n\n        Address.sendValue(account, payment);\n        emit PaymentReleased(account, payment);\n    }\n\n    /**\n     * @dev Triggers a transfer to `account` of the amount of `token` tokens they are owed, according to their\n     * percentage of the total shares and their previous withdrawals. `token` must be the address of an IERC20\n     * contract.\n     */\n    function releaseERC(IERC20 token, address account) public virtual {\n        require(_shares[account] > 0, \"PaymentSplitter: account has no shares\");\n\n        uint256 payment = releasableERC(token, account);\n\n        require(payment != 0, \"PaymentSplitter: account is not due payment\");\n\n        // _erc20TotalReleased[token] is the sum of all values in _erc20Released[token].\n        // If \"_erc20TotalReleased[token] += payment\" does not overflow, then \"_erc20Released[token][account] += payment\"\n        // cannot overflow.\n        _erc20TotalReleased[token] += payment;\n        unchecked {\n            _erc20Released[token][account] += payment;\n        }\n\n        SafeERC20.safeTransfer(token, account, payment);\n        emit ERC20PaymentReleased(token, account, payment, addresstoname[account]);\n    }\n\n    /**\n     * Function to make the smart contract Bulk\n     */\n\n    function bulkReleaseERC(IERC20 token) public virtual {\n        for (uint256 i = 0; i < _payees.length; i++) {\n            require(_shares[_payees[i]] > 0, \"Account has no shares\");\n\n            uint256 payment = releasableERC(token, _payees[i]);\n\n            require(payment != 0, \"account is not due payment\");\n\n            _erc20TotalReleased[token] += payment;\n\n            unchecked {\n                _erc20Released[token][_payees[i]] += payment;\n            }\n\n            SafeERC20.safeTransfer(token, _payees[i], payment);\n            emit ERC20PaymentReleased(token, _payees[i], payment, addresstoname[_payees[i]]);\n        }\n    }\n\n    /**\n     * @dev internal logic for computing the pending payment of an `account` given the token historical balances and\n     * already released amounts.\n     */\n    function _pendingPayment(\n        address account,\n        uint256 totalReceived,\n        uint256 alreadyReleased\n    ) private view returns (uint256) {\n        return (totalReceived * _shares[account]) / _totalShares - alreadyReleased;\n    }\n\n    /**\n     * @dev Add a new payee to the contract.\n     * @param account The address of the payee to add.\n     * @param shares_ The number of shares owned by the payee.\n     */\n    function _addPayee(string memory _name, address account, uint256 shares_) public onlyOwner {\n        require(account != address(0), \"PaymentSplitter: account is the zero address\");\n        require(shares_ > 0, \"PaymentSplitter: shares are 0\");\n        require(_shares[account] == 0, \"PaymentSplitter: account already has shares\");\n\n        _payees.push(account);\n        _shares[account] = shares_;\n        _totalShares = _totalShares + shares_;\n        addresstoname[account] = _name;\n        emit PayeeAdded(account, shares_, _name);\n    }\n}",
  "sourceMap": "1587:8104:5:-:0;;;2655:440;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;2784:7:5;:14;2767:6;:13;:31;2759:94;;;;-1:-1:-1;;;2759:94:5;;4734:2:6;2759:94:5;;;4716:21:6;4773:2;4753:18;;;4746:30;4812:34;4792:18;;;4785:62;-1:-1:-1;;;4863:18:6;;;4856:48;4921:19;;2759:94:5;;;;;;;;;2887:1;2871:6;:13;:17;2863:56;;;;-1:-1:-1;;;2863:56:5;;5153:2:6;2863:56:5;;;5135:21:6;5192:2;5172:18;;;5165:30;5231:28;5211:18;;;5204:56;5277:18;;2863:56:5;4951:350:6;2863:56:5;2953:6;:13;2937:5;:12;:29;2929:38;;;;;;2983:9;2978:111;3002:6;:13;2998:1;:17;2978:111;;;3036:42;3046:5;3052:1;3046:8;;;;;;;;:::i;:::-;;;;;;;3056:6;3063:1;3056:9;;;;;;;;:::i;:::-;;;;;;;3067:7;3075:1;3067:10;;;;;;;;:::i;:::-;;;;;;;3036:9;;;:42;;:::i;:::-;3017:3;;;;:::i;:::-;;;;2978:111;;;;2655:440;;;1587:8104;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;9148:541:5:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;5912:2:6;1240:68:0;;;5894:21:6;;;5931:18;;;5924:30;5990:34;5970:18;;;5963:62;6042:18;;1240:68:0;5710:356:6;1240:68:0;-1:-1:-1;;;;;9257:21:5;::::1;9249:78;;;::::0;-1:-1:-1;;;9249:78:5;;6273:2:6;9249:78:5::1;::::0;::::1;6255:21:6::0;6312:2;6292:18;;;6285:30;6351:34;6331:18;;;6324:62;-1:-1:-1;;;6402:18:6;;;6395:42;6454:19;;9249:78:5::1;6071:408:6::0;9249:78:5::1;9355:1;9345:7;:11;9337:53;;;::::0;-1:-1:-1;;;9337:53:5;;6686:2:6;9337:53:5::1;::::0;::::1;6668:21:6::0;6725:2;6705:18;;;6698:30;6764:31;6744:18;;;6737:59;6813:18;;9337:53:5::1;6484:353:6::0;9337:53:5::1;-1:-1:-1::0;;;;;9408:16:5;::::1;;::::0;;;:7:::1;:16;::::0;;;;;:21;9400:77:::1;;;::::0;-1:-1:-1;;;9400:77:5;;7044:2:6;9400:77:5::1;::::0;::::1;7026:21:6::0;7083:2;7063:18;;;7056:30;7122:34;7102:18;;;7095:62;-1:-1:-1;;;7173:18:6;;;7166:41;7224:19;;9400:77:5::1;6842:407:6::0;9400:77:5::1;9488:7;:21:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;9488:21:5::1;-1:-1:-1::0;;;;;9488:21:5;::::1;::::0;;::::1;::::0;;;-1:-1:-1;9519:16:5;;;:7:::1;9488:21;9519:16:::0;;;;:26;;;9570:12;:22:::1;::::0;9519:26;;9570:22:::1;:::i;:::-;9555:12;:37:::0;-1:-1:-1;;;;;9602:22:5;::::1;;::::0;;;:13:::1;:22;::::0;;;;;;;:30;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;9647:35;9658:7;9667;9676:5;9647:35;;;;;;;;:::i;:::-;;;;;;;;9148:541:::0;;;:::o;1587:8104::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1587:8104:5;;;-1:-1:-1;1587:8104:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:6;247:40;;-1:-1:-1;;;;;302:34:6;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:6:o;426:182::-;485:4;-1:-1:-1;;;;;507:30:6;;504:56;;;540:18;;:::i;:::-;-1:-1:-1;585:1:6;581:14;597:4;577:25;;426:182::o;613:258::-;685:1;695:113;709:6;706:1;703:13;695:113;;;785:11;;;779:18;766:11;;;759:39;731:2;724:10;695:113;;;826:6;823:1;820:13;817:48;;;861:1;852:6;847:3;843:16;836:27;817:48;;613:258;;;:::o;876:842::-;941:5;994:3;987:4;979:6;975:17;971:27;961:55;;1012:1;1009;1002:12;961:55;1041:6;1035:13;1067:4;1091:59;1107:42;1146:2;1107:42;:::i;:::-;1091:59;:::i;:::-;1184:15;;;1270:1;1266:10;;;;1254:23;;1250:32;;;1215:12;;;;1294:15;;;1291:35;;;1322:1;1319;1312:12;1291:35;1358:2;1350:6;1346:15;1370:319;1386:6;1381:3;1378:15;1370:319;;;1453:10;;-1:-1:-1;;;;;1496:31:6;;1486:42;;1476:140;;1570:1;1599:2;1595;1588:14;1476:140;1629:18;;1667:12;;;;1403;;1370:319;;;-1:-1:-1;1707:5:6;876:842;-1:-1:-1;;;;;;876:842:6:o;1723:658::-;1788:5;1841:3;1834:4;1826:6;1822:17;1818:27;1808:55;;1859:1;1856;1849:12;1808:55;1888:6;1882:13;1914:4;1938:59;1954:42;1993:2;1954:42;:::i;1938:59::-;2031:15;;;2117:1;2113:10;;;;2101:23;;2097:32;;;2062:12;;;;2141:15;;;2138:35;;;2169:1;2166;2159:12;2138:35;2205:2;2197:6;2193:15;2217:135;2233:6;2228:3;2225:15;2217:135;;;2299:10;;2287:23;;2330:12;;;;2250;;2217:135;;2386:2141;2559:6;2567;2575;2628:2;2616:9;2607:7;2603:23;2599:32;2596:52;;;2644:1;2641;2634:12;2596:52;2671:16;;-1:-1:-1;;;;;2736:14:6;;;2733:34;;;2763:1;2760;2753:12;2733:34;2801:6;2790:9;2786:22;2776:32;;2846:7;2839:4;2835:2;2831:13;2827:27;2817:55;;2868:1;2865;2858:12;2817:55;2897:2;2891:9;2919:4;2943:59;2959:42;2998:2;2959:42;:::i;2943:59::-;3036:15;;;3118:1;3114:10;;;;3106:19;;3102:28;;;3067:12;;;;3142:19;;;3139:39;;;3174:1;3171;3164:12;3139:39;3206:2;3202;3198:11;3218:903;3234:6;3229:3;3226:15;3218:903;;;3313:3;3307:10;3349:2;3336:11;3333:19;3330:109;;;3393:1;3422:2;3418;3411:14;3330:109;3462:20;;3517:2;3509:11;;3505:25;-1:-1:-1;3495:123:6;;3572:1;3601:2;3597;3590:14;3495:123;3655:2;3651;3647:11;3641:18;3682:2;3707;3703;3700:10;3697:36;;;3713:18;;:::i;:::-;3759:53;3802:2;3783:13;;-1:-1:-1;;3779:27:6;3775:36;;3759:53;:::i;:::-;3839:2;3832:5;3825:17;3883:7;3878:2;3873;3869;3865:11;3861:20;3858:33;3855:126;;;3933:1;3963:3;3958;3951:16;3855:126;3994:54;4045:2;4040;4033:5;4029:14;4024:2;4020;4016:11;3994:54;:::i;:::-;4061:18;;-1:-1:-1;;;4099:12:6;;;;3251;;3218:903;;;-1:-1:-1;4176:18:6;;;4170:25;4140:5;;-1:-1:-1;4170:25:6;;-1:-1:-1;;;4207:16:6;;;4204:36;;;4236:1;4233;4226:12;4204:36;4259:74;4325:7;4314:8;4303:9;4299:24;4259:74;:::i;:::-;4249:84;;4379:2;4368:9;4364:18;4358:25;4342:41;;4408:2;4398:8;4395:16;4392:36;;;4424:1;4421;4414:12;4392:36;;4447:74;4513:7;4502:8;4491:9;4487:24;4447:74;:::i;:::-;4437:84;;;2386:2141;;;;;:::o;5306:127::-;5367:10;5362:3;5358:20;5355:1;5348:31;5398:4;5395:1;5388:15;5422:4;5419:1;5412:15;5438:127;5499:10;5494:3;5490:20;5487:1;5480:31;5530:4;5527:1;5520:15;5554:4;5551:1;5544:15;5570:135;5609:3;-1:-1:-1;;5630:17:6;;5627:43;;;5650:18;;:::i;:::-;-1:-1:-1;5697:1:6;5686:13;;5570:135::o;7254:128::-;7294:3;7325:1;7321:6;7318:1;7315:13;7312:39;;;7331:18;;:::i;:::-;-1:-1:-1;7367:9:6;;7254:128::o;7387:553::-;7621:1;7617;7612:3;7608:11;7604:19;7596:6;7592:32;7581:9;7574:51;7661:6;7656:2;7645:9;7641:18;7634:34;7704:2;7699;7688:9;7684:18;7677:30;7555:4;7736:6;7730:13;7779:6;7774:2;7763:9;7759:18;7752:34;7795:67;7855:6;7849:3;7838:9;7834:19;7829:2;7821:6;7817:15;7795:67;:::i;:::-;7923:2;7902:15;-1:-1:-1;;7898:29:6;7883:45;;;;7930:3;7879:55;;7387:553;-1:-1:-1;;;;7387:553:6:o;7945:380::-;8024:1;8020:12;;;;8067;;;8088:61;;8142:4;8134:6;8130:17;8120:27;;8088:61;8195:2;8187:6;8184:14;8164:18;8161:38;8158:161;;;8241:10;8236:3;8232:20;8229:1;8222:31;8276:4;8273:1;8266:15;8304:4;8301:1;8294:15;8158:161;;7945:380;;;:::o;:::-;1587:8104:5;;;;;;",
  "sourcePath": "contracts/splitter.sol",
  "type": "contract"
}